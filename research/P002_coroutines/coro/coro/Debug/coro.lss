
coro.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000054  00800100  00004786  0000481a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00004786  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000c9  00800154  00800154  0000486e  2**0
                  ALLOC
  3 .comment      00000012  00000000  00000000  0000486e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004880  2**2
                  CONTENTS, READONLY, OCTETS
  5 .debug_aranges 000004d8  00000000  00000000  000048c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_info   00004ea2  00000000  00000000  00004d98  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_abbrev 00000fc0  00000000  00000000  00009c3a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   00003149  00000000  00000000  0000abfa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_frame  00001390  00000000  00000000  0000dd44  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_str    00010323  00000000  00000000  0000f0d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line_str 00000640  00000000  00000000  0001f3f7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_macro  00003a6c  00000000  00000000  0001fa37  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_rnglists 0000036b  00000000  00000000  000234a3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 19 06 	jmp	0xc32	; 0xc32 <__vector_16>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 e1 04 	jmp	0x9c2	; 0x9c2 <__vector_18>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 16 05 	jmp	0xa2c	; 0xa2c <__vector_20>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1

00000076 <.Loc.1>:
      76:	a0 e0       	ldi	r26, 0x00	; 0

00000078 <.Loc.2>:
      78:	b1 e0       	ldi	r27, 0x01	; 1

0000007a <.Loc.3>:
      7a:	e6 e8       	ldi	r30, 0x86	; 134

0000007c <.Loc.4>:
      7c:	f7 e4       	ldi	r31, 0x47	; 71

0000007e <.Loc.5>:
      7e:	02 c0       	rjmp	.+4      	; 0x84 <.L__do_copy_data_start>

00000080 <.L__do_copy_data_loop>:
      80:	05 90       	lpm	r0, Z+

00000082 <.Loc.7>:
      82:	0d 92       	st	X+, r0

00000084 <.L__do_copy_data_start>:
      84:	a4 35       	cpi	r26, 0x54	; 84

00000086 <.Loc.9>:
      86:	b1 07       	cpc	r27, r17

00000088 <.Loc.10>:
      88:	d9 f7       	brne	.-10     	; 0x80 <.L__do_copy_data_loop>

0000008a <__do_clear_bss>:
      8a:	22 e0       	ldi	r18, 0x02	; 2

0000008c <.Loc.1>:
      8c:	a4 e5       	ldi	r26, 0x54	; 84

0000008e <.Loc.2>:
      8e:	b1 e0       	ldi	r27, 0x01	; 1

00000090 <.Loc.3>:
      90:	01 c0       	rjmp	.+2      	; 0x94 <.Loc.5>

00000092 <.Loc.4>:
      92:	1d 92       	st	X+, r1

00000094 <.Loc.5>:
      94:	ad 31       	cpi	r26, 0x1D	; 29

00000096 <.Loc.6>:
      96:	b2 07       	cpc	r27, r18

00000098 <.Loc.7>:
      98:	e1 f7       	brne	.-8      	; 0x92 <.Loc.4>

0000009a <L0^A>:
      9a:	0e 94 c1 0f 	call	0x1f82	; 0x1f82 <main>
      9e:	0c 94 87 23 	jmp	0x470e	; 0x470e <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__cxa_guard_acquire>:
extern "C" int __cxa_guard_acquire(__guard *);
extern "C" void __cxa_guard_release (__guard *);
extern "C" void __cxa_guard_abort (__guard *);
extern "C" void __cxa_pure_virtual(void);

int __cxa_guard_acquire(__guard *g) {return !*(char *)(g);};
      a6:	cf 93       	push	r28
      a8:	df 93       	push	r29
      aa:	00 d0       	rcall	.+0      	; 0xac <L0^A>

000000ac <L0^A>:
      ac:	cd b7       	in	r28, 0x3d	; 61
      ae:	de b7       	in	r29, 0x3e	; 62
      b0:	9a 83       	std	Y+2, r25	; 0x02
      b2:	89 83       	std	Y+1, r24	; 0x01

000000b4 <.Loc.1>:
      b4:	89 81       	ldd	r24, Y+1	; 0x01
      b6:	9a 81       	ldd	r25, Y+2	; 0x02
      b8:	fc 01       	movw	r30, r24
      ba:	90 81       	ld	r25, Z

000000bc <.Loc.2>:
      bc:	81 e0       	ldi	r24, 0x01	; 1
      be:	99 23       	and	r25, r25
      c0:	09 f0       	breq	.+2      	; 0xc4 <.L2>
      c2:	80 e0       	ldi	r24, 0x00	; 0

000000c4 <.L2>:
      c4:	88 2f       	mov	r24, r24
      c6:	90 e0       	ldi	r25, 0x00	; 0

000000c8 <.Loc.4>:
      c8:	0f 90       	pop	r0
      ca:	0f 90       	pop	r0
      cc:	df 91       	pop	r29
      ce:	cf 91       	pop	r28
      d0:	08 95       	ret

000000d2 <__cxa_guard_release>:
void __cxa_guard_release (__guard *g) {*(char *)g = 1;};
      d2:	cf 93       	push	r28
      d4:	df 93       	push	r29
      d6:	00 d0       	rcall	.+0      	; 0xd8 <L0^A>

000000d8 <L0^A>:
      d8:	cd b7       	in	r28, 0x3d	; 61
      da:	de b7       	in	r29, 0x3e	; 62
      dc:	9a 83       	std	Y+2, r25	; 0x02
      de:	89 83       	std	Y+1, r24	; 0x01

000000e0 <.Loc.6>:
      e0:	89 81       	ldd	r24, Y+1	; 0x01
      e2:	9a 81       	ldd	r25, Y+2	; 0x02
      e4:	21 e0       	ldi	r18, 0x01	; 1
      e6:	fc 01       	movw	r30, r24
      e8:	20 83       	st	Z, r18

000000ea <.Loc.7>:
      ea:	00 00       	nop
      ec:	0f 90       	pop	r0
      ee:	0f 90       	pop	r0
      f0:	df 91       	pop	r29
      f2:	cf 91       	pop	r28
      f4:	08 95       	ret

000000f6 <_ZNSt7__n486116coroutine_handleIvEC1Ev>:
  template <> struct
    coroutine_handle<void>
    {
    public:
      // 17.12.3.1, construct/reset
      constexpr coroutine_handle() noexcept : _M_fr_ptr(0) {}
      f6:	cf 93       	push	r28
      f8:	df 93       	push	r29
      fa:	00 d0       	rcall	.+0      	; 0xfc <L0^A>

000000fc <L0^A>:
      fc:	cd b7       	in	r28, 0x3d	; 61
      fe:	de b7       	in	r29, 0x3e	; 62
     100:	9a 83       	std	Y+2, r25	; 0x02
     102:	89 83       	std	Y+1, r24	; 0x01

00000104 <.Loc.1>:
     104:	89 81       	ldd	r24, Y+1	; 0x01
     106:	9a 81       	ldd	r25, Y+2	; 0x02
     108:	fc 01       	movw	r30, r24
     10a:	11 82       	std	Z+1, r1	; 0x01
     10c:	10 82       	st	Z, r1

0000010e <.Loc.2>:
     10e:	00 00       	nop
     110:	0f 90       	pop	r0
     112:	0f 90       	pop	r0
     114:	df 91       	pop	r29
     116:	cf 91       	pop	r28
     118:	08 95       	ret

0000011a <_ZNKSt7__n486116coroutine_handleIvE6resumeEv>:
      bool done() const noexcept { return __builtin_coro_done(_M_fr_ptr); }

      // 17.12.3.4, resumption
      void operator()() const { resume(); }

      void resume() const { __builtin_coro_resume(_M_fr_ptr); }
     11a:	cf 93       	push	r28
     11c:	df 93       	push	r29
     11e:	00 d0       	rcall	.+0      	; 0x120 <L0^A>

00000120 <L0^A>:
     120:	cd b7       	in	r28, 0x3d	; 61
     122:	de b7       	in	r29, 0x3e	; 62
     124:	9a 83       	std	Y+2, r25	; 0x02
     126:	89 83       	std	Y+1, r24	; 0x01

00000128 <.Loc.4>:
     128:	89 81       	ldd	r24, Y+1	; 0x01
     12a:	9a 81       	ldd	r25, Y+2	; 0x02
     12c:	fc 01       	movw	r30, r24
     12e:	80 81       	ld	r24, Z
     130:	91 81       	ldd	r25, Z+1	; 0x01
     132:	fc 01       	movw	r30, r24
     134:	20 81       	ld	r18, Z
     136:	31 81       	ldd	r19, Z+1	; 0x01

00000138 <.Loc.5>:
     138:	f9 01       	movw	r30, r18
     13a:	09 95       	icall

0000013c <.Loc.6>:
     13c:	00 00       	nop
     13e:	0f 90       	pop	r0
     140:	0f 90       	pop	r0
     142:	df 91       	pop	r29
     144:	cf 91       	pop	r28
     146:	08 95       	ret

00000148 <_ZNSt7__n486113suspend_never11await_readyEv>:
    void await_resume() {}
  };

  struct suspend_never
  {
    bool await_ready() { return true; }
     148:	cf 93       	push	r28
     14a:	df 93       	push	r29
     14c:	00 d0       	rcall	.+0      	; 0x14e <L0^A>

0000014e <L0^A>:
     14e:	cd b7       	in	r28, 0x3d	; 61
     150:	de b7       	in	r29, 0x3e	; 62
     152:	9a 83       	std	Y+2, r25	; 0x02
     154:	89 83       	std	Y+1, r24	; 0x01

00000156 <.Loc.10>:
     156:	81 e0       	ldi	r24, 0x01	; 1

00000158 <.Loc.11>:
     158:	0f 90       	pop	r0
     15a:	0f 90       	pop	r0
     15c:	df 91       	pop	r29
     15e:	cf 91       	pop	r28
     160:	08 95       	ret

00000162 <_ZNSt7__n486113suspend_never13await_suspendENS_16coroutine_handleIvEE>:

    void await_suspend(coroutine_handle<>) {}
     162:	cf 93       	push	r28
     164:	df 93       	push	r29
     166:	00 d0       	rcall	.+0      	; 0x168 <L0^A>

00000168 <L0^A>:
     168:	00 d0       	rcall	.+0      	; 0x16a <L0^A>

0000016a <L0^A>:
     16a:	cd b7       	in	r28, 0x3d	; 61
     16c:	de b7       	in	r29, 0x3e	; 62
     16e:	9a 83       	std	Y+2, r25	; 0x02
     170:	89 83       	std	Y+1, r24	; 0x01
     172:	7c 83       	std	Y+4, r23	; 0x04
     174:	6b 83       	std	Y+3, r22	; 0x03

00000176 <.Loc.13>:
     176:	00 00       	nop
     178:	0f 90       	pop	r0
     17a:	0f 90       	pop	r0
     17c:	0f 90       	pop	r0
     17e:	0f 90       	pop	r0
     180:	df 91       	pop	r29
     182:	cf 91       	pop	r28
     184:	08 95       	ret

00000186 <_ZNSt7__n486113suspend_never12await_resumeEv>:

    void await_resume() {}
     186:	cf 93       	push	r28
     188:	df 93       	push	r29
     18a:	00 d0       	rcall	.+0      	; 0x18c <L0^A>

0000018c <L0^A>:
     18c:	cd b7       	in	r28, 0x3d	; 61
     18e:	de b7       	in	r29, 0x3e	; 62
     190:	9a 83       	std	Y+2, r25	; 0x02
     192:	89 83       	std	Y+1, r24	; 0x01

00000194 <.Loc.15>:
     194:	00 00       	nop
     196:	0f 90       	pop	r0
     198:	0f 90       	pop	r0
     19a:	df 91       	pop	r29
     19c:	cf 91       	pop	r28
     19e:	08 95       	ret

000001a0 <_ZN10asyncruino4task12promise_typenwEj>:
namespace asyncruino{
    struct task
    {
        struct promise_type
        {
            void * operator new(size_t size){
     1a0:	cf 93       	push	r28
     1a2:	df 93       	push	r29
     1a4:	00 d0       	rcall	.+0      	; 0x1a6 <L0^A>

000001a6 <L0^A>:
     1a6:	cd b7       	in	r28, 0x3d	; 61
     1a8:	de b7       	in	r29, 0x3e	; 62
     1aa:	9a 83       	std	Y+2, r25	; 0x02
     1ac:	89 83       	std	Y+1, r24	; 0x01

000001ae <.Loc.17>:
                return malloc(size);
     1ae:	89 81       	ldd	r24, Y+1	; 0x01
     1b0:	9a 81       	ldd	r25, Y+2	; 0x02
     1b2:	0e 94 4b 22 	call	0x4496	; 0x4496 <malloc>

000001b6 <.Loc.18>:
            }
     1b6:	0f 90       	pop	r0
     1b8:	0f 90       	pop	r0
     1ba:	df 91       	pop	r29
     1bc:	cf 91       	pop	r28
     1be:	08 95       	ret

000001c0 <_ZN10asyncruino4task12promise_typedlEPv>:
            void operator delete(void * ptr){
     1c0:	cf 93       	push	r28
     1c2:	df 93       	push	r29
     1c4:	00 d0       	rcall	.+0      	; 0x1c6 <L0^A>

000001c6 <L0^A>:
     1c6:	cd b7       	in	r28, 0x3d	; 61
     1c8:	de b7       	in	r29, 0x3e	; 62
     1ca:	9a 83       	std	Y+2, r25	; 0x02
     1cc:	89 83       	std	Y+1, r24	; 0x01

000001ce <.Loc.20>:
                free(ptr);
     1ce:	89 81       	ldd	r24, Y+1	; 0x01
     1d0:	9a 81       	ldd	r25, Y+2	; 0x02
     1d2:	0e 94 e1 22 	call	0x45c2	; 0x45c2 <free>

000001d6 <.Loc.21>:
            }
     1d6:	00 00       	nop
     1d8:	0f 90       	pop	r0
     1da:	0f 90       	pop	r0
     1dc:	df 91       	pop	r29
     1de:	cf 91       	pop	r28
     1e0:	08 95       	ret

000001e2 <_ZN10asyncruino4task12promise_type17get_return_objectEv>:

            task get_return_object() { return {}; }
     1e2:	cf 93       	push	r28
     1e4:	df 93       	push	r29
     1e6:	00 d0       	rcall	.+0      	; 0x1e8 <L0^A>

000001e8 <L0^A>:
     1e8:	cd b7       	in	r28, 0x3d	; 61
     1ea:	de b7       	in	r29, 0x3e	; 62
     1ec:	9a 83       	std	Y+2, r25	; 0x02
     1ee:	89 83       	std	Y+1, r24	; 0x01

000001f0 <.Loc.23>:
	...

000001f2 <.Loc.24>:
     1f2:	82 2f       	mov	r24, r18
     1f4:	0f 90       	pop	r0
     1f6:	0f 90       	pop	r0
     1f8:	df 91       	pop	r29
     1fa:	cf 91       	pop	r28
     1fc:	08 95       	ret

000001fe <_ZN10asyncruino4task12promise_type15initial_suspendEv>:
            std::suspend_never initial_suspend() { return {}; }
     1fe:	cf 93       	push	r28
     200:	df 93       	push	r29
     202:	00 d0       	rcall	.+0      	; 0x204 <L0^A>

00000204 <L0^A>:
     204:	cd b7       	in	r28, 0x3d	; 61
     206:	de b7       	in	r29, 0x3e	; 62
     208:	9a 83       	std	Y+2, r25	; 0x02
     20a:	89 83       	std	Y+1, r24	; 0x01

0000020c <.Loc.26>:
	...

0000020e <.Loc.27>:
     20e:	82 2f       	mov	r24, r18
     210:	0f 90       	pop	r0
     212:	0f 90       	pop	r0
     214:	df 91       	pop	r29
     216:	cf 91       	pop	r28
     218:	08 95       	ret

0000021a <_ZN10asyncruino13default_guardC1Ev>:

	
	

	struct default_guard{
		inline default_guard(){
     21a:	cf 93       	push	r28
     21c:	df 93       	push	r29
     21e:	00 d0       	rcall	.+0      	; 0x220 <L0^A>

00000220 <L0^A>:
     220:	cd b7       	in	r28, 0x3d	; 61
     222:	de b7       	in	r29, 0x3e	; 62
     224:	9a 83       	std	Y+2, r25	; 0x02
     226:	89 83       	std	Y+1, r24	; 0x01

00000228 <.Loc.29>:
			#ifdef ASYNCRUINO_DOUBLE_LOCK_DEBUG
			locked = false;
     228:	89 81       	ldd	r24, Y+1	; 0x01
     22a:	9a 81       	ldd	r25, Y+2	; 0x02
     22c:	fc 01       	movw	r30, r24
     22e:	11 82       	std	Z+1, r1	; 0x01

00000230 <.Loc.30>:
			#endif
		}
     230:	00 00       	nop
     232:	0f 90       	pop	r0
     234:	0f 90       	pop	r0
     236:	df 91       	pop	r29
     238:	cf 91       	pop	r28
     23a:	08 95       	ret

0000023c <_ZN10asyncruino13default_guard4lockEv>:
		#ifdef ASYNCRUINO_DOUBLE_LOCK_DEBUG
		bool locked;
		#endif
		
		
		inline void lock(){
     23c:	cf 93       	push	r28
     23e:	df 93       	push	r29
     240:	00 d0       	rcall	.+0      	; 0x242 <L0^A>

00000242 <L0^A>:
     242:	0f 92       	push	r0
     244:	cd b7       	in	r28, 0x3d	; 61
     246:	de b7       	in	r29, 0x3e	; 62
     248:	9b 83       	std	Y+3, r25	; 0x03
     24a:	8a 83       	std	Y+2, r24	; 0x02

0000024c <.Loc.32>:
			uint8_t sreg_tmp = SREG;
     24c:	8f e5       	ldi	r24, 0x5F	; 95
     24e:	90 e0       	ldi	r25, 0x00	; 0
     250:	fc 01       	movw	r30, r24
     252:	80 81       	ld	r24, Z
     254:	89 83       	std	Y+1, r24	; 0x01

00000256 <.Loc.33>:
			cli();
     256:	f8 94       	cli

00000258 <.Loc.34>:
			sreg = sreg_tmp;
     258:	8a 81       	ldd	r24, Y+2	; 0x02
     25a:	9b 81       	ldd	r25, Y+3	; 0x03
     25c:	29 81       	ldd	r18, Y+1	; 0x01
     25e:	fc 01       	movw	r30, r24
     260:	20 83       	st	Z, r18

00000262 <.Loc.35>:
			#ifdef ASYNCRUINO_DOUBLE_LOCK_DEBUG
			if(locked){
     262:	8a 81       	ldd	r24, Y+2	; 0x02
     264:	9b 81       	ldd	r25, Y+3	; 0x03
     266:	fc 01       	movw	r30, r24
     268:	81 81       	ldd	r24, Z+1	; 0x01

0000026a <.Loc.36>:
     26a:	88 23       	and	r24, r24
     26c:	11 f0       	breq	.+4      	; 0x272 <.L17>

0000026e <.Loc.37>:
				double_locked();
     26e:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <_Z13double_lockedv>

00000272 <.L17>:
			}
			locked = true;
     272:	8a 81       	ldd	r24, Y+2	; 0x02
     274:	9b 81       	ldd	r25, Y+3	; 0x03
     276:	21 e0       	ldi	r18, 0x01	; 1
     278:	fc 01       	movw	r30, r24
     27a:	21 83       	std	Z+1, r18	; 0x01

0000027c <.Loc.39>:
			#endif
			
		}
     27c:	00 00       	nop
     27e:	0f 90       	pop	r0
     280:	0f 90       	pop	r0
     282:	0f 90       	pop	r0
     284:	df 91       	pop	r29
     286:	cf 91       	pop	r28
     288:	08 95       	ret

0000028a <_ZN10asyncruino13default_guard6unlockEv>:
		inline void unlock(){
     28a:	cf 93       	push	r28
     28c:	df 93       	push	r29
     28e:	00 d0       	rcall	.+0      	; 0x290 <L0^A>

00000290 <L0^A>:
     290:	cd b7       	in	r28, 0x3d	; 61
     292:	de b7       	in	r29, 0x3e	; 62
     294:	9a 83       	std	Y+2, r25	; 0x02
     296:	89 83       	std	Y+1, r24	; 0x01

00000298 <.Loc.41>:
			#ifdef ASYNCRUINO_DOUBLE_LOCK_DEBUG
			if(!locked){
     298:	89 81       	ldd	r24, Y+1	; 0x01
     29a:	9a 81       	ldd	r25, Y+2	; 0x02
     29c:	fc 01       	movw	r30, r24
     29e:	91 81       	ldd	r25, Z+1	; 0x01

000002a0 <.Loc.42>:
     2a0:	81 e0       	ldi	r24, 0x01	; 1
     2a2:	89 27       	eor	r24, r25

000002a4 <.Loc.43>:
     2a4:	88 23       	and	r24, r24
     2a6:	11 f0       	breq	.+4      	; 0x2ac <.L19>

000002a8 <.Loc.44>:
				double_unlocked();
     2a8:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <_Z15double_unlockedv>

000002ac <.L19>:
			}
			locked = false;
     2ac:	89 81       	ldd	r24, Y+1	; 0x01
     2ae:	9a 81       	ldd	r25, Y+2	; 0x02
     2b0:	fc 01       	movw	r30, r24
     2b2:	11 82       	std	Z+1, r1	; 0x01

000002b4 <.Loc.46>:
			#endif
			SREG = sreg;
     2b4:	8f e5       	ldi	r24, 0x5F	; 95
     2b6:	90 e0       	ldi	r25, 0x00	; 0

000002b8 <.Loc.47>:
     2b8:	29 81       	ldd	r18, Y+1	; 0x01
     2ba:	3a 81       	ldd	r19, Y+2	; 0x02
     2bc:	f9 01       	movw	r30, r18
     2be:	20 81       	ld	r18, Z

000002c0 <.Loc.48>:
     2c0:	fc 01       	movw	r30, r24
     2c2:	20 83       	st	Z, r18

000002c4 <.Loc.49>:
		}
     2c4:	00 00       	nop
     2c6:	0f 90       	pop	r0
     2c8:	0f 90       	pop	r0
     2ca:	df 91       	pop	r29
     2cc:	cf 91       	pop	r28
     2ce:	08 95       	ret

000002d0 <_ZN10asyncruino9schedulerC1Ev>:

    using schd_impl_t = scheduler_impl<default_guard,ASYNCRUINO_MAX_TASKS>;
    struct scheduler:schd_impl_t
    {
        private:
        scheduler(){
     2d0:	cf 93       	push	r28
     2d2:	df 93       	push	r29
     2d4:	00 d0       	rcall	.+0      	; 0x2d6 <L0^A>

000002d6 <L0^A>:
     2d6:	cd b7       	in	r28, 0x3d	; 61
     2d8:	de b7       	in	r29, 0x3e	; 62
     2da:	9a 83       	std	Y+2, r25	; 0x02
     2dc:	89 83       	std	Y+1, r24	; 0x01

000002de <.Loc.51>:
     2de:	89 81       	ldd	r24, Y+1	; 0x01
     2e0:	9a 81       	ldd	r25, Y+2	; 0x02
     2e2:	0e 94 01 10 	call	0x2002	; 0x2002 <_ZN10asyncruino14scheduler_implINS_13default_guardELj32EEC1Ev>

000002e6 <.Loc.52>:
			sei();
     2e6:	78 94       	sei

000002e8 <.Loc.53>:
		}
     2e8:	00 00       	nop
     2ea:	0f 90       	pop	r0
     2ec:	0f 90       	pop	r0
     2ee:	df 91       	pop	r29
     2f0:	cf 91       	pop	r28
     2f2:	08 95       	ret

000002f4 <_ZN10asyncruino9scheduler8instanceEv>:
        public:
        inline static scheduler & instance(){
     2f4:	cf 93       	push	r28
     2f6:	df 93       	push	r29
     2f8:	cd b7       	in	r28, 0x3d	; 61
     2fa:	de b7       	in	r29, 0x3e	; 62

000002fc <.Loc.55>:
            static scheduler m_inst;
     2fc:	80 ea       	ldi	r24, 0xA0	; 160
     2fe:	91 e0       	ldi	r25, 0x01	; 1
     300:	0e 94 53 00 	call	0xa6	; 0xa6 <__cxa_guard_acquire>
     304:	21 e0       	ldi	r18, 0x01	; 1
     306:	00 97       	sbiw	r24, 0x00	; 0
     308:	09 f4       	brne	.+2      	; 0x30c <.L22>

0000030a <.Loc.56>:
     30a:	20 e0       	ldi	r18, 0x00	; 0

0000030c <.L22>:
     30c:	22 23       	and	r18, r18
     30e:	41 f0       	breq	.+16     	; 0x320 <.L23>

00000310 <.Loc.57>:
     310:	88 e5       	ldi	r24, 0x58	; 88
     312:	91 e0       	ldi	r25, 0x01	; 1
     314:	0e 94 68 01 	call	0x2d0	; 0x2d0 <_ZN10asyncruino9schedulerC1Ev>
     318:	80 ea       	ldi	r24, 0xA0	; 160
     31a:	91 e0       	ldi	r25, 0x01	; 1
     31c:	0e 94 69 00 	call	0xd2	; 0xd2 <__cxa_guard_release>

00000320 <.L23>:
            return m_inst;
     320:	88 e5       	ldi	r24, 0x58	; 88
     322:	91 e0       	ldi	r25, 0x01	; 1

00000324 <.Loc.59>:
        }
     324:	df 91       	pop	r29
     326:	cf 91       	pop	r28
     328:	08 95       	ret

0000032a <_ZN10asyncruino9scheduler3runEv>:
		inline static int run(){
     32a:	cf 93       	push	r28
     32c:	df 93       	push	r29
     32e:	cd b7       	in	r28, 0x3d	; 61
     330:	de b7       	in	r29, 0x3e	; 62

00000332 <.Loc.61>:
			instance().schd_impl_t::run();
     332:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <_ZN10asyncruino9scheduler8instanceEv>

00000336 <.Loc.62>:
     336:	0e 94 1f 10 	call	0x203e	; 0x203e <_ZN10asyncruino14scheduler_implINS_13default_guardELj32EE3runEv>

0000033a <.Loc.63>:
			return -1;
     33a:	8f ef       	ldi	r24, 0xFF	; 255
     33c:	9f ef       	ldi	r25, 0xFF	; 255

0000033e <.Loc.64>:
		}
     33e:	df 91       	pop	r29
     340:	cf 91       	pop	r28
     342:	08 95       	ret

00000344 <_ZN10asyncruino18hardware_uart_implC1Ev>:


namespace asyncruino{
    
    struct hardware_uart_impl{
        inline hardware_uart_impl(){}
     344:	cf 93       	push	r28
     346:	df 93       	push	r29
     348:	00 d0       	rcall	.+0      	; 0x34a <L0^A>

0000034a <L0^A>:
     34a:	cd b7       	in	r28, 0x3d	; 61
     34c:	de b7       	in	r29, 0x3e	; 62
     34e:	9a 83       	std	Y+2, r25	; 0x02
     350:	89 83       	std	Y+1, r24	; 0x01

00000352 <.Loc.66>:
     352:	00 00       	nop
     354:	0f 90       	pop	r0
     356:	0f 90       	pop	r0
     358:	df 91       	pop	r29
     35a:	cf 91       	pop	r28
     35c:	08 95       	ret

0000035e <_ZN10asyncruino18hardware_uart_impl14write_if_readyEc>:
        public:
        bool write_if_ready(char c){
     35e:	cf 93       	push	r28
     360:	df 93       	push	r29
     362:	00 d0       	rcall	.+0      	; 0x364 <L0^A>

00000364 <L0^A>:
     364:	0f 92       	push	r0
     366:	cd b7       	in	r28, 0x3d	; 61
     368:	de b7       	in	r29, 0x3e	; 62
     36a:	9a 83       	std	Y+2, r25	; 0x02
     36c:	89 83       	std	Y+1, r24	; 0x01
     36e:	6b 83       	std	Y+3, r22	; 0x03

00000370 <.Loc.68>:
            #ifdef __AVR_ATmega328P__
            if(UCSR0A & (1<<UDRE0)){
     370:	80 ec       	ldi	r24, 0xC0	; 192
     372:	90 e0       	ldi	r25, 0x00	; 0
     374:	fc 01       	movw	r30, r24
     376:	80 81       	ld	r24, Z
     378:	88 2f       	mov	r24, r24
     37a:	90 e0       	ldi	r25, 0x00	; 0

0000037c <.Loc.69>:
     37c:	80 72       	andi	r24, 0x20	; 32
     37e:	99 27       	eor	r25, r25
     380:	21 e0       	ldi	r18, 0x01	; 1
     382:	00 97       	sbiw	r24, 0x00	; 0
     384:	09 f4       	brne	.+2      	; 0x388 <.L29>
     386:	20 e0       	ldi	r18, 0x00	; 0

00000388 <.L29>:
     388:	22 23       	and	r18, r18
     38a:	39 f0       	breq	.+14     	; 0x39a <.L30>

0000038c <.Loc.71>:
                UDR0 = c;
     38c:	86 ec       	ldi	r24, 0xC6	; 198
     38e:	90 e0       	ldi	r25, 0x00	; 0

00000390 <.Loc.72>:
     390:	2b 81       	ldd	r18, Y+3	; 0x03
     392:	fc 01       	movw	r30, r24
     394:	20 83       	st	Z, r18

00000396 <.Loc.73>:
                return true;
     396:	81 e0       	ldi	r24, 0x01	; 1
     398:	01 c0       	rjmp	.+2      	; 0x39c <.L31>

0000039a <.L30>:
            } else {
                return false;
     39a:	80 e0       	ldi	r24, 0x00	; 0

0000039c <.L31>:
            }
            #endif
        }
     39c:	0f 90       	pop	r0
     39e:	0f 90       	pop	r0
     3a0:	0f 90       	pop	r0
     3a2:	df 91       	pop	r29
     3a4:	cf 91       	pop	r28
     3a6:	08 95       	ret

000003a8 <_ZN10asyncruino18hardware_uart_impl5writeEc>:
        void write(char c){
     3a8:	cf 93       	push	r28
     3aa:	df 93       	push	r29
     3ac:	00 d0       	rcall	.+0      	; 0x3ae <L0^A>

000003ae <L0^A>:
     3ae:	0f 92       	push	r0
     3b0:	cd b7       	in	r28, 0x3d	; 61
     3b2:	de b7       	in	r29, 0x3e	; 62
     3b4:	9a 83       	std	Y+2, r25	; 0x02
     3b6:	89 83       	std	Y+1, r24	; 0x01
     3b8:	6b 83       	std	Y+3, r22	; 0x03

000003ba <.Loc.77>:
            #ifdef __AVR_ATmega328P__
            UDR0 = c;
     3ba:	86 ec       	ldi	r24, 0xC6	; 198
     3bc:	90 e0       	ldi	r25, 0x00	; 0

000003be <.Loc.78>:
     3be:	2b 81       	ldd	r18, Y+3	; 0x03
     3c0:	fc 01       	movw	r30, r24
     3c2:	20 83       	st	Z, r18

000003c4 <.Loc.79>:
            #endif
        }
     3c4:	00 00       	nop
     3c6:	0f 90       	pop	r0
     3c8:	0f 90       	pop	r0
     3ca:	0f 90       	pop	r0
     3cc:	df 91       	pop	r29
     3ce:	cf 91       	pop	r28
     3d0:	08 95       	ret

000003d2 <_ZN10asyncruino18hardware_uart_impl12debug_stringEPKc>:

        #ifdef __AVR_ATmega328P__
        void debug_string(const char * str){
     3d2:	cf 93       	push	r28
     3d4:	df 93       	push	r29
     3d6:	00 d0       	rcall	.+0      	; 0x3d8 <L0^A>

000003d8 <L0^A>:
     3d8:	00 d0       	rcall	.+0      	; 0x3da <L0^A>

000003da <L0^A>:
     3da:	cd b7       	in	r28, 0x3d	; 61
     3dc:	de b7       	in	r29, 0x3e	; 62
     3de:	9a 83       	std	Y+2, r25	; 0x02
     3e0:	89 83       	std	Y+1, r24	; 0x01
     3e2:	7c 83       	std	Y+4, r23	; 0x04
     3e4:	6b 83       	std	Y+3, r22	; 0x03

000003e6 <.Loc.81>:
            UCSR0B = (1<<RXEN0)|( 1<<TXEN0);
     3e6:	81 ec       	ldi	r24, 0xC1	; 193
     3e8:	90 e0       	ldi	r25, 0x00	; 0

000003ea <.Loc.82>:
     3ea:	28 e1       	ldi	r18, 0x18	; 24
     3ec:	fc 01       	movw	r30, r24
     3ee:	20 83       	st	Z, r18

000003f0 <.Loc.83>:
            while(*str){
     3f0:	1c c0       	rjmp	.+56     	; 0x42a <.L34>

000003f2 <.L37>:
	...

000003f4 <.L36>:
                while(!(UCSR0A & (1<<UDRE0))){
     3f4:	80 ec       	ldi	r24, 0xC0	; 192
     3f6:	90 e0       	ldi	r25, 0x00	; 0
     3f8:	fc 01       	movw	r30, r24
     3fa:	80 81       	ld	r24, Z
     3fc:	88 2f       	mov	r24, r24
     3fe:	90 e0       	ldi	r25, 0x00	; 0

00000400 <.Loc.86>:
     400:	80 72       	andi	r24, 0x20	; 32
     402:	99 27       	eor	r25, r25

00000404 <.Loc.87>:
     404:	21 e0       	ldi	r18, 0x01	; 1
     406:	00 97       	sbiw	r24, 0x00	; 0
     408:	09 f0       	breq	.+2      	; 0x40c <.L35>
     40a:	20 e0       	ldi	r18, 0x00	; 0

0000040c <.L35>:
     40c:	22 23       	and	r18, r18
     40e:	91 f7       	brne	.-28     	; 0x3f4 <.L36>

00000410 <.Loc.88>:
                }
				UDR0 = *str;
     410:	86 ec       	ldi	r24, 0xC6	; 198
     412:	90 e0       	ldi	r25, 0x00	; 0

00000414 <.Loc.89>:
     414:	2b 81       	ldd	r18, Y+3	; 0x03
     416:	3c 81       	ldd	r19, Y+4	; 0x04
     418:	f9 01       	movw	r30, r18
     41a:	20 81       	ld	r18, Z

0000041c <.Loc.90>:
     41c:	fc 01       	movw	r30, r24
     41e:	20 83       	st	Z, r18

00000420 <.Loc.91>:
				++str;
     420:	8b 81       	ldd	r24, Y+3	; 0x03
     422:	9c 81       	ldd	r25, Y+4	; 0x04
     424:	01 96       	adiw	r24, 0x01	; 1
     426:	9c 83       	std	Y+4, r25	; 0x04
     428:	8b 83       	std	Y+3, r24	; 0x03

0000042a <.L34>:
            while(*str){
     42a:	8b 81       	ldd	r24, Y+3	; 0x03
     42c:	9c 81       	ldd	r25, Y+4	; 0x04
     42e:	fc 01       	movw	r30, r24
     430:	80 81       	ld	r24, Z
     432:	88 23       	and	r24, r24
     434:	f1 f6       	brne	.-68     	; 0x3f2 <.L37>

00000436 <.Loc.93>:
            }
            
        }
     436:	00 00       	nop
     438:	00 00       	nop
     43a:	0f 90       	pop	r0
     43c:	0f 90       	pop	r0
     43e:	0f 90       	pop	r0
     440:	0f 90       	pop	r0
     442:	df 91       	pop	r29
     444:	cf 91       	pop	r28
     446:	08 95       	ret

00000448 <_ZN10asyncruino18hardware_uart_impl4initEmm>:
        #else
        void debug_string(const char * str);
        #endif
                
        inline void init(uint32_t m_baud_rate,uint32_t f_cpu){
     448:	0f 93       	push	r16
     44a:	1f 93       	push	r17
     44c:	cf 93       	push	r28
     44e:	df 93       	push	r29
     450:	cd b7       	in	r28, 0x3d	; 61
     452:	de b7       	in	r29, 0x3e	; 62
     454:	67 97       	sbiw	r28, 0x17	; 23
     456:	0f b6       	in	r0, 0x3f	; 63
     458:	f8 94       	cli
     45a:	de bf       	out	0x3e, r29	; 62
     45c:	0f be       	out	0x3f, r0	; 63
     45e:	cd bf       	out	0x3d, r28	; 61
     460:	9f 83       	std	Y+7, r25	; 0x07
     462:	8e 83       	std	Y+6, r24	; 0x06
     464:	48 87       	std	Y+8, r20	; 0x08
     466:	59 87       	std	Y+9, r21	; 0x09
     468:	6a 87       	std	Y+10, r22	; 0x0a
     46a:	7b 87       	std	Y+11, r23	; 0x0b
     46c:	0c 87       	std	Y+12, r16	; 0x0c
     46e:	1d 87       	std	Y+13, r17	; 0x0d
     470:	2e 87       	std	Y+14, r18	; 0x0e
     472:	3f 87       	std	Y+15, r19	; 0x0f

00000474 <.Loc.95>:
            #ifdef __AVR_ATmega328P__
            //usart speed BAUD  = F_CPU/(1+UBBRn)/16
            bool double_speed = false;
     474:	19 82       	std	Y+1, r1	; 0x01

00000476 <.Loc.96>:
            uint32_t pot_speed_reg = f_cpu/(16*m_baud_rate) - 1; 
     476:	88 85       	ldd	r24, Y+8	; 0x08
     478:	99 85       	ldd	r25, Y+9	; 0x09
     47a:	aa 85       	ldd	r26, Y+10	; 0x0a
     47c:	bb 85       	ldd	r27, Y+11	; 0x0b
     47e:	88 0f       	add	r24, r24
     480:	99 1f       	adc	r25, r25
     482:	aa 1f       	adc	r26, r26
     484:	bb 1f       	adc	r27, r27
     486:	88 0f       	add	r24, r24
     488:	99 1f       	adc	r25, r25
     48a:	aa 1f       	adc	r26, r26
     48c:	bb 1f       	adc	r27, r27
     48e:	88 0f       	add	r24, r24
     490:	99 1f       	adc	r25, r25
     492:	aa 1f       	adc	r26, r26
     494:	bb 1f       	adc	r27, r27
     496:	88 0f       	add	r24, r24
     498:	99 1f       	adc	r25, r25
     49a:	aa 1f       	adc	r26, r26
     49c:	bb 1f       	adc	r27, r27
     49e:	8c 01       	movw	r16, r24
     4a0:	9d 01       	movw	r18, r26

000004a2 <.Loc.97>:
     4a2:	8c 85       	ldd	r24, Y+12	; 0x0c
     4a4:	9d 85       	ldd	r25, Y+13	; 0x0d
     4a6:	ae 85       	ldd	r26, Y+14	; 0x0e
     4a8:	bf 85       	ldd	r27, Y+15	; 0x0f
     4aa:	88 8b       	std	Y+16, r24	; 0x10
     4ac:	99 8b       	std	Y+17, r25	; 0x11
     4ae:	aa 8b       	std	Y+18, r26	; 0x12
     4b0:	bb 8b       	std	Y+19, r27	; 0x13
     4b2:	68 89       	ldd	r22, Y+16	; 0x10
     4b4:	79 89       	ldd	r23, Y+17	; 0x11
     4b6:	8a 89       	ldd	r24, Y+18	; 0x12
     4b8:	9b 89       	ldd	r25, Y+19	; 0x13
     4ba:	a9 01       	movw	r20, r18
     4bc:	98 01       	movw	r18, r16
     4be:	0e 94 17 22 	call	0x442e	; 0x442e <__udivmodsi4>
     4c2:	da 01       	movw	r26, r20
     4c4:	c9 01       	movw	r24, r18

000004c6 <.Loc.98>:
     4c6:	01 97       	sbiw	r24, 0x01	; 1
     4c8:	a1 09       	sbc	r26, r1
     4ca:	b1 09       	sbc	r27, r1
     4cc:	8a 83       	std	Y+2, r24	; 0x02
     4ce:	9b 83       	std	Y+3, r25	; 0x03
     4d0:	ac 83       	std	Y+4, r26	; 0x04
     4d2:	bd 83       	std	Y+5, r27	; 0x05

000004d4 <.Loc.99>:
            if(2*pot_speed_reg < ((uint32_t)1<<16) ){
     4d4:	8a 81       	ldd	r24, Y+2	; 0x02
     4d6:	9b 81       	ldd	r25, Y+3	; 0x03
     4d8:	ac 81       	ldd	r26, Y+4	; 0x04
     4da:	bd 81       	ldd	r27, Y+5	; 0x05
     4dc:	88 0f       	add	r24, r24
     4de:	99 1f       	adc	r25, r25
     4e0:	aa 1f       	adc	r26, r26
     4e2:	bb 1f       	adc	r27, r27

000004e4 <.Loc.100>:
     4e4:	8f 3f       	cpi	r24, 0xFF	; 255
     4e6:	ef ef       	ldi	r30, 0xFF	; 255
     4e8:	9e 07       	cpc	r25, r30
     4ea:	a1 05       	cpc	r26, r1
     4ec:	b1 05       	cpc	r27, r1
     4ee:	09 f0       	breq	.+2      	; 0x4f2 <.Loc.101>

000004f0 <L0^A>:
     4f0:	68 f5       	brcc	.+90     	; 0x54c <.L39>

000004f2 <.Loc.101>:
                pot_speed_reg = f_cpu/(8*m_baud_rate) - 1; 
     4f2:	88 85       	ldd	r24, Y+8	; 0x08
     4f4:	99 85       	ldd	r25, Y+9	; 0x09
     4f6:	aa 85       	ldd	r26, Y+10	; 0x0a
     4f8:	bb 85       	ldd	r27, Y+11	; 0x0b
     4fa:	88 0f       	add	r24, r24
     4fc:	99 1f       	adc	r25, r25
     4fe:	aa 1f       	adc	r26, r26
     500:	bb 1f       	adc	r27, r27
     502:	88 0f       	add	r24, r24
     504:	99 1f       	adc	r25, r25
     506:	aa 1f       	adc	r26, r26
     508:	bb 1f       	adc	r27, r27
     50a:	88 0f       	add	r24, r24
     50c:	99 1f       	adc	r25, r25
     50e:	aa 1f       	adc	r26, r26
     510:	bb 1f       	adc	r27, r27
     512:	8c 01       	movw	r16, r24
     514:	9d 01       	movw	r18, r26

00000516 <.Loc.102>:
     516:	8c 85       	ldd	r24, Y+12	; 0x0c
     518:	9d 85       	ldd	r25, Y+13	; 0x0d
     51a:	ae 85       	ldd	r26, Y+14	; 0x0e
     51c:	bf 85       	ldd	r27, Y+15	; 0x0f
     51e:	8c 8b       	std	Y+20, r24	; 0x14
     520:	9d 8b       	std	Y+21, r25	; 0x15
     522:	ae 8b       	std	Y+22, r26	; 0x16
     524:	bf 8b       	std	Y+23, r27	; 0x17
     526:	6c 89       	ldd	r22, Y+20	; 0x14
     528:	7d 89       	ldd	r23, Y+21	; 0x15
     52a:	8e 89       	ldd	r24, Y+22	; 0x16
     52c:	9f 89       	ldd	r25, Y+23	; 0x17
     52e:	a9 01       	movw	r20, r18
     530:	98 01       	movw	r18, r16
     532:	0e 94 17 22 	call	0x442e	; 0x442e <__udivmodsi4>
     536:	da 01       	movw	r26, r20
     538:	c9 01       	movw	r24, r18

0000053a <.Loc.103>:
     53a:	01 97       	sbiw	r24, 0x01	; 1
     53c:	a1 09       	sbc	r26, r1
     53e:	b1 09       	sbc	r27, r1
     540:	8a 83       	std	Y+2, r24	; 0x02
     542:	9b 83       	std	Y+3, r25	; 0x03
     544:	ac 83       	std	Y+4, r26	; 0x04
     546:	bd 83       	std	Y+5, r27	; 0x05

00000548 <.Loc.104>:
                double_speed = true;
     548:	81 e0       	ldi	r24, 0x01	; 1
     54a:	89 83       	std	Y+1, r24	; 0x01

0000054c <.L39>:
            }
            UBRR0H = (unsigned char)(pot_speed_reg>>8);
     54c:	8a 81       	ldd	r24, Y+2	; 0x02
     54e:	9b 81       	ldd	r25, Y+3	; 0x03
     550:	ac 81       	ldd	r26, Y+4	; 0x04
     552:	bd 81       	ldd	r27, Y+5	; 0x05
     554:	89 2f       	mov	r24, r25
     556:	9a 2f       	mov	r25, r26
     558:	ab 2f       	mov	r26, r27
     55a:	bb 27       	eor	r27, r27

0000055c <.Loc.106>:
     55c:	25 ec       	ldi	r18, 0xC5	; 197
     55e:	30 e0       	ldi	r19, 0x00	; 0

00000560 <.Loc.107>:
     560:	d9 01       	movw	r26, r18
     562:	8c 93       	st	X, r24

00000564 <.Loc.108>:
		    UBRR0L = (unsigned char)pot_speed_reg;
     564:	84 ec       	ldi	r24, 0xC4	; 196
     566:	90 e0       	ldi	r25, 0x00	; 0

00000568 <.Loc.109>:
     568:	2a 81       	ldd	r18, Y+2	; 0x02
     56a:	fc 01       	movw	r30, r24
     56c:	20 83       	st	Z, r18

0000056e <.Loc.110>:
            if(double_speed){
     56e:	89 81       	ldd	r24, Y+1	; 0x01
     570:	88 23       	and	r24, r24
     572:	49 f0       	breq	.+18     	; 0x586 <.L40>

00000574 <.Loc.111>:
                UCSR0A = UCSR0A  | (1<<U2X0); //double speed
     574:	80 ec       	ldi	r24, 0xC0	; 192
     576:	90 e0       	ldi	r25, 0x00	; 0
     578:	dc 01       	movw	r26, r24
     57a:	2c 91       	ld	r18, X

0000057c <.Loc.112>:
     57c:	80 ec       	ldi	r24, 0xC0	; 192
     57e:	90 e0       	ldi	r25, 0x00	; 0

00000580 <.Loc.113>:
     580:	22 60       	ori	r18, 0x02	; 2

00000582 <.Loc.114>:
     582:	fc 01       	movw	r30, r24
     584:	20 83       	st	Z, r18

00000586 <.L40>:
            }
            UCSR0B = (1<<RXEN0)|( 1<<TXEN0); //enable uart
     586:	81 ec       	ldi	r24, 0xC1	; 193
     588:	90 e0       	ldi	r25, 0x00	; 0

0000058a <.Loc.116>:
     58a:	28 e1       	ldi	r18, 0x18	; 24
     58c:	dc 01       	movw	r26, r24
     58e:	2c 93       	st	X, r18

00000590 <.Loc.117>:
			
            UCSR0B =UCSR0B |( (1<<RXCIE0) | (1<<TXCIE0)); //enable interrupt
     590:	81 ec       	ldi	r24, 0xC1	; 193
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	fc 01       	movw	r30, r24
     596:	20 81       	ld	r18, Z

00000598 <.Loc.118>:
     598:	81 ec       	ldi	r24, 0xC1	; 193
     59a:	90 e0       	ldi	r25, 0x00	; 0

0000059c <.Loc.119>:
     59c:	20 6c       	ori	r18, 0xC0	; 192

0000059e <.Loc.120>:
     59e:	dc 01       	movw	r26, r24
     5a0:	2c 93       	st	X, r18

000005a2 <.Loc.121>:
            UCSR0C = (1<<USBS0)|(1<<UCSZ01)|(1<<UCSZ00);
     5a2:	82 ec       	ldi	r24, 0xC2	; 194
     5a4:	90 e0       	ldi	r25, 0x00	; 0

000005a6 <.Loc.122>:
     5a6:	2e e0       	ldi	r18, 0x0E	; 14
     5a8:	fc 01       	movw	r30, r24
     5aa:	20 83       	st	Z, r18

000005ac <.Loc.123>:
            #endif
        }
     5ac:	00 00       	nop
     5ae:	67 96       	adiw	r28, 0x17	; 23
     5b0:	0f b6       	in	r0, 0x3f	; 63
     5b2:	f8 94       	cli
     5b4:	de bf       	out	0x3e, r29	; 62
     5b6:	0f be       	out	0x3f, r0	; 63
     5b8:	cd bf       	out	0x3d, r28	; 61
     5ba:	df 91       	pop	r29
     5bc:	cf 91       	pop	r28
     5be:	1f 91       	pop	r17
     5c0:	0f 91       	pop	r16
     5c2:	08 95       	ret

000005c4 <_ZN10asyncruino18hardware_uart_impl8instanceEv>:
            UCSR0B = 0;
            UCSR0C = 0;
            #endif
        }

        static hardware_uart_impl & instance(){
     5c4:	cf 93       	push	r28
     5c6:	df 93       	push	r29
     5c8:	cd b7       	in	r28, 0x3d	; 61
     5ca:	de b7       	in	r29, 0x3e	; 62

000005cc <.Loc.125>:
            static hardware_uart_impl m_writer;
     5cc:	89 ea       	ldi	r24, 0xA9	; 169
     5ce:	91 e0       	ldi	r25, 0x01	; 1
     5d0:	0e 94 53 00 	call	0xa6	; 0xa6 <__cxa_guard_acquire>
     5d4:	21 e0       	ldi	r18, 0x01	; 1
     5d6:	00 97       	sbiw	r24, 0x00	; 0
     5d8:	09 f4       	brne	.+2      	; 0x5dc <.L42>

000005da <.Loc.126>:
     5da:	20 e0       	ldi	r18, 0x00	; 0

000005dc <.L42>:
     5dc:	22 23       	and	r18, r18
     5de:	41 f0       	breq	.+16     	; 0x5f0 <.L43>

000005e0 <.Loc.127>:
     5e0:	88 ea       	ldi	r24, 0xA8	; 168
     5e2:	91 e0       	ldi	r25, 0x01	; 1
     5e4:	0e 94 a2 01 	call	0x344	; 0x344 <_ZN10asyncruino18hardware_uart_implC1Ev>
     5e8:	89 ea       	ldi	r24, 0xA9	; 169
     5ea:	91 e0       	ldi	r25, 0x01	; 1
     5ec:	0e 94 69 00 	call	0xd2	; 0xd2 <__cxa_guard_release>

000005f0 <.L43>:
            return m_writer;
     5f0:	88 ea       	ldi	r24, 0xA8	; 168
     5f2:	91 e0       	ldi	r25, 0x01	; 1

000005f4 <.Loc.129>:
        }
     5f4:	df 91       	pop	r29
     5f6:	cf 91       	pop	r28
     5f8:	08 95       	ret

000005fa <_ZN10asyncruino4uartC1Ev>:
        public Output_t
        {
        
        
        private:
        inline uart(): Input_t(scheduler::instance()),
     5fa:	ef 92       	push	r14
     5fc:	ff 92       	push	r15
     5fe:	0f 93       	push	r16
     600:	1f 93       	push	r17
     602:	cf 93       	push	r28
     604:	df 93       	push	r29
     606:	00 d0       	rcall	.+0      	; 0x608 <L0^A>

00000608 <L0^A>:
     608:	cd b7       	in	r28, 0x3d	; 61
     60a:	de b7       	in	r29, 0x3e	; 62
     60c:	9a 83       	std	Y+2, r25	; 0x02
     60e:	89 83       	std	Y+1, r24	; 0x01

00000610 <.Loc.131>:
            Output_t(scheduler::instance(),hardware_uart_impl::instance()){
     610:	09 81       	ldd	r16, Y+1	; 0x01
     612:	1a 81       	ldd	r17, Y+2	; 0x02
     614:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <_ZN10asyncruino9scheduler8instanceEv>
     618:	bc 01       	movw	r22, r24
     61a:	c8 01       	movw	r24, r16
     61c:	0e 94 61 10 	call	0x20c2	; 0x20c2 <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EEC1ERS1_>
     620:	89 81       	ldd	r24, Y+1	; 0x01
     622:	9a 81       	ldd	r25, Y+2	; 0x02
     624:	8c 01       	movw	r16, r24
     626:	02 5d       	subi	r16, 0xD2	; 210
     628:	1f 4f       	sbci	r17, 0xFF	; 255
     62a:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <_ZN10asyncruino18hardware_uart_impl8instanceEv>
     62e:	7c 01       	movw	r14, r24
     630:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <_ZN10asyncruino9scheduler8instanceEv>
     634:	a7 01       	movw	r20, r14
     636:	bc 01       	movw	r22, r24
     638:	c8 01       	movw	r24, r16
     63a:	0e 94 8c 10 	call	0x2118	; 0x2118 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhEC1ERS1_RS2_>

0000063e <.Loc.132>:
				#ifndef ASYNCRUINO_UART_ENABLE
				static_assert(false,"uart is working only if defined ASYNCRUINO_UART_ENABLE");
				#endif
				
                #ifdef F_CPU
                init(BAUD_9600,F_CPU);
     63e:	20 e0       	ldi	r18, 0x00	; 0
     640:	34 e2       	ldi	r19, 0x24	; 36
     642:	44 ef       	ldi	r20, 0xF4	; 244
     644:	50 e0       	ldi	r21, 0x00	; 0
     646:	60 e8       	ldi	r22, 0x80	; 128
     648:	75 e2       	ldi	r23, 0x25	; 37
     64a:	80 e0       	ldi	r24, 0x00	; 0
     64c:	90 e0       	ldi	r25, 0x00	; 0
     64e:	0e 94 33 03 	call	0x666	; 0x666 <_ZN10asyncruino4uart4initEmm>

00000652 <.Loc.133>:
                #endif
            }
     652:	00 00       	nop
     654:	0f 90       	pop	r0
     656:	0f 90       	pop	r0
     658:	df 91       	pop	r29
     65a:	cf 91       	pop	r28
     65c:	1f 91       	pop	r17
     65e:	0f 91       	pop	r16
     660:	ff 90       	pop	r15
     662:	ef 90       	pop	r14
     664:	08 95       	ret

00000666 <_ZN10asyncruino4uart4initEmm>:
            _DECL_BAUD(57600),
            _DECL_BAUD(76800), 
            _DECL_BAUD(115200)
        };
        #undef _DECL_BAUD
        inline static void init(
     666:	0f 93       	push	r16
     668:	1f 93       	push	r17
     66a:	cf 93       	push	r28
     66c:	df 93       	push	r29
     66e:	cd b7       	in	r28, 0x3d	; 61
     670:	de b7       	in	r29, 0x3e	; 62
     672:	28 97       	sbiw	r28, 0x08	; 8
     674:	0f b6       	in	r0, 0x3f	; 63
     676:	f8 94       	cli
     678:	de bf       	out	0x3e, r29	; 62
     67a:	0f be       	out	0x3f, r0	; 63
     67c:	cd bf       	out	0x3d, r28	; 61
     67e:	69 83       	std	Y+1, r22	; 0x01
     680:	7a 83       	std	Y+2, r23	; 0x02
     682:	8b 83       	std	Y+3, r24	; 0x03
     684:	9c 83       	std	Y+4, r25	; 0x04
     686:	2d 83       	std	Y+5, r18	; 0x05
     688:	3e 83       	std	Y+6, r19	; 0x06
     68a:	4f 83       	std	Y+7, r20	; 0x07
     68c:	58 87       	std	Y+8, r21	; 0x08

0000068e <.Loc.135>:
            uint32_t f_cpu
            #ifdef F_CPU
            = F_CPU
            #endif
        ){
            hardware_uart_impl::instance().init(m_baud_rate,f_cpu);
     68e:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <_ZN10asyncruino18hardware_uart_impl8instanceEv>
     692:	fc 01       	movw	r30, r24

00000694 <.Loc.136>:
     694:	4d 81       	ldd	r20, Y+5	; 0x05
     696:	5e 81       	ldd	r21, Y+6	; 0x06
     698:	6f 81       	ldd	r22, Y+7	; 0x07
     69a:	78 85       	ldd	r23, Y+8	; 0x08
     69c:	89 81       	ldd	r24, Y+1	; 0x01
     69e:	9a 81       	ldd	r25, Y+2	; 0x02
     6a0:	ab 81       	ldd	r26, Y+3	; 0x03
     6a2:	bc 81       	ldd	r27, Y+4	; 0x04
     6a4:	8a 01       	movw	r16, r20
     6a6:	9b 01       	movw	r18, r22
     6a8:	ac 01       	movw	r20, r24
     6aa:	bd 01       	movw	r22, r26
     6ac:	cf 01       	movw	r24, r30
     6ae:	0e 94 24 02 	call	0x448	; 0x448 <_ZN10asyncruino18hardware_uart_impl4initEmm>

000006b2 <.Loc.137>:
        }
     6b2:	00 00       	nop
     6b4:	28 96       	adiw	r28, 0x08	; 8
     6b6:	0f b6       	in	r0, 0x3f	; 63
     6b8:	f8 94       	cli
     6ba:	de bf       	out	0x3e, r29	; 62
     6bc:	0f be       	out	0x3f, r0	; 63
     6be:	cd bf       	out	0x3d, r28	; 61
     6c0:	df 91       	pop	r29
     6c2:	cf 91       	pop	r28
     6c4:	1f 91       	pop	r17
     6c6:	0f 91       	pop	r16
     6c8:	08 95       	ret

000006ca <_ZN10asyncruino4uart8instanceEv>:
        inline static uart& instance(){
     6ca:	cf 93       	push	r28
     6cc:	df 93       	push	r29
     6ce:	cd b7       	in	r28, 0x3d	; 61
     6d0:	de b7       	in	r29, 0x3e	; 62

000006d2 <.Loc.139>:
            static uart m_inst;
     6d2:	8b ee       	ldi	r24, 0xEB	; 235
     6d4:	91 e0       	ldi	r25, 0x01	; 1
     6d6:	0e 94 53 00 	call	0xa6	; 0xa6 <__cxa_guard_acquire>
     6da:	21 e0       	ldi	r18, 0x01	; 1
     6dc:	00 97       	sbiw	r24, 0x00	; 0
     6de:	09 f4       	brne	.+2      	; 0x6e2 <.L48>

000006e0 <.Loc.140>:
     6e0:	20 e0       	ldi	r18, 0x00	; 0

000006e2 <.L48>:
     6e2:	22 23       	and	r18, r18
     6e4:	41 f0       	breq	.+16     	; 0x6f6 <.L49>

000006e6 <.Loc.141>:
     6e6:	81 eb       	ldi	r24, 0xB1	; 177
     6e8:	91 e0       	ldi	r25, 0x01	; 1
     6ea:	0e 94 fd 02 	call	0x5fa	; 0x5fa <_ZN10asyncruino4uartC1Ev>
     6ee:	8b ee       	ldi	r24, 0xEB	; 235
     6f0:	91 e0       	ldi	r25, 0x01	; 1
     6f2:	0e 94 69 00 	call	0xd2	; 0xd2 <__cxa_guard_release>

000006f6 <.L49>:
            return m_inst;
     6f6:	81 eb       	ldi	r24, 0xB1	; 177
     6f8:	91 e0       	ldi	r25, 0x01	; 1

000006fa <.Loc.143>:
        }
     6fa:	df 91       	pop	r29
     6fc:	cf 91       	pop	r28
     6fe:	08 95       	ret

00000700 <_ZN10asyncruino4uart8ReadByteEv>:
        inline static auto ReadByte(){
     700:	cf 93       	push	r28
     702:	df 93       	push	r29
     704:	cd b7       	in	r28, 0x3d	; 61
     706:	de b7       	in	r29, 0x3e	; 62
     708:	28 97       	sbiw	r28, 0x08	; 8
     70a:	0f b6       	in	r0, 0x3f	; 63
     70c:	f8 94       	cli
     70e:	de bf       	out	0x3e, r29	; 62
     710:	0f be       	out	0x3f, r0	; 63
     712:	cd bf       	out	0x3d, r28	; 61

00000714 <.Loc.145>:
            return instance().Input_t::ReadByte();
     714:	0e 94 65 03 	call	0x6ca	; 0x6ca <_ZN10asyncruino4uart8instanceEv>

00000718 <.Loc.146>:
     718:	0e 94 bb 10 	call	0x2176	; 0x2176 <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE8ReadByteEv>
     71c:	69 83       	std	Y+1, r22	; 0x01
     71e:	7a 83       	std	Y+2, r23	; 0x02
     720:	8b 83       	std	Y+3, r24	; 0x03
     722:	9c 83       	std	Y+4, r25	; 0x04

00000724 <.Loc.147>:
     724:	89 81       	ldd	r24, Y+1	; 0x01
     726:	9a 81       	ldd	r25, Y+2	; 0x02
     728:	ab 81       	ldd	r26, Y+3	; 0x03
     72a:	bc 81       	ldd	r27, Y+4	; 0x04
     72c:	8d 83       	std	Y+5, r24	; 0x05
     72e:	9e 83       	std	Y+6, r25	; 0x06
     730:	af 83       	std	Y+7, r26	; 0x07
     732:	b8 87       	std	Y+8, r27	; 0x08

00000734 <.Loc.148>:
        }
     734:	6d 81       	ldd	r22, Y+5	; 0x05
     736:	7e 81       	ldd	r23, Y+6	; 0x06
     738:	8f 81       	ldd	r24, Y+7	; 0x07
     73a:	98 85       	ldd	r25, Y+8	; 0x08
     73c:	28 96       	adiw	r28, 0x08	; 8
     73e:	0f b6       	in	r0, 0x3f	; 63
     740:	f8 94       	cli
     742:	de bf       	out	0x3e, r29	; 62
     744:	0f be       	out	0x3f, r0	; 63
     746:	cd bf       	out	0x3d, r28	; 61
     748:	df 91       	pop	r29
     74a:	cf 91       	pop	r28
     74c:	08 95       	ret

0000074e <_ZN10asyncruino4uart14ReadBytesUntilEPcch>:
        inline static auto ReadBytes(char * dest,uint8_t _size){
            return instance().Input_t::ReadBytes(dest,_size);
        }
        inline static auto ReadBytesUntil(char * dest,char esc_sym,uint8_t max_size){
     74e:	0f 93       	push	r16
     750:	cf 93       	push	r28
     752:	df 93       	push	r29
     754:	00 d0       	rcall	.+0      	; 0x756 <L0^A>

00000756 <L0^A>:
     756:	00 d0       	rcall	.+0      	; 0x758 <L0^A>

00000758 <L0^A>:
     758:	00 d0       	rcall	.+0      	; 0x75a <L0^A>

0000075a <L0^A>:
     75a:	cd b7       	in	r28, 0x3d	; 61
     75c:	de b7       	in	r29, 0x3e	; 62
     75e:	9a 83       	std	Y+2, r25	; 0x02
     760:	89 83       	std	Y+1, r24	; 0x01
     762:	7c 83       	std	Y+4, r23	; 0x04
     764:	6b 83       	std	Y+3, r22	; 0x03
     766:	4d 83       	std	Y+5, r20	; 0x05
     768:	2e 83       	std	Y+6, r18	; 0x06

0000076a <.Loc.150>:
            return instance().Input_t::ReadBytesUntil(dest,max_size,esc_sym);
     76a:	0e 94 65 03 	call	0x6ca	; 0x6ca <_ZN10asyncruino4uart8instanceEv>

0000076e <.Loc.151>:
     76e:	bc 01       	movw	r22, r24
     770:	89 81       	ldd	r24, Y+1	; 0x01
     772:	9a 81       	ldd	r25, Y+2	; 0x02
     774:	4b 81       	ldd	r20, Y+3	; 0x03
     776:	5c 81       	ldd	r21, Y+4	; 0x04
     778:	0d 81       	ldd	r16, Y+5	; 0x05
     77a:	2e 81       	ldd	r18, Y+6	; 0x06
     77c:	0e 94 e3 10 	call	0x21c6	; 0x21c6 <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE14ReadBytesUntilEPchc>

00000780 <.Loc.152>:
	...

00000782 <.Loc.153>:
        }
     782:	89 81       	ldd	r24, Y+1	; 0x01
     784:	9a 81       	ldd	r25, Y+2	; 0x02
     786:	0f 90       	pop	r0
     788:	0f 90       	pop	r0
     78a:	0f 90       	pop	r0
     78c:	0f 90       	pop	r0
     78e:	0f 90       	pop	r0
     790:	0f 90       	pop	r0
     792:	df 91       	pop	r29
     794:	cf 91       	pop	r28
     796:	0f 91       	pop	r16
     798:	08 95       	ret

0000079a <_ZN10asyncruino4uart9WriteByteEc>:
        inline static auto WriteByte(char c){
     79a:	cf 93       	push	r28
     79c:	df 93       	push	r29
     79e:	cd b7       	in	r28, 0x3d	; 61
     7a0:	de b7       	in	r29, 0x3e	; 62
     7a2:	29 97       	sbiw	r28, 0x09	; 9
     7a4:	0f b6       	in	r0, 0x3f	; 63
     7a6:	f8 94       	cli
     7a8:	de bf       	out	0x3e, r29	; 62
     7aa:	0f be       	out	0x3f, r0	; 63
     7ac:	cd bf       	out	0x3d, r28	; 61
     7ae:	89 83       	std	Y+1, r24	; 0x01

000007b0 <.Loc.155>:
            return instance().Output_t::WriteByte(c);
     7b0:	0e 94 65 03 	call	0x6ca	; 0x6ca <_ZN10asyncruino4uart8instanceEv>

000007b4 <.Loc.156>:
     7b4:	8e 96       	adiw	r24, 0x2e	; 46
     7b6:	69 81       	ldd	r22, Y+1	; 0x01
     7b8:	0e 94 11 11 	call	0x2222	; 0x2222 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE9WriteByteEc>
     7bc:	6a 83       	std	Y+2, r22	; 0x02
     7be:	7b 83       	std	Y+3, r23	; 0x03
     7c0:	8c 83       	std	Y+4, r24	; 0x04
     7c2:	9d 83       	std	Y+5, r25	; 0x05

000007c4 <.Loc.157>:
     7c4:	8a 81       	ldd	r24, Y+2	; 0x02
     7c6:	9b 81       	ldd	r25, Y+3	; 0x03
     7c8:	ac 81       	ldd	r26, Y+4	; 0x04
     7ca:	bd 81       	ldd	r27, Y+5	; 0x05
     7cc:	8e 83       	std	Y+6, r24	; 0x06
     7ce:	9f 83       	std	Y+7, r25	; 0x07
     7d0:	a8 87       	std	Y+8, r26	; 0x08
     7d2:	b9 87       	std	Y+9, r27	; 0x09

000007d4 <.Loc.158>:
        }
     7d4:	6e 81       	ldd	r22, Y+6	; 0x06
     7d6:	7f 81       	ldd	r23, Y+7	; 0x07
     7d8:	88 85       	ldd	r24, Y+8	; 0x08
     7da:	99 85       	ldd	r25, Y+9	; 0x09
     7dc:	29 96       	adiw	r28, 0x09	; 9
     7de:	0f b6       	in	r0, 0x3f	; 63
     7e0:	f8 94       	cli
     7e2:	de bf       	out	0x3e, r29	; 62
     7e4:	0f be       	out	0x3f, r0	; 63
     7e6:	cd bf       	out	0x3d, r28	; 61
     7e8:	df 91       	pop	r29
     7ea:	cf 91       	pop	r28
     7ec:	08 95       	ret

000007ee <_ZN10asyncruino4uart10WriteBytesEPKch>:
        inline static auto WriteBytes(const char *str,uint8_t _size){
     7ee:	8f 92       	push	r8
     7f0:	9f 92       	push	r9
     7f2:	af 92       	push	r10
     7f4:	bf 92       	push	r11
     7f6:	cf 92       	push	r12
     7f8:	df 92       	push	r13
     7fa:	ef 92       	push	r14
     7fc:	ff 92       	push	r15
     7fe:	0f 93       	push	r16
     800:	1f 93       	push	r17
     802:	cf 93       	push	r28
     804:	df 93       	push	r29
     806:	cd b7       	in	r28, 0x3d	; 61
     808:	de b7       	in	r29, 0x3e	; 62
     80a:	61 97       	sbiw	r28, 0x11	; 17
     80c:	0f b6       	in	r0, 0x3f	; 63
     80e:	f8 94       	cli
     810:	de bf       	out	0x3e, r29	; 62
     812:	0f be       	out	0x3f, r0	; 63
     814:	cd bf       	out	0x3d, r28	; 61
     816:	98 87       	std	Y+8, r25	; 0x08
     818:	8f 83       	std	Y+7, r24	; 0x07
     81a:	69 87       	std	Y+9, r22	; 0x09

0000081c <.Loc.160>:
            return instance().Output_t::WriteBytes(str,_size);
     81c:	0e 94 65 03 	call	0x6ca	; 0x6ca <_ZN10asyncruino4uart8instanceEv>

00000820 <.Loc.161>:
     820:	8e 96       	adiw	r24, 0x2e	; 46
     822:	2f 81       	ldd	r18, Y+7	; 0x07
     824:	38 85       	ldd	r19, Y+8	; 0x08
     826:	49 85       	ldd	r20, Y+9	; 0x09
     828:	b9 01       	movw	r22, r18
     82a:	0e 94 3b 11 	call	0x2276	; 0x2276 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE10WriteBytesEPKch>
     82e:	82 2e       	mov	r8, r18
     830:	93 2e       	mov	r9, r19
     832:	a4 2e       	mov	r10, r20
     834:	b5 2e       	mov	r11, r21
     836:	c6 2e       	mov	r12, r22
     838:	d7 2e       	mov	r13, r23
     83a:	e8 2e       	mov	r14, r24
     83c:	f9 2e       	mov	r15, r25
     83e:	08 2d       	mov	r16, r8
     840:	19 2d       	mov	r17, r9
     842:	2a 2d       	mov	r18, r10
     844:	3b 2d       	mov	r19, r11
     846:	4c 2d       	mov	r20, r12
     848:	5d 2d       	mov	r21, r13
     84a:	6e 2d       	mov	r22, r14
     84c:	7f 2d       	mov	r23, r15
     84e:	09 83       	std	Y+1, r16	; 0x01
     850:	1a 83       	std	Y+2, r17	; 0x02
     852:	2b 83       	std	Y+3, r18	; 0x03
     854:	3c 83       	std	Y+4, r19	; 0x04
     856:	4d 83       	std	Y+5, r20	; 0x05
     858:	5e 83       	std	Y+6, r21	; 0x06

0000085a <.Loc.162>:
     85a:	50 e0       	ldi	r21, 0x00	; 0
     85c:	59 81       	ldd	r21, Y+1	; 0x01
     85e:	40 e0       	ldi	r20, 0x00	; 0
     860:	4a 81       	ldd	r20, Y+2	; 0x02
     862:	30 e0       	ldi	r19, 0x00	; 0
     864:	3b 81       	ldd	r19, Y+3	; 0x03
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	2c 81       	ldd	r18, Y+4	; 0x04
     86a:	90 e0       	ldi	r25, 0x00	; 0
     86c:	9d 81       	ldd	r25, Y+5	; 0x05
     86e:	80 e0       	ldi	r24, 0x00	; 0
     870:	8e 81       	ldd	r24, Y+6	; 0x06
     872:	5a 87       	std	Y+10, r21	; 0x0a
     874:	4b 87       	std	Y+11, r20	; 0x0b
     876:	3c 87       	std	Y+12, r19	; 0x0c
     878:	2d 87       	std	Y+13, r18	; 0x0d
     87a:	9e 87       	std	Y+14, r25	; 0x0e
     87c:	8f 87       	std	Y+15, r24	; 0x0f
     87e:	8a 84       	ldd	r8, Y+10	; 0x0a
     880:	9b 84       	ldd	r9, Y+11	; 0x0b
     882:	ac 84       	ldd	r10, Y+12	; 0x0c
     884:	bd 84       	ldd	r11, Y+13	; 0x0d
     886:	ce 84       	ldd	r12, Y+14	; 0x0e
     888:	df 84       	ldd	r13, Y+15	; 0x0f
     88a:	e8 88       	ldd	r14, Y+16	; 0x10
     88c:	f9 88       	ldd	r15, Y+17	; 0x11

0000088e <.Loc.163>:
        }
     88e:	28 2d       	mov	r18, r8
     890:	39 2d       	mov	r19, r9
     892:	4a 2d       	mov	r20, r10
     894:	5b 2d       	mov	r21, r11
     896:	6c 2d       	mov	r22, r12
     898:	7d 2d       	mov	r23, r13
     89a:	8e 2d       	mov	r24, r14
     89c:	9f 2d       	mov	r25, r15
     89e:	61 96       	adiw	r28, 0x11	; 17
     8a0:	0f b6       	in	r0, 0x3f	; 63
     8a2:	f8 94       	cli
     8a4:	de bf       	out	0x3e, r29	; 62
     8a6:	0f be       	out	0x3f, r0	; 63
     8a8:	cd bf       	out	0x3d, r28	; 61
     8aa:	df 91       	pop	r29
     8ac:	cf 91       	pop	r28
     8ae:	1f 91       	pop	r17
     8b0:	0f 91       	pop	r16
     8b2:	ff 90       	pop	r15
     8b4:	ef 90       	pop	r14
     8b6:	df 90       	pop	r13
     8b8:	cf 90       	pop	r12
     8ba:	bf 90       	pop	r11
     8bc:	af 90       	pop	r10
     8be:	9f 90       	pop	r9
     8c0:	8f 90       	pop	r8
     8c2:	08 95       	ret

000008c4 <_ZN10asyncruino4uart10WriteBytesEPKc>:
		inline static auto WriteBytes(const char *str){
     8c4:	8f 92       	push	r8
     8c6:	9f 92       	push	r9
     8c8:	af 92       	push	r10
     8ca:	bf 92       	push	r11
     8cc:	cf 92       	push	r12
     8ce:	df 92       	push	r13
     8d0:	ef 92       	push	r14
     8d2:	ff 92       	push	r15
     8d4:	0f 93       	push	r16
     8d6:	1f 93       	push	r17
     8d8:	cf 93       	push	r28
     8da:	df 93       	push	r29
     8dc:	cd b7       	in	r28, 0x3d	; 61
     8de:	de b7       	in	r29, 0x3e	; 62
     8e0:	60 97       	sbiw	r28, 0x10	; 16
     8e2:	0f b6       	in	r0, 0x3f	; 63
     8e4:	f8 94       	cli
     8e6:	de bf       	out	0x3e, r29	; 62
     8e8:	0f be       	out	0x3f, r0	; 63
     8ea:	cd bf       	out	0x3d, r28	; 61
     8ec:	98 87       	std	Y+8, r25	; 0x08
     8ee:	8f 83       	std	Y+7, r24	; 0x07

000008f0 <.Loc.165>:
			return instance().Output_t::WriteBytes(str);
     8f0:	0e 94 65 03 	call	0x6ca	; 0x6ca <_ZN10asyncruino4uart8instanceEv>

000008f4 <.Loc.166>:
     8f4:	8e 96       	adiw	r24, 0x2e	; 46
     8f6:	2f 81       	ldd	r18, Y+7	; 0x07
     8f8:	38 85       	ldd	r19, Y+8	; 0x08
     8fa:	b9 01       	movw	r22, r18
     8fc:	0e 94 99 11 	call	0x2332	; 0x2332 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE10WriteBytesEPKc>
     900:	82 2e       	mov	r8, r18
     902:	93 2e       	mov	r9, r19
     904:	a4 2e       	mov	r10, r20
     906:	b5 2e       	mov	r11, r21
     908:	c6 2e       	mov	r12, r22
     90a:	d7 2e       	mov	r13, r23
     90c:	e8 2e       	mov	r14, r24
     90e:	f9 2e       	mov	r15, r25
     910:	08 2d       	mov	r16, r8
     912:	19 2d       	mov	r17, r9
     914:	2a 2d       	mov	r18, r10
     916:	3b 2d       	mov	r19, r11
     918:	4c 2d       	mov	r20, r12
     91a:	5d 2d       	mov	r21, r13
     91c:	6e 2d       	mov	r22, r14
     91e:	7f 2d       	mov	r23, r15
     920:	09 83       	std	Y+1, r16	; 0x01
     922:	1a 83       	std	Y+2, r17	; 0x02
     924:	2b 83       	std	Y+3, r18	; 0x03
     926:	3c 83       	std	Y+4, r19	; 0x04
     928:	4d 83       	std	Y+5, r20	; 0x05
     92a:	5e 83       	std	Y+6, r21	; 0x06

0000092c <.Loc.167>:
     92c:	50 e0       	ldi	r21, 0x00	; 0
     92e:	59 81       	ldd	r21, Y+1	; 0x01
     930:	40 e0       	ldi	r20, 0x00	; 0
     932:	4a 81       	ldd	r20, Y+2	; 0x02
     934:	30 e0       	ldi	r19, 0x00	; 0
     936:	3b 81       	ldd	r19, Y+3	; 0x03
     938:	20 e0       	ldi	r18, 0x00	; 0
     93a:	2c 81       	ldd	r18, Y+4	; 0x04
     93c:	90 e0       	ldi	r25, 0x00	; 0
     93e:	9d 81       	ldd	r25, Y+5	; 0x05
     940:	80 e0       	ldi	r24, 0x00	; 0
     942:	8e 81       	ldd	r24, Y+6	; 0x06
     944:	59 87       	std	Y+9, r21	; 0x09
     946:	4a 87       	std	Y+10, r20	; 0x0a
     948:	3b 87       	std	Y+11, r19	; 0x0b
     94a:	2c 87       	std	Y+12, r18	; 0x0c
     94c:	9d 87       	std	Y+13, r25	; 0x0d
     94e:	8e 87       	std	Y+14, r24	; 0x0e
     950:	89 84       	ldd	r8, Y+9	; 0x09
     952:	9a 84       	ldd	r9, Y+10	; 0x0a
     954:	ab 84       	ldd	r10, Y+11	; 0x0b
     956:	bc 84       	ldd	r11, Y+12	; 0x0c
     958:	cd 84       	ldd	r12, Y+13	; 0x0d
     95a:	de 84       	ldd	r13, Y+14	; 0x0e
     95c:	ef 84       	ldd	r14, Y+15	; 0x0f
     95e:	f8 88       	ldd	r15, Y+16	; 0x10

00000960 <.Loc.168>:
		}
     960:	28 2d       	mov	r18, r8
     962:	39 2d       	mov	r19, r9
     964:	4a 2d       	mov	r20, r10
     966:	5b 2d       	mov	r21, r11
     968:	6c 2d       	mov	r22, r12
     96a:	7d 2d       	mov	r23, r13
     96c:	8e 2d       	mov	r24, r14
     96e:	9f 2d       	mov	r25, r15
     970:	60 96       	adiw	r28, 0x10	; 16
     972:	0f b6       	in	r0, 0x3f	; 63
     974:	f8 94       	cli
     976:	de bf       	out	0x3e, r29	; 62
     978:	0f be       	out	0x3f, r0	; 63
     97a:	cd bf       	out	0x3d, r28	; 61
     97c:	df 91       	pop	r29
     97e:	cf 91       	pop	r28
     980:	1f 91       	pop	r17
     982:	0f 91       	pop	r16
     984:	ff 90       	pop	r15
     986:	ef 90       	pop	r14
     988:	df 90       	pop	r13
     98a:	cf 90       	pop	r12
     98c:	bf 90       	pop	r11
     98e:	af 90       	pop	r10
     990:	9f 90       	pop	r9
     992:	8f 90       	pop	r8
     994:	08 95       	ret

00000996 <_ZN10asyncruino4uart11debug_crushEPKc>:

        static void debug_crush(const char * data){
     996:	cf 93       	push	r28
     998:	df 93       	push	r29
     99a:	00 d0       	rcall	.+0      	; 0x99c <L0^A>

0000099c <L0^A>:
     99c:	cd b7       	in	r28, 0x3d	; 61
     99e:	de b7       	in	r29, 0x3e	; 62
     9a0:	9a 83       	std	Y+2, r25	; 0x02
     9a2:	89 83       	std	Y+1, r24	; 0x01

000009a4 <.Loc.170>:
            hardware_uart_impl::instance().debug_string(data);
     9a4:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <_ZN10asyncruino18hardware_uart_impl8instanceEv>
     9a8:	9c 01       	movw	r18, r24

000009aa <.Loc.171>:
     9aa:	89 81       	ldd	r24, Y+1	; 0x01
     9ac:	9a 81       	ldd	r25, Y+2	; 0x02
     9ae:	bc 01       	movw	r22, r24
     9b0:	c9 01       	movw	r24, r18
     9b2:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <_ZN10asyncruino18hardware_uart_impl12debug_stringEPKc>

000009b6 <.Loc.172>:
        }
     9b6:	00 00       	nop
     9b8:	0f 90       	pop	r0
     9ba:	0f 90       	pop	r0
     9bc:	df 91       	pop	r29
     9be:	cf 91       	pop	r28
     9c0:	08 95       	ret

000009c2 <__vector_18>:

    };
    

#ifdef ASYNCRUINO_UART_ENABLE
    ISR(USART_RX_vect){
     9c2:	1f 92       	push	r1
     9c4:	0f 92       	push	r0
     9c6:	0f b6       	in	r0, 0x3f	; 63
     9c8:	0f 92       	push	r0
     9ca:	11 24       	eor	r1, r1
     9cc:	2f 93       	push	r18
     9ce:	3f 93       	push	r19
     9d0:	4f 93       	push	r20
     9d2:	5f 93       	push	r21
     9d4:	6f 93       	push	r22
     9d6:	7f 93       	push	r23
     9d8:	8f 93       	push	r24
     9da:	9f 93       	push	r25
     9dc:	af 93       	push	r26
     9de:	bf 93       	push	r27
     9e0:	ef 93       	push	r30
     9e2:	ff 93       	push	r31
     9e4:	cf 93       	push	r28
     9e6:	df 93       	push	r29
     9e8:	0f 92       	push	r0
     9ea:	cd b7       	in	r28, 0x3d	; 61
     9ec:	de b7       	in	r29, 0x3e	; 62

000009ee <.Loc.174>:
        char c = UDR0;
     9ee:	86 ec       	ldi	r24, 0xC6	; 198
     9f0:	90 e0       	ldi	r25, 0x00	; 0
     9f2:	fc 01       	movw	r30, r24
     9f4:	80 81       	ld	r24, Z
     9f6:	89 83       	std	Y+1, r24	; 0x01

000009f8 <.Loc.175>:
        uart::instance().Input_t::interrupt(c);
     9f8:	0e 94 65 03 	call	0x6ca	; 0x6ca <_ZN10asyncruino4uart8instanceEv>

000009fc <.Loc.176>:
     9fc:	69 81       	ldd	r22, Y+1	; 0x01
     9fe:	0e 94 04 12 	call	0x2408	; 0x2408 <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE9interruptEc>

00000a02 <.Loc.177>:
    }
     a02:	00 00       	nop
     a04:	0f 90       	pop	r0
     a06:	df 91       	pop	r29
     a08:	cf 91       	pop	r28
     a0a:	ff 91       	pop	r31
     a0c:	ef 91       	pop	r30
     a0e:	bf 91       	pop	r27
     a10:	af 91       	pop	r26
     a12:	9f 91       	pop	r25
     a14:	8f 91       	pop	r24
     a16:	7f 91       	pop	r23
     a18:	6f 91       	pop	r22
     a1a:	5f 91       	pop	r21
     a1c:	4f 91       	pop	r20
     a1e:	3f 91       	pop	r19
     a20:	2f 91       	pop	r18
     a22:	0f 90       	pop	r0
     a24:	0f be       	out	0x3f, r0	; 63
     a26:	0f 90       	pop	r0
     a28:	1f 90       	pop	r1
     a2a:	18 95       	reti

00000a2c <__vector_20>:
    //transmit
    ISR (USART_TX_vect){
     a2c:	1f 92       	push	r1
     a2e:	0f 92       	push	r0
     a30:	0f b6       	in	r0, 0x3f	; 63
     a32:	0f 92       	push	r0
     a34:	11 24       	eor	r1, r1
     a36:	2f 93       	push	r18
     a38:	3f 93       	push	r19
     a3a:	4f 93       	push	r20
     a3c:	5f 93       	push	r21
     a3e:	6f 93       	push	r22
     a40:	7f 93       	push	r23
     a42:	8f 93       	push	r24
     a44:	9f 93       	push	r25
     a46:	af 93       	push	r26
     a48:	bf 93       	push	r27
     a4a:	ef 93       	push	r30
     a4c:	ff 93       	push	r31
     a4e:	cf 93       	push	r28
     a50:	df 93       	push	r29
     a52:	cd b7       	in	r28, 0x3d	; 61
     a54:	de b7       	in	r29, 0x3e	; 62

00000a56 <.Loc.179>:
        uart::instance().Output_t::interrupt();
     a56:	0e 94 65 03 	call	0x6ca	; 0x6ca <_ZN10asyncruino4uart8instanceEv>

00000a5a <.Loc.180>:
     a5a:	8e 96       	adiw	r24, 0x2e	; 46
     a5c:	0e 94 51 13 	call	0x26a2	; 0x26a2 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE9interruptEv>

00000a60 <.Loc.181>:
    }
     a60:	00 00       	nop
     a62:	df 91       	pop	r29
     a64:	cf 91       	pop	r28
     a66:	ff 91       	pop	r31
     a68:	ef 91       	pop	r30
     a6a:	bf 91       	pop	r27
     a6c:	af 91       	pop	r26
     a6e:	9f 91       	pop	r25
     a70:	8f 91       	pop	r24
     a72:	7f 91       	pop	r23
     a74:	6f 91       	pop	r22
     a76:	5f 91       	pop	r21
     a78:	4f 91       	pop	r20
     a7a:	3f 91       	pop	r19
     a7c:	2f 91       	pop	r18
     a7e:	0f 90       	pop	r0
     a80:	0f be       	out	0x3f, r0	; 63
     a82:	0f 90       	pop	r0
     a84:	1f 90       	pop	r1
     a86:	18 95       	reti

00000a88 <_ZN10asyncruino16timer_0_hw__implC1Ev>:
namespace asyncruino{
    
    struct  timer_0_hw__impl{
        static constexpr uint8_t prescal_degs[5] = {0,3,6,8,10};
        private:
        timer_0_hw__impl(){}
     a88:	cf 93       	push	r28
     a8a:	df 93       	push	r29
     a8c:	00 d0       	rcall	.+0      	; 0xa8e <L0^A>

00000a8e <L0^A>:
     a8e:	cd b7       	in	r28, 0x3d	; 61
     a90:	de b7       	in	r29, 0x3e	; 62
     a92:	9a 83       	std	Y+2, r25	; 0x02
     a94:	89 83       	std	Y+1, r24	; 0x01

00000a96 <.Loc.183>:
     a96:	00 00       	nop
     a98:	0f 90       	pop	r0
     a9a:	0f 90       	pop	r0
     a9c:	df 91       	pop	r29
     a9e:	cf 91       	pop	r28
     aa0:	08 95       	ret

00000aa2 <_ZN10asyncruino16timer_0_hw__impl8instanceEv>:
        public:
        static timer_0_hw__impl & instance(){
     aa2:	cf 93       	push	r28
     aa4:	df 93       	push	r29
     aa6:	cd b7       	in	r28, 0x3d	; 61
     aa8:	de b7       	in	r29, 0x3e	; 62

00000aaa <.Loc.185>:
            static timer_0_hw__impl inst;
     aaa:	84 ef       	ldi	r24, 0xF4	; 244
     aac:	91 e0       	ldi	r25, 0x01	; 1
     aae:	0e 94 53 00 	call	0xa6	; 0xa6 <__cxa_guard_acquire>
     ab2:	21 e0       	ldi	r18, 0x01	; 1
     ab4:	00 97       	sbiw	r24, 0x00	; 0
     ab6:	09 f4       	brne	.+2      	; 0xaba <.L66>

00000ab8 <.Loc.186>:
     ab8:	20 e0       	ldi	r18, 0x00	; 0

00000aba <.L66>:
     aba:	22 23       	and	r18, r18
     abc:	41 f0       	breq	.+16     	; 0xace <.L67>

00000abe <.Loc.187>:
     abe:	83 ef       	ldi	r24, 0xF3	; 243
     ac0:	91 e0       	ldi	r25, 0x01	; 1
     ac2:	0e 94 44 05 	call	0xa88	; 0xa88 <_ZN10asyncruino16timer_0_hw__implC1Ev>
     ac6:	84 ef       	ldi	r24, 0xF4	; 244
     ac8:	91 e0       	ldi	r25, 0x01	; 1
     aca:	0e 94 69 00 	call	0xd2	; 0xd2 <__cxa_guard_release>

00000ace <.L67>:
            return inst;
     ace:	83 ef       	ldi	r24, 0xF3	; 243
     ad0:	91 e0       	ldi	r25, 0x01	; 1

00000ad2 <.Loc.189>:
        }
     ad2:	df 91       	pop	r29
     ad4:	cf 91       	pop	r28
     ad6:	08 95       	ret

00000ad8 <_ZN10asyncruino16timer_0_hw__impl5startEh>:
        constexpr static uint32_t prescalers(uint8_t prescaler_id = 0){
            return prescal_degs[prescaler_id];
        } 
        static void start(uint8_t prescaler_id = 4){
     ad8:	cf 93       	push	r28
     ada:	df 93       	push	r29
     adc:	0f 92       	push	r0
     ade:	cd b7       	in	r28, 0x3d	; 61
     ae0:	de b7       	in	r29, 0x3e	; 62
     ae2:	89 83       	std	Y+1, r24	; 0x01

00000ae4 <.Loc.191>:
            TCCR0B =  (prescaler_id+1)&0b0000111;
     ae4:	89 81       	ldd	r24, Y+1	; 0x01
     ae6:	21 e0       	ldi	r18, 0x01	; 1
     ae8:	28 0f       	add	r18, r24

00000aea <.Loc.192>:
     aea:	85 e4       	ldi	r24, 0x45	; 69
     aec:	90 e0       	ldi	r25, 0x00	; 0

00000aee <.Loc.193>:
     aee:	27 70       	andi	r18, 0x07	; 7

00000af0 <.Loc.194>:
     af0:	fc 01       	movw	r30, r24
     af2:	20 83       	st	Z, r18

00000af4 <.Loc.195>:
			TCCR0A = (1<<WGM00 | 1<<WGM01);
     af4:	84 e4       	ldi	r24, 0x44	; 68
     af6:	90 e0       	ldi	r25, 0x00	; 0

00000af8 <.Loc.196>:
     af8:	23 e0       	ldi	r18, 0x03	; 3
     afa:	fc 01       	movw	r30, r24
     afc:	20 83       	st	Z, r18

00000afe <.Loc.197>:
			TIMSK0 |= 1<<TOIE0;
     afe:	8e e6       	ldi	r24, 0x6E	; 110
     b00:	90 e0       	ldi	r25, 0x00	; 0
     b02:	fc 01       	movw	r30, r24
     b04:	20 81       	ld	r18, Z
     b06:	8e e6       	ldi	r24, 0x6E	; 110
     b08:	90 e0       	ldi	r25, 0x00	; 0

00000b0a <.Loc.198>:
     b0a:	21 60       	ori	r18, 0x01	; 1
     b0c:	fc 01       	movw	r30, r24
     b0e:	20 83       	st	Z, r18

00000b10 <.Loc.199>:
			TCNT0 = 0;
     b10:	86 e4       	ldi	r24, 0x46	; 70
     b12:	90 e0       	ldi	r25, 0x00	; 0

00000b14 <.Loc.200>:
     b14:	fc 01       	movw	r30, r24
     b16:	10 82       	st	Z, r1

00000b18 <.Loc.201>:
        }
     b18:	00 00       	nop
     b1a:	0f 90       	pop	r0
     b1c:	df 91       	pop	r29
     b1e:	cf 91       	pop	r28
     b20:	08 95       	ret

00000b22 <_ZN10asyncruino6timer0C1Ev>:
	
    #ifdef ASYNCRUINO_TIMER0_ENABLE 
    struct timer0:public timer0_impl_t {
        
	private:
		timer0():timer0_impl_t(scheduler::instance(),0){
     b22:	ef 92       	push	r14
     b24:	ff 92       	push	r15
     b26:	0f 93       	push	r16
     b28:	1f 93       	push	r17
     b2a:	cf 93       	push	r28
     b2c:	df 93       	push	r29
     b2e:	00 d0       	rcall	.+0      	; 0xb30 <L0^A>

00000b30 <L0^A>:
     b30:	cd b7       	in	r28, 0x3d	; 61
     b32:	de b7       	in	r29, 0x3e	; 62
     b34:	9a 83       	std	Y+2, r25	; 0x02
     b36:	89 83       	std	Y+1, r24	; 0x01

00000b38 <.Loc.203>:
     b38:	e9 80       	ldd	r14, Y+1	; 0x01
     b3a:	fa 80       	ldd	r15, Y+2	; 0x02
     b3c:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <_ZN10asyncruino9scheduler8instanceEv>
     b40:	01 2f       	mov	r16, r17
     b42:	20 e0       	ldi	r18, 0x00	; 0
     b44:	30 e0       	ldi	r19, 0x00	; 0
     b46:	a9 01       	movw	r20, r18
     b48:	bc 01       	movw	r22, r24
     b4a:	c7 01       	movw	r24, r14
     b4c:	0e 94 de 13 	call	0x27bc	; 0x27bc <_ZN10asyncruino18timer_counter_implINS_9schedulerENS_13default_guardEmNS_17timer_dim_counterIyfLi0EEEhLj1EEC1ILi0EEERS1_fNS_13time_prefix_tIXT_EEE>

00000b50 <.Loc.204>:
			#ifdef F_CPU
			set_speed(F_CPU);
     b50:	89 81       	ldd	r24, Y+1	; 0x01
     b52:	9a 81       	ldd	r25, Y+2	; 0x02
     b54:	40 e0       	ldi	r20, 0x00	; 0
     b56:	54 e2       	ldi	r21, 0x24	; 36
     b58:	64 ef       	ldi	r22, 0xF4	; 244
     b5a:	70 e0       	ldi	r23, 0x00	; 0
     b5c:	0e 94 ba 05 	call	0xb74	; 0xb74 <_ZN10asyncruino6timer09set_speedEm>

00000b60 <.Loc.205>:
			#endif
		}
     b60:	00 00       	nop
     b62:	0f 90       	pop	r0
     b64:	0f 90       	pop	r0
     b66:	df 91       	pop	r29
     b68:	cf 91       	pop	r28
     b6a:	1f 91       	pop	r17
     b6c:	0f 91       	pop	r16
     b6e:	ff 90       	pop	r15
     b70:	ef 90       	pop	r14
     b72:	08 95       	ret

00000b74 <_ZN10asyncruino6timer09set_speedEm>:
	public:
		void set_speed(uint32_t _ARUINO_F_CPU_IN){
     b74:	0f 93       	push	r16
     b76:	1f 93       	push	r17
     b78:	cf 93       	push	r28
     b7a:	df 93       	push	r29
     b7c:	cd b7       	in	r28, 0x3d	; 61
     b7e:	de b7       	in	r29, 0x3e	; 62
     b80:	2e 97       	sbiw	r28, 0x0e	; 14
     b82:	0f b6       	in	r0, 0x3f	; 63
     b84:	f8 94       	cli
     b86:	de bf       	out	0x3e, r29	; 62
     b88:	0f be       	out	0x3f, r0	; 63
     b8a:	cd bf       	out	0x3d, r28	; 61
     b8c:	9e 83       	std	Y+6, r25	; 0x06
     b8e:	8d 83       	std	Y+5, r24	; 0x05
     b90:	4f 83       	std	Y+7, r20	; 0x07
     b92:	58 87       	std	Y+8, r21	; 0x08
     b94:	69 87       	std	Y+9, r22	; 0x09
     b96:	7a 87       	std	Y+10, r23	; 0x0a

00000b98 <.Loc.207>:
			timer_0_hw__impl::start(4);
     b98:	84 e0       	ldi	r24, 0x04	; 4
     b9a:	0e 94 6c 05 	call	0xad8	; 0xad8 <_ZN10asyncruino16timer_0_hw__impl5startEh>

00000b9e <.Loc.208>:
			auto _pspt = timer_0_hw__impl::instance().
     b9e:	0e 94 51 05 	call	0xaa2	; 0xaa2 <_ZN10asyncruino16timer_0_hw__impl8instanceEv>

00000ba2 <.Loc.209>:
				prefix_sec_per_ticks<ASYNCRUINO_TIMER0_DIVIDER_T>(tl::s,f_cpu);
     ba2:	8f 81       	ldd	r24, Y+7	; 0x07
     ba4:	98 85       	ldd	r25, Y+8	; 0x08
     ba6:	a9 85       	ldd	r26, Y+9	; 0x09
     ba8:	ba 85       	ldd	r27, Y+10	; 0x0a
     baa:	ac 01       	movw	r20, r24
     bac:	bd 01       	movw	r22, r26
     bae:	80 2f       	mov	r24, r16
     bb0:	0e 94 14 14 	call	0x2828	; 0x2828 <_ZN10asyncruino16timer_0_hw__impl20prefix_sec_per_ticksIfLi0EEET_NS_13time_prefix_tIXT0_EEEm>
     bb4:	6b 87       	std	Y+11, r22	; 0x0b
     bb6:	7c 87       	std	Y+12, r23	; 0x0c
     bb8:	8d 87       	std	Y+13, r24	; 0x0d
     bba:	9e 87       	std	Y+14, r25	; 0x0e
     bbc:	8b 85       	ldd	r24, Y+11	; 0x0b
     bbe:	9c 85       	ldd	r25, Y+12	; 0x0c
     bc0:	ad 85       	ldd	r26, Y+13	; 0x0d
     bc2:	be 85       	ldd	r27, Y+14	; 0x0e
     bc4:	89 83       	std	Y+1, r24	; 0x01
     bc6:	9a 83       	std	Y+2, r25	; 0x02
     bc8:	ab 83       	std	Y+3, r26	; 0x03
     bca:	bc 83       	std	Y+4, r27	; 0x04

00000bcc <.Loc.210>:
			this->timer0_impl_t::set_speed(_pspt,tl::s);
     bcc:	ed 81       	ldd	r30, Y+5	; 0x05
     bce:	fe 81       	ldd	r31, Y+6	; 0x06
     bd0:	89 81       	ldd	r24, Y+1	; 0x01
     bd2:	9a 81       	ldd	r25, Y+2	; 0x02
     bd4:	ab 81       	ldd	r26, Y+3	; 0x03
     bd6:	bc 81       	ldd	r27, Y+4	; 0x04
     bd8:	21 2f       	mov	r18, r17
     bda:	ac 01       	movw	r20, r24
     bdc:	bd 01       	movw	r22, r26
     bde:	cf 01       	movw	r24, r30
     be0:	0e 94 87 14 	call	0x290e	; 0x290e <_ZN10asyncruino18timer_counter_implINS_9schedulerENS_13default_guardEmNS_17timer_dim_counterIyfLi0EEEhLj1EE9set_speedILi0EEEvfNS_13time_prefix_tIXT_EEE>

00000be4 <.Loc.211>:
		}
     be4:	00 00       	nop
     be6:	2e 96       	adiw	r28, 0x0e	; 14
     be8:	0f b6       	in	r0, 0x3f	; 63
     bea:	f8 94       	cli
     bec:	de bf       	out	0x3e, r29	; 62
     bee:	0f be       	out	0x3f, r0	; 63
     bf0:	cd bf       	out	0x3d, r28	; 61
     bf2:	df 91       	pop	r29
     bf4:	cf 91       	pop	r28
     bf6:	1f 91       	pop	r17
     bf8:	0f 91       	pop	r16
     bfa:	08 95       	ret

00000bfc <_ZN10asyncruino6timer08instanceEv>:
		static timer0 & instance(){
     bfc:	cf 93       	push	r28
     bfe:	df 93       	push	r29
     c00:	cd b7       	in	r28, 0x3d	; 61
     c02:	de b7       	in	r29, 0x3e	; 62

00000c04 <.Loc.213>:
			static timer0 m_inst;
     c04:	84 e1       	ldi	r24, 0x14	; 20
     c06:	92 e0       	ldi	r25, 0x02	; 2
     c08:	0e 94 53 00 	call	0xa6	; 0xa6 <__cxa_guard_acquire>
     c0c:	21 e0       	ldi	r18, 0x01	; 1
     c0e:	00 97       	sbiw	r24, 0x00	; 0
     c10:	09 f4       	brne	.+2      	; 0xc14 <.L73>

00000c12 <.Loc.214>:
     c12:	20 e0       	ldi	r18, 0x00	; 0

00000c14 <.L73>:
     c14:	22 23       	and	r18, r18
     c16:	41 f0       	breq	.+16     	; 0xc28 <.L74>

00000c18 <.Loc.215>:
     c18:	8c ef       	ldi	r24, 0xFC	; 252
     c1a:	91 e0       	ldi	r25, 0x01	; 1
     c1c:	0e 94 91 05 	call	0xb22	; 0xb22 <_ZN10asyncruino6timer0C1Ev>
     c20:	84 e1       	ldi	r24, 0x14	; 20
     c22:	92 e0       	ldi	r25, 0x02	; 2
     c24:	0e 94 69 00 	call	0xd2	; 0xd2 <__cxa_guard_release>

00000c28 <.L74>:
			return m_inst;
     c28:	8c ef       	ldi	r24, 0xFC	; 252
     c2a:	91 e0       	ldi	r25, 0x01	; 1

00000c2c <.Loc.217>:
		}
     c2c:	df 91       	pop	r29
     c2e:	cf 91       	pop	r28
     c30:	08 95       	ret

00000c32 <__vector_16>:
		
		
    };
	
	ISR(TIMER0_OVF_vect){
     c32:	1f 92       	push	r1
     c34:	0f 92       	push	r0
     c36:	0f b6       	in	r0, 0x3f	; 63
     c38:	0f 92       	push	r0
     c3a:	11 24       	eor	r1, r1
     c3c:	2f 93       	push	r18
     c3e:	3f 93       	push	r19
     c40:	4f 93       	push	r20
     c42:	5f 93       	push	r21
     c44:	6f 93       	push	r22
     c46:	7f 93       	push	r23
     c48:	8f 93       	push	r24
     c4a:	9f 93       	push	r25
     c4c:	af 93       	push	r26
     c4e:	bf 93       	push	r27
     c50:	ef 93       	push	r30
     c52:	ff 93       	push	r31
     c54:	cf 93       	push	r28
     c56:	df 93       	push	r29
     c58:	cd b7       	in	r28, 0x3d	; 61
     c5a:	de b7       	in	r29, 0x3e	; 62

00000c5c <.Loc.219>:
		timer0::instance().interrupt();
     c5c:	0e 94 fe 05 	call	0xbfc	; 0xbfc <_ZN10asyncruino6timer08instanceEv>

00000c60 <.Loc.220>:
     c60:	0e 94 ae 14 	call	0x295c	; 0x295c <_ZN10asyncruino18timer_counter_implINS_9schedulerENS_13default_guardEmNS_17timer_dim_counterIyfLi0EEEhLj1EE9interruptEv>

00000c64 <.Loc.221>:
	}
     c64:	00 00       	nop
     c66:	df 91       	pop	r29
     c68:	cf 91       	pop	r28
     c6a:	ff 91       	pop	r31
     c6c:	ef 91       	pop	r30
     c6e:	bf 91       	pop	r27
     c70:	af 91       	pop	r26
     c72:	9f 91       	pop	r25
     c74:	8f 91       	pop	r24
     c76:	7f 91       	pop	r23
     c78:	6f 91       	pop	r22
     c7a:	5f 91       	pop	r21
     c7c:	4f 91       	pop	r20
     c7e:	3f 91       	pop	r19
     c80:	2f 91       	pop	r18
     c82:	0f 90       	pop	r0
     c84:	0f be       	out	0x3f, r0	; 63
     c86:	0f 90       	pop	r0
     c88:	1f 90       	pop	r1
     c8a:	18 95       	reti

00000c8c <_Z10EchoServerv>:
		out++;
	}
	return len;
}

asyncruino::task EchoServer(){
     c8c:	1f 93       	push	r17
     c8e:	cf 93       	push	r28
     c90:	df 93       	push	r29
     c92:	00 d0       	rcall	.+0      	; 0xc94 <L0^A>

00000c94 <L0^A>:
     c94:	00 d0       	rcall	.+0      	; 0xc96 <L0^A>

00000c96 <L0^A>:
     c96:	cd b7       	in	r28, 0x3d	; 61
     c98:	de b7       	in	r29, 0x3e	; 62

00000c9a <.Loc.223>:
     c9a:	1a 82       	std	Y+2, r1	; 0x02
     c9c:	19 82       	std	Y+1, r1	; 0x01
     c9e:	1b 82       	std	Y+3, r1	; 0x03
     ca0:	1c 82       	std	Y+4, r1	; 0x04

00000ca2 <.Loc.224>:
			co_await asyncruino::uart::WriteBytes("expect '\\n'\n");
		} else {
			co_await asyncruino::uart::WriteBytes(x_str,rd);
		}
	}
};
     ca2:	86 e6       	ldi	r24, 0x66	; 102
     ca4:	90 e0       	ldi	r25, 0x00	; 0
     ca6:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <_ZN10asyncruino4task12promise_typenwEj>
     caa:	9a 83       	std	Y+2, r25	; 0x02
     cac:	89 83       	std	Y+1, r24	; 0x01

00000cae <.Loc.225>:
asyncruino::task EchoServer(){
     cae:	89 81       	ldd	r24, Y+1	; 0x01
     cb0:	9a 81       	ldd	r25, Y+2	; 0x02
     cb2:	21 e0       	ldi	r18, 0x01	; 1
     cb4:	fc 01       	movw	r30, r24
     cb6:	21 87       	std	Z+9, r18	; 0x09
     cb8:	89 81       	ldd	r24, Y+1	; 0x01
     cba:	9a 81       	ldd	r25, Y+2	; 0x02
     cbc:	22 e8       	ldi	r18, 0x82	; 130
     cbe:	36 e0       	ldi	r19, 0x06	; 6
     cc0:	fc 01       	movw	r30, r24
     cc2:	31 83       	std	Z+1, r19	; 0x01
     cc4:	20 83       	st	Z, r18
     cc6:	89 81       	ldd	r24, Y+1	; 0x01
     cc8:	9a 81       	ldd	r25, Y+2	; 0x02
     cca:	2c e4       	ldi	r18, 0x4C	; 76
     ccc:	3b e0       	ldi	r19, 0x0B	; 11
     cce:	fc 01       	movw	r30, r24
     cd0:	33 83       	std	Z+3, r19	; 0x03
     cd2:	22 83       	std	Z+2, r18	; 0x02

00000cd4 <.Loc.226>:
};
     cd4:	89 81       	ldd	r24, Y+1	; 0x01
     cd6:	9a 81       	ldd	r25, Y+2	; 0x02
     cd8:	04 96       	adiw	r24, 0x04	; 4
     cda:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <_ZN10asyncruino4task12promise_type17get_return_objectEv>

00000cde <.Loc.227>:
asyncruino::task EchoServer(){
     cde:	89 81       	ldd	r24, Y+1	; 0x01
     ce0:	9a 81       	ldd	r25, Y+2	; 0x02
     ce2:	fc 01       	movw	r30, r24
     ce4:	10 86       	std	Z+8, r1	; 0x08
     ce6:	17 82       	std	Z+7, r1	; 0x07
     ce8:	89 81       	ldd	r24, Y+1	; 0x01
     cea:	9a 81       	ldd	r25, Y+2	; 0x02
     cec:	0e 94 82 06 	call	0xd04	; 0xd04 <_Z10EchoServerPZ10EchoServervE21_Z10EchoServerv.Frame.actor>

00000cf0 <.Loc.228>:
};
     cf0:	00 00       	nop
     cf2:	81 2f       	mov	r24, r17
     cf4:	0f 90       	pop	r0
     cf6:	0f 90       	pop	r0
     cf8:	0f 90       	pop	r0
     cfa:	0f 90       	pop	r0
     cfc:	df 91       	pop	r29
     cfe:	cf 91       	pop	r28
     d00:	1f 91       	pop	r17
     d02:	08 95       	ret

00000d04 <_Z10EchoServerPZ10EchoServervE21_Z10EchoServerv.Frame.actor>:
asyncruino::task EchoServer(){
     d04:	6f 92       	push	r6
     d06:	7f 92       	push	r7
     d08:	8f 92       	push	r8
     d0a:	9f 92       	push	r9
     d0c:	af 92       	push	r10
     d0e:	bf 92       	push	r11
     d10:	cf 92       	push	r12
     d12:	df 92       	push	r13
     d14:	ef 92       	push	r14
     d16:	ff 92       	push	r15
     d18:	0f 93       	push	r16
     d1a:	1f 93       	push	r17
     d1c:	cf 93       	push	r28
     d1e:	df 93       	push	r29
     d20:	cd b7       	in	r28, 0x3d	; 61
     d22:	de b7       	in	r29, 0x3e	; 62
     d24:	e0 97       	sbiw	r28, 0x30	; 48
     d26:	0f b6       	in	r0, 0x3f	; 63
     d28:	f8 94       	cli
     d2a:	de bf       	out	0x3e, r29	; 62
     d2c:	0f be       	out	0x3f, r0	; 63
     d2e:	cd bf       	out	0x3d, r28	; 61
     d30:	9c 83       	std	Y+4, r25	; 0x04
     d32:	8b 83       	std	Y+3, r24	; 0x03

00000d34 <.LBB24>:
};
     d34:	8b 81       	ldd	r24, Y+3	; 0x03
     d36:	9c 81       	ldd	r25, Y+4	; 0x04
     d38:	dc 01       	movw	r26, r24
     d3a:	17 96       	adiw	r26, 0x07	; 7
     d3c:	8d 91       	ld	r24, X+
     d3e:	9c 91       	ld	r25, X
     d40:	18 97       	sbiw	r26, 0x08	; 8
     d42:	81 70       	andi	r24, 0x01	; 1
     d44:	99 27       	eor	r25, r25
     d46:	00 97       	sbiw	r24, 0x00	; 0
     d48:	c1 f0       	breq	.+48     	; 0xd7a <.L80>

00000d4a <.Loc.231>:
     d4a:	8b 81       	ldd	r24, Y+3	; 0x03
     d4c:	9c 81       	ldd	r25, Y+4	; 0x04
     d4e:	fc 01       	movw	r30, r24
     d50:	87 81       	ldd	r24, Z+7	; 0x07
     d52:	90 85       	ldd	r25, Z+8	; 0x08
     d54:	cc 01       	movw	r24, r24
     d56:	a0 e0       	ldi	r26, 0x00	; 0
     d58:	b0 e0       	ldi	r27, 0x00	; 0
     d5a:	01 97       	sbiw	r24, 0x01	; 1
     d5c:	a1 09       	sbc	r26, r1
     d5e:	b1 09       	sbc	r27, r1
     d60:	8c 31       	cpi	r24, 0x1C	; 28
     d62:	91 05       	cpc	r25, r1
     d64:	a1 05       	cpc	r26, r1
     d66:	b1 05       	cpc	r27, r1
     d68:	09 f0       	breq	.+2      	; 0xd6c <L0^A+0x2>

00000d6a <L0^A>:
     d6a:	28 f4       	brcc	.+10     	; 0xd76 <.L81>
     d6c:	87 57       	subi	r24, 0x77	; 119
     d6e:	9c 4d       	sbci	r25, 0xDC	; 220
     d70:	fc 01       	movw	r30, r24
     d72:	0c 94 39 22 	jmp	0x4472	; 0x4472 <__tablejump2__>

00000d76 <.L81>:
asyncruino::task EchoServer(){
     d76:	0e 94 82 23 	call	0x4704	; 0x4704 <abort>

00000d7a <.L80>:
};
     d7a:	8b 81       	ldd	r24, Y+3	; 0x03
     d7c:	9c 81       	ldd	r25, Y+4	; 0x04
     d7e:	dc 01       	movw	r26, r24
     d80:	17 96       	adiw	r26, 0x07	; 7
     d82:	8d 91       	ld	r24, X+
     d84:	9c 91       	ld	r25, X
     d86:	cc 01       	movw	r24, r24
     d88:	a0 e0       	ldi	r26, 0x00	; 0
     d8a:	b0 e0       	ldi	r27, 0x00	; 0
     d8c:	8c 31       	cpi	r24, 0x1C	; 28
     d8e:	91 05       	cpc	r25, r1
     d90:	a1 05       	cpc	r26, r1
     d92:	b1 05       	cpc	r27, r1
     d94:	09 f0       	breq	.+2      	; 0xd98 <L0^A+0x2>

00000d96 <L0^A>:
     d96:	00 f5       	brcc	.+64     	; 0xdd8 <.L112>
     d98:	8a 55       	subi	r24, 0x5A	; 90
     d9a:	9c 4d       	sbci	r25, 0xDC	; 220
     d9c:	fc 01       	movw	r30, r24
     d9e:	0c 94 39 22 	jmp	0x4472	; 0x4472 <__tablejump2__>

00000da2 <.L128>:
     da2:	0b 81       	ldd	r16, Y+3	; 0x03
     da4:	1c 81       	ldd	r17, Y+4	; 0x04
     da6:	8b 81       	ldd	r24, Y+3	; 0x03
     da8:	9c 81       	ldd	r25, Y+4	; 0x04
     daa:	0e 94 a7 17 	call	0x2f4e	; 0x2f4e <_ZNSt7__n486116coroutine_handleIN10asyncruino4task12promise_typeEE12from_addressEPv>
     dae:	d8 01       	movw	r26, r16
     db0:	16 96       	adiw	r26, 0x06	; 6
     db2:	9c 93       	st	X, r25
     db4:	8e 93       	st	-X, r24
     db6:	15 97       	sbiw	r26, 0x05	; 5

00000db8 <.LBB25>:
     db8:	8b 81       	ldd	r24, Y+3	; 0x03
     dba:	9c 81       	ldd	r25, Y+4	; 0x04
     dbc:	04 96       	adiw	r24, 0x04	; 4
     dbe:	0e 94 ff 00 	call	0x1fe	; 0x1fe <_ZN10asyncruino4task12promise_type15initial_suspendEv>
     dc2:	8b 81       	ldd	r24, Y+3	; 0x03
     dc4:	9c 81       	ldd	r25, Y+4	; 0x04
     dc6:	0a 96       	adiw	r24, 0x0a	; 10
     dc8:	0e 94 a4 00 	call	0x148	; 0x148 <_ZNSt7__n486113suspend_never11await_readyEv>
     dcc:	98 2f       	mov	r25, r24

00000dce <.Loc.235>:
asyncruino::task EchoServer(){
     dce:	81 e0       	ldi	r24, 0x01	; 1
     dd0:	89 27       	eor	r24, r25
     dd2:	88 23       	and	r24, r24
     dd4:	19 f4       	brne	.+6      	; 0xddc <.L129>
     dd6:	1a c0       	rjmp	.+52     	; 0xe0c <.L130>

00000dd8 <.L112>:
     dd8:	0e 94 82 23 	call	0x4704	; 0x4704 <abort>

00000ddc <.L129>:
     ddc:	8b 81       	ldd	r24, Y+3	; 0x03
     dde:	9c 81       	ldd	r25, Y+4	; 0x04
     de0:	22 e0       	ldi	r18, 0x02	; 2
     de2:	30 e0       	ldi	r19, 0x00	; 0
     de4:	fc 01       	movw	r30, r24
     de6:	30 87       	std	Z+8, r19	; 0x08
     de8:	27 83       	std	Z+7, r18	; 0x07

00000dea <.Loc.238>:
};
     dea:	8b 81       	ldd	r24, Y+3	; 0x03
     dec:	9c 81       	ldd	r25, Y+4	; 0x04
     dee:	9c 01       	movw	r18, r24
     df0:	26 5f       	subi	r18, 0xF6	; 246
     df2:	3f 4f       	sbci	r19, 0xFF	; 255
     df4:	8b 81       	ldd	r24, Y+3	; 0x03
     df6:	9c 81       	ldd	r25, Y+4	; 0x04
     df8:	dc 01       	movw	r26, r24
     dfa:	15 96       	adiw	r26, 0x05	; 5
     dfc:	8d 91       	ld	r24, X+
     dfe:	9c 91       	ld	r25, X
     e00:	bc 01       	movw	r22, r24
     e02:	c9 01       	movw	r24, r18
     e04:	0e 94 b1 00 	call	0x162	; 0x162 <_ZNSt7__n486113suspend_never13await_suspendENS_16coroutine_handleIvEE>

00000e08 <.Loc.239>:
asyncruino::task EchoServer(){
     e08:	31 c4       	rjmp	.+2146   	; 0x166c <.L143>

00000e0a <.L99>:
     e0a:	21 c4       	rjmp	.+2114   	; 0x164e <.L98>

00000e0c <.L130>:
};
     e0c:	8b 81       	ldd	r24, Y+3	; 0x03
     e0e:	9c 81       	ldd	r25, Y+4	; 0x04
     e10:	0a 96       	adiw	r24, 0x0a	; 10
     e12:	0e 94 c3 00 	call	0x186	; 0x186 <_ZNSt7__n486113suspend_never12await_resumeEv>

00000e16 <.LBB28>:
	asyncruino::uart::init(asyncruino::uart::BAUD_9600);
     e16:	20 e0       	ldi	r18, 0x00	; 0
     e18:	34 e2       	ldi	r19, 0x24	; 36
     e1a:	44 ef       	ldi	r20, 0xF4	; 244
     e1c:	50 e0       	ldi	r21, 0x00	; 0
     e1e:	60 e8       	ldi	r22, 0x80	; 128
     e20:	75 e2       	ldi	r23, 0x25	; 37
     e22:	80 e0       	ldi	r24, 0x00	; 0
     e24:	90 e0       	ldi	r25, 0x00	; 0
     e26:	0e 94 33 03 	call	0x666	; 0x666 <_ZN10asyncruino4uart4initEmm>

00000e2a <.Loc.243>:
	uint32_t x = __cplusplus;
     e2a:	2b 81       	ldd	r18, Y+3	; 0x03
     e2c:	3c 81       	ldd	r19, Y+4	; 0x04
     e2e:	82 e1       	ldi	r24, 0x12	; 18
     e30:	95 e1       	ldi	r25, 0x15	; 21
     e32:	a3 e0       	ldi	r26, 0x03	; 3
     e34:	b0 e0       	ldi	r27, 0x00	; 0
     e36:	f9 01       	movw	r30, r18
     e38:	83 87       	std	Z+11, r24	; 0x0b
     e3a:	94 87       	std	Z+12, r25	; 0x0c
     e3c:	a5 87       	std	Z+13, r26	; 0x0d
     e3e:	b6 87       	std	Z+14, r27	; 0x0e

00000e40 <.Loc.244>:
	char x_str[10] = {'*','*','*','*','*','*','*','*','*','*'};
     e40:	8b 81       	ldd	r24, Y+3	; 0x03
     e42:	9c 81       	ldd	r25, Y+4	; 0x04
     e44:	2a e0       	ldi	r18, 0x0A	; 10
     e46:	e3 e1       	ldi	r30, 0x13	; 19
     e48:	f1 e0       	ldi	r31, 0x01	; 1
     e4a:	dc 01       	movw	r26, r24
     e4c:	1f 96       	adiw	r26, 0x0f	; 15

00000e4e <.L^B1>:
     e4e:	01 90       	ld	r0, Z+
     e50:	0d 92       	st	X+, r0
     e52:	2a 95       	dec	r18
     e54:	e1 f7       	brne	.-8      	; 0xe4e <.L^B1>

00000e56 <.Loc.245>:
	write_int(x,x_str,10);
     e56:	8b 81       	ldd	r24, Y+3	; 0x03
     e58:	9c 81       	ldd	r25, Y+4	; 0x04
     e5a:	ac 01       	movw	r20, r24
     e5c:	41 5f       	subi	r20, 0xF1	; 241
     e5e:	5f 4f       	sbci	r21, 0xFF	; 255

00000e60 <.Loc.246>:
asyncruino::task EchoServer(){
     e60:	8b 81       	ldd	r24, Y+3	; 0x03
     e62:	9c 81       	ldd	r25, Y+4	; 0x04
     e64:	dc 01       	movw	r26, r24
     e66:	1b 96       	adiw	r26, 0x0b	; 11
     e68:	0d 91       	ld	r16, X+
     e6a:	1d 91       	ld	r17, X+
     e6c:	2d 91       	ld	r18, X+
     e6e:	3c 91       	ld	r19, X
     e70:	1e 97       	sbiw	r26, 0x0e	; 14
     e72:	0d 83       	std	Y+5, r16	; 0x05
     e74:	1e 83       	std	Y+6, r17	; 0x06
     e76:	2f 83       	std	Y+7, r18	; 0x07
     e78:	38 87       	std	Y+8, r19	; 0x08

00000e7a <.Loc.247>:
	write_int(x,x_str,10);
     e7a:	2a e0       	ldi	r18, 0x0A	; 10
     e7c:	6d 81       	ldd	r22, Y+5	; 0x05
     e7e:	7e 81       	ldd	r23, Y+6	; 0x06
     e80:	8f 81       	ldd	r24, Y+7	; 0x07
     e82:	98 85       	ldd	r25, Y+8	; 0x08
     e84:	0e 94 06 15 	call	0x2a0c	; 0x2a0c <_Z9write_intImEhT_Pch>

00000e88 <.LBB29>:
	co_await asyncruino::uart::WriteBytes(x_str,10);
     e88:	8b 81       	ldd	r24, Y+3	; 0x03
     e8a:	9c 81       	ldd	r25, Y+4	; 0x04
     e8c:	0f 96       	adiw	r24, 0x0f	; 15

00000e8e <.Loc.249>:
     e8e:	6b 80       	ldd	r6, Y+3	; 0x03
     e90:	7c 80       	ldd	r7, Y+4	; 0x04
     e92:	6a e0       	ldi	r22, 0x0A	; 10
     e94:	0e 94 f7 03 	call	0x7ee	; 0x7ee <_ZN10asyncruino4uart10WriteBytesEPKch>
     e98:	82 2e       	mov	r8, r18
     e9a:	93 2e       	mov	r9, r19
     e9c:	a4 2e       	mov	r10, r20
     e9e:	b5 2e       	mov	r11, r21
     ea0:	c6 2e       	mov	r12, r22
     ea2:	d7 2e       	mov	r13, r23
     ea4:	e8 2e       	mov	r14, r24
     ea6:	f9 2e       	mov	r15, r25
     ea8:	08 2d       	mov	r16, r8
     eaa:	19 2d       	mov	r17, r9
     eac:	2a 2d       	mov	r18, r10
     eae:	3b 2d       	mov	r19, r11
     eb0:	4c 2d       	mov	r20, r12
     eb2:	5d 2d       	mov	r21, r13
     eb4:	6e 2d       	mov	r22, r14
     eb6:	7f 2d       	mov	r23, r15
     eb8:	f3 01       	movw	r30, r6
     eba:	01 8f       	std	Z+25, r16	; 0x19
     ebc:	d3 01       	movw	r26, r6
     ebe:	5a 96       	adiw	r26, 0x1a	; 26
     ec0:	1c 93       	st	X, r17
     ec2:	f3 01       	movw	r30, r6
     ec4:	23 8f       	std	Z+27, r18	; 0x1b
     ec6:	d3 01       	movw	r26, r6
     ec8:	5c 96       	adiw	r26, 0x1c	; 28
     eca:	3c 93       	st	X, r19
     ecc:	f3 01       	movw	r30, r6
     ece:	45 8f       	std	Z+29, r20	; 0x1d
     ed0:	d3 01       	movw	r26, r6
     ed2:	5e 96       	adiw	r26, 0x1e	; 30
     ed4:	5c 93       	st	X, r21

00000ed6 <.Loc.250>:
     ed6:	8b 81       	ldd	r24, Y+3	; 0x03
     ed8:	9c 81       	ldd	r25, Y+4	; 0x04
     eda:	49 96       	adiw	r24, 0x19	; 25
     edc:	0e 94 b6 15 	call	0x2b6c	; 0x2b6c <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE19write_bytes_awaitor11await_readyEv>
     ee0:	98 2f       	mov	r25, r24

00000ee2 <.Loc.251>:
     ee2:	81 e0       	ldi	r24, 0x01	; 1
     ee4:	89 27       	eor	r24, r25
     ee6:	88 23       	and	r24, r24
     ee8:	c1 f0       	breq	.+48     	; 0xf1a <.L131>

00000eea <.Loc.252>:
     eea:	8b 81       	ldd	r24, Y+3	; 0x03
     eec:	9c 81       	ldd	r25, Y+4	; 0x04
     eee:	24 e0       	ldi	r18, 0x04	; 4
     ef0:	30 e0       	ldi	r19, 0x00	; 0
     ef2:	fc 01       	movw	r30, r24
     ef4:	30 87       	std	Z+8, r19	; 0x08
     ef6:	27 83       	std	Z+7, r18	; 0x07

00000ef8 <.Loc.253>:
     ef8:	8b 81       	ldd	r24, Y+3	; 0x03
     efa:	9c 81       	ldd	r25, Y+4	; 0x04
     efc:	9c 01       	movw	r18, r24
     efe:	27 5e       	subi	r18, 0xE7	; 231
     f00:	3f 4f       	sbci	r19, 0xFF	; 255
     f02:	8b 81       	ldd	r24, Y+3	; 0x03
     f04:	9c 81       	ldd	r25, Y+4	; 0x04
     f06:	dc 01       	movw	r26, r24
     f08:	15 96       	adiw	r26, 0x05	; 5
     f0a:	8d 91       	ld	r24, X+
     f0c:	9c 91       	ld	r25, X
     f0e:	bc 01       	movw	r22, r24
     f10:	c9 01       	movw	r24, r18
     f12:	0e 94 c6 15 	call	0x2b8c	; 0x2b8c <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE19write_bytes_awaitor13await_suspendENSt7__n486116coroutine_handleIvEE>

00000f16 <.Loc.254>:
     f16:	aa c3       	rjmp	.+1876   	; 0x166c <.L143>

00000f18 <.L100>:
     f18:	9a c3       	rjmp	.+1844   	; 0x164e <.L98>

00000f1a <.L131>:
     f1a:	8b 81       	ldd	r24, Y+3	; 0x03
     f1c:	9c 81       	ldd	r25, Y+4	; 0x04
     f1e:	49 96       	adiw	r24, 0x19	; 25
     f20:	0e 94 0e 16 	call	0x2c1c	; 0x2c1c <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE19write_bytes_awaitor12await_resumeEv>

00000f24 <.L149>:
		uint32_t m_delay = asyncruino::timer0::instance().m_list[0].sch;
     f24:	0e 94 fe 05 	call	0xbfc	; 0xbfc <_ZN10asyncruino6timer08instanceEv>

00000f28 <.Loc.258>:
     f28:	fc 01       	movw	r30, r24
     f2a:	82 81       	ldd	r24, Z+2	; 0x02
     f2c:	93 81       	ldd	r25, Z+3	; 0x03
     f2e:	a4 81       	ldd	r26, Z+4	; 0x04
     f30:	b5 81       	ldd	r27, Z+5	; 0x05
     f32:	2b 81       	ldd	r18, Y+3	; 0x03
     f34:	3c 81       	ldd	r19, Y+4	; 0x04
     f36:	f9 01       	movw	r30, r18
     f38:	87 8f       	std	Z+31, r24	; 0x1f
     f3a:	90 a3       	std	Z+32, r25	; 0x20
     f3c:	a1 a3       	std	Z+33, r26	; 0x21
     f3e:	b2 a3       	std	Z+34, r27	; 0x22

00000f40 <.Loc.259>:
		auto m_len = write_int(m_delay,x_str);
     f40:	8b 81       	ldd	r24, Y+3	; 0x03
     f42:	9c 81       	ldd	r25, Y+4	; 0x04
     f44:	ac 01       	movw	r20, r24
     f46:	41 5f       	subi	r20, 0xF1	; 241
     f48:	5f 4f       	sbci	r21, 0xFF	; 255

00000f4a <.Loc.260>:
asyncruino::task EchoServer(){
     f4a:	8b 81       	ldd	r24, Y+3	; 0x03
     f4c:	9c 81       	ldd	r25, Y+4	; 0x04
     f4e:	dc 01       	movw	r26, r24
     f50:	5f 96       	adiw	r26, 0x1f	; 31
     f52:	0d 91       	ld	r16, X+
     f54:	1d 91       	ld	r17, X+
     f56:	2d 91       	ld	r18, X+
     f58:	3c 91       	ld	r19, X
     f5a:	92 97       	sbiw	r26, 0x22	; 34
     f5c:	09 87       	std	Y+9, r16	; 0x09
     f5e:	1a 87       	std	Y+10, r17	; 0x0a
     f60:	2b 87       	std	Y+11, r18	; 0x0b
     f62:	3c 87       	std	Y+12, r19	; 0x0c

00000f64 <.Loc.261>:
		auto m_len = write_int(m_delay,x_str);
     f64:	24 e1       	ldi	r18, 0x14	; 20
     f66:	69 85       	ldd	r22, Y+9	; 0x09
     f68:	7a 85       	ldd	r23, Y+10	; 0x0a
     f6a:	8b 85       	ldd	r24, Y+11	; 0x0b
     f6c:	9c 85       	ldd	r25, Y+12	; 0x0c
     f6e:	0e 94 06 15 	call	0x2a0c	; 0x2a0c <_Z9write_intImEhT_Pch>
     f72:	28 2f       	mov	r18, r24

00000f74 <.Loc.262>:
     f74:	8b 81       	ldd	r24, Y+3	; 0x03
     f76:	9c 81       	ldd	r25, Y+4	; 0x04
     f78:	fc 01       	movw	r30, r24
     f7a:	23 a3       	std	Z+35, r18	; 0x23

00000f7c <.LBB31>:
asyncruino::task EchoServer(){
     f7c:	8b 81       	ldd	r24, Y+3	; 0x03
     f7e:	9c 81       	ldd	r25, Y+4	; 0x04
     f80:	dc 01       	movw	r26, r24
     f82:	93 96       	adiw	r26, 0x23	; 35
     f84:	8c 91       	ld	r24, X
     f86:	93 97       	sbiw	r26, 0x23	; 35

00000f88 <.Loc.264>:
		co_await asyncruino::uart::WriteBytes(x_str,min(m_len,10));
     f88:	28 2f       	mov	r18, r24
     f8a:	2a 30       	cpi	r18, 0x0A	; 10
     f8c:	11 f0       	breq	.+4      	; 0xf92 <.L144>
     f8e:	08 f0       	brcs	.+2      	; 0xf92 <.L144>
     f90:	2a e0       	ldi	r18, 0x0A	; 10

00000f92 <.L144>:
     f92:	8b 81       	ldd	r24, Y+3	; 0x03
     f94:	9c 81       	ldd	r25, Y+4	; 0x04
     f96:	0f 96       	adiw	r24, 0x0f	; 15

00000f98 <.Loc.266>:
     f98:	6b 80       	ldd	r6, Y+3	; 0x03
     f9a:	7c 80       	ldd	r7, Y+4	; 0x04
     f9c:	62 2f       	mov	r22, r18
     f9e:	0e 94 f7 03 	call	0x7ee	; 0x7ee <_ZN10asyncruino4uart10WriteBytesEPKch>
     fa2:	82 2e       	mov	r8, r18
     fa4:	93 2e       	mov	r9, r19
     fa6:	a4 2e       	mov	r10, r20
     fa8:	b5 2e       	mov	r11, r21
     faa:	c6 2e       	mov	r12, r22
     fac:	d7 2e       	mov	r13, r23
     fae:	e8 2e       	mov	r14, r24
     fb0:	f9 2e       	mov	r15, r25
     fb2:	08 2d       	mov	r16, r8
     fb4:	19 2d       	mov	r17, r9
     fb6:	2a 2d       	mov	r18, r10
     fb8:	3b 2d       	mov	r19, r11
     fba:	4c 2d       	mov	r20, r12
     fbc:	5d 2d       	mov	r21, r13
     fbe:	6e 2d       	mov	r22, r14
     fc0:	7f 2d       	mov	r23, r15
     fc2:	f3 01       	movw	r30, r6
     fc4:	03 a7       	std	Z+43, r16	; 0x2b
     fc6:	d3 01       	movw	r26, r6
     fc8:	9c 96       	adiw	r26, 0x2c	; 44
     fca:	1c 93       	st	X, r17
     fcc:	f3 01       	movw	r30, r6
     fce:	25 a7       	std	Z+45, r18	; 0x2d
     fd0:	d3 01       	movw	r26, r6
     fd2:	9e 96       	adiw	r26, 0x2e	; 46
     fd4:	3c 93       	st	X, r19
     fd6:	f3 01       	movw	r30, r6
     fd8:	47 a7       	std	Z+47, r20	; 0x2f
     fda:	d3 01       	movw	r26, r6
     fdc:	d0 96       	adiw	r26, 0x30	; 48
     fde:	5c 93       	st	X, r21

00000fe0 <.Loc.267>:
     fe0:	8b 81       	ldd	r24, Y+3	; 0x03
     fe2:	9c 81       	ldd	r25, Y+4	; 0x04
     fe4:	8b 96       	adiw	r24, 0x2b	; 43
     fe6:	0e 94 b6 15 	call	0x2b6c	; 0x2b6c <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE19write_bytes_awaitor11await_readyEv>
     fea:	98 2f       	mov	r25, r24

00000fec <.Loc.268>:
     fec:	81 e0       	ldi	r24, 0x01	; 1
     fee:	89 27       	eor	r24, r25
     ff0:	88 23       	and	r24, r24
     ff2:	c1 f0       	breq	.+48     	; 0x1024 <.L132>

00000ff4 <.Loc.269>:
     ff4:	8b 81       	ldd	r24, Y+3	; 0x03
     ff6:	9c 81       	ldd	r25, Y+4	; 0x04
     ff8:	26 e0       	ldi	r18, 0x06	; 6
     ffa:	30 e0       	ldi	r19, 0x00	; 0
     ffc:	fc 01       	movw	r30, r24
     ffe:	30 87       	std	Z+8, r19	; 0x08
    1000:	27 83       	std	Z+7, r18	; 0x07

00001002 <.Loc.270>:
    1002:	8b 81       	ldd	r24, Y+3	; 0x03
    1004:	9c 81       	ldd	r25, Y+4	; 0x04
    1006:	9c 01       	movw	r18, r24
    1008:	25 5d       	subi	r18, 0xD5	; 213
    100a:	3f 4f       	sbci	r19, 0xFF	; 255
    100c:	8b 81       	ldd	r24, Y+3	; 0x03
    100e:	9c 81       	ldd	r25, Y+4	; 0x04
    1010:	dc 01       	movw	r26, r24
    1012:	15 96       	adiw	r26, 0x05	; 5
    1014:	8d 91       	ld	r24, X+
    1016:	9c 91       	ld	r25, X
    1018:	bc 01       	movw	r22, r24
    101a:	c9 01       	movw	r24, r18
    101c:	0e 94 c6 15 	call	0x2b8c	; 0x2b8c <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE19write_bytes_awaitor13await_suspendENSt7__n486116coroutine_handleIvEE>

00001020 <.Loc.271>:
    1020:	25 c3       	rjmp	.+1610   	; 0x166c <.L143>

00001022 <.L101>:
    1022:	15 c3       	rjmp	.+1578   	; 0x164e <.L98>

00001024 <.L132>:
    1024:	8b 81       	ldd	r24, Y+3	; 0x03
    1026:	9c 81       	ldd	r25, Y+4	; 0x04
    1028:	8b 96       	adiw	r24, 0x2b	; 43
    102a:	0e 94 0e 16 	call	0x2c1c	; 0x2c1c <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE19write_bytes_awaitor12await_resumeEv>

0000102e <.LBB32>:
		co_await asyncruino::uart::WriteByte('\n');
    102e:	0b 81       	ldd	r16, Y+3	; 0x03
    1030:	1c 81       	ldd	r17, Y+4	; 0x04
    1032:	8a e0       	ldi	r24, 0x0A	; 10
    1034:	0e 94 cd 03 	call	0x79a	; 0x79a <_ZN10asyncruino4uart9WriteByteEc>
    1038:	69 8f       	std	Y+25, r22	; 0x19
    103a:	7a 8f       	std	Y+26, r23	; 0x1a
    103c:	8b 8f       	std	Y+27, r24	; 0x1b
    103e:	9c 8f       	std	Y+28, r25	; 0x1c
    1040:	29 8d       	ldd	r18, Y+25	; 0x19
    1042:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1044:	4b 8d       	ldd	r20, Y+27	; 0x1b
    1046:	5c 8d       	ldd	r21, Y+28	; 0x1c
    1048:	d8 01       	movw	r26, r16
    104a:	d1 96       	adiw	r26, 0x31	; 49
    104c:	2d 93       	st	X+, r18
    104e:	3d 93       	st	X+, r19
    1050:	4d 93       	st	X+, r20
    1052:	5c 93       	st	X, r21
    1054:	d4 97       	sbiw	r26, 0x34	; 52

00001056 <.Loc.275>:
    1056:	8b 81       	ldd	r24, Y+3	; 0x03
    1058:	9c 81       	ldd	r25, Y+4	; 0x04
    105a:	c1 96       	adiw	r24, 0x31	; 49
    105c:	0e 94 29 16 	call	0x2c52	; 0x2c52 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE18write_byte_awaitor11await_readyEv>
    1060:	98 2f       	mov	r25, r24

00001062 <.Loc.276>:
    1062:	81 e0       	ldi	r24, 0x01	; 1
    1064:	89 27       	eor	r24, r25
    1066:	88 23       	and	r24, r24
    1068:	c1 f0       	breq	.+48     	; 0x109a <.L133>

0000106a <.Loc.277>:
    106a:	8b 81       	ldd	r24, Y+3	; 0x03
    106c:	9c 81       	ldd	r25, Y+4	; 0x04
    106e:	28 e0       	ldi	r18, 0x08	; 8
    1070:	30 e0       	ldi	r19, 0x00	; 0
    1072:	fc 01       	movw	r30, r24
    1074:	30 87       	std	Z+8, r19	; 0x08
    1076:	27 83       	std	Z+7, r18	; 0x07

00001078 <.Loc.278>:
    1078:	8b 81       	ldd	r24, Y+3	; 0x03
    107a:	9c 81       	ldd	r25, Y+4	; 0x04
    107c:	9c 01       	movw	r18, r24
    107e:	2f 5c       	subi	r18, 0xCF	; 207
    1080:	3f 4f       	sbci	r19, 0xFF	; 255
    1082:	8b 81       	ldd	r24, Y+3	; 0x03
    1084:	9c 81       	ldd	r25, Y+4	; 0x04
    1086:	dc 01       	movw	r26, r24
    1088:	15 96       	adiw	r26, 0x05	; 5
    108a:	8d 91       	ld	r24, X+
    108c:	9c 91       	ld	r25, X
    108e:	bc 01       	movw	r22, r24
    1090:	c9 01       	movw	r24, r18
    1092:	0e 94 39 16 	call	0x2c72	; 0x2c72 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE18write_byte_awaitor13await_suspendENSt7__n486116coroutine_handleIvEE>

00001096 <.Loc.279>:
    1096:	ea c2       	rjmp	.+1492   	; 0x166c <.L143>

00001098 <.L102>:
    1098:	da c2       	rjmp	.+1460   	; 0x164e <.L98>

0000109a <.L133>:
    109a:	8b 81       	ldd	r24, Y+3	; 0x03
    109c:	9c 81       	ldd	r25, Y+4	; 0x04
    109e:	c1 96       	adiw	r24, 0x31	; 49
    10a0:	0e 94 73 16 	call	0x2ce6	; 0x2ce6 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE18write_byte_awaitor12await_resumeEv>

000010a4 <.LBE32>:
		uint32_t m_ticks_per_sec = asyncruino::timer0::instance().m_counter.tick_per_prefix_sec;
    10a4:	0e 94 fe 05 	call	0xbfc	; 0xbfc <_ZN10asyncruino6timer08instanceEv>

000010a8 <.Loc.283>:
    10a8:	dc 01       	movw	r26, r24
    10aa:	54 96       	adiw	r26, 0x14	; 20
    10ac:	0d 91       	ld	r16, X+
    10ae:	1d 91       	ld	r17, X+
    10b0:	2d 91       	ld	r18, X+
    10b2:	3c 91       	ld	r19, X
    10b4:	57 97       	sbiw	r26, 0x17	; 23
    10b6:	0d 87       	std	Y+13, r16	; 0x0d
    10b8:	1e 87       	std	Y+14, r17	; 0x0e
    10ba:	2f 87       	std	Y+15, r18	; 0x0f
    10bc:	38 8b       	std	Y+16, r19	; 0x10
    10be:	6d 85       	ldd	r22, Y+13	; 0x0d
    10c0:	7e 85       	ldd	r23, Y+14	; 0x0e
    10c2:	8f 85       	ldd	r24, Y+15	; 0x0f
    10c4:	98 89       	ldd	r25, Y+16	; 0x10
    10c6:	0e 94 b4 20 	call	0x4168	; 0x4168 <__fixunssfsi>
    10ca:	69 8b       	std	Y+17, r22	; 0x11
    10cc:	7a 8b       	std	Y+18, r23	; 0x12
    10ce:	8b 8b       	std	Y+19, r24	; 0x13
    10d0:	9c 8b       	std	Y+20, r25	; 0x14
    10d2:	8b 81       	ldd	r24, Y+3	; 0x03
    10d4:	9c 81       	ldd	r25, Y+4	; 0x04
    10d6:	09 89       	ldd	r16, Y+17	; 0x11
    10d8:	1a 89       	ldd	r17, Y+18	; 0x12
    10da:	2b 89       	ldd	r18, Y+19	; 0x13
    10dc:	3c 89       	ldd	r19, Y+20	; 0x14
    10de:	dc 01       	movw	r26, r24
    10e0:	94 96       	adiw	r26, 0x24	; 36
    10e2:	0d 93       	st	X+, r16
    10e4:	1d 93       	st	X+, r17
    10e6:	2d 93       	st	X+, r18
    10e8:	3c 93       	st	X, r19
    10ea:	97 97       	sbiw	r26, 0x27	; 39

000010ec <.Loc.284>:
		m_len = write_int(m_ticks_per_sec,x_str);
    10ec:	8b 81       	ldd	r24, Y+3	; 0x03
    10ee:	9c 81       	ldd	r25, Y+4	; 0x04
    10f0:	ac 01       	movw	r20, r24
    10f2:	41 5f       	subi	r20, 0xF1	; 241
    10f4:	5f 4f       	sbci	r21, 0xFF	; 255

000010f6 <.Loc.285>:
asyncruino::task EchoServer(){
    10f6:	8b 81       	ldd	r24, Y+3	; 0x03
    10f8:	9c 81       	ldd	r25, Y+4	; 0x04
    10fa:	dc 01       	movw	r26, r24
    10fc:	94 96       	adiw	r26, 0x24	; 36
    10fe:	0d 91       	ld	r16, X+
    1100:	1d 91       	ld	r17, X+
    1102:	2d 91       	ld	r18, X+
    1104:	3c 91       	ld	r19, X
    1106:	97 97       	sbiw	r26, 0x27	; 39
    1108:	0d 8b       	std	Y+21, r16	; 0x15
    110a:	1e 8b       	std	Y+22, r17	; 0x16
    110c:	2f 8b       	std	Y+23, r18	; 0x17
    110e:	38 8f       	std	Y+24, r19	; 0x18

00001110 <.Loc.286>:
		m_len = write_int(m_ticks_per_sec,x_str);
    1110:	24 e1       	ldi	r18, 0x14	; 20
    1112:	6d 89       	ldd	r22, Y+21	; 0x15
    1114:	7e 89       	ldd	r23, Y+22	; 0x16
    1116:	8f 89       	ldd	r24, Y+23	; 0x17
    1118:	98 8d       	ldd	r25, Y+24	; 0x18
    111a:	0e 94 06 15 	call	0x2a0c	; 0x2a0c <_Z9write_intImEhT_Pch>
    111e:	28 2f       	mov	r18, r24

00001120 <.Loc.287>:
    1120:	8b 81       	ldd	r24, Y+3	; 0x03
    1122:	9c 81       	ldd	r25, Y+4	; 0x04
    1124:	fc 01       	movw	r30, r24
    1126:	23 a3       	std	Z+35, r18	; 0x23

00001128 <.LBB33>:
asyncruino::task EchoServer(){
    1128:	8b 81       	ldd	r24, Y+3	; 0x03
    112a:	9c 81       	ldd	r25, Y+4	; 0x04
    112c:	dc 01       	movw	r26, r24
    112e:	93 96       	adiw	r26, 0x23	; 35
    1130:	8c 91       	ld	r24, X
    1132:	93 97       	sbiw	r26, 0x23	; 35

00001134 <.Loc.289>:
		co_await asyncruino::uart::WriteBytes(x_str,min(m_len,10));
    1134:	28 2f       	mov	r18, r24
    1136:	2a 30       	cpi	r18, 0x0A	; 10
    1138:	11 f0       	breq	.+4      	; 0x113e <.L145>
    113a:	08 f0       	brcs	.+2      	; 0x113e <.L145>
    113c:	2a e0       	ldi	r18, 0x0A	; 10

0000113e <.L145>:
    113e:	8b 81       	ldd	r24, Y+3	; 0x03
    1140:	9c 81       	ldd	r25, Y+4	; 0x04
    1142:	0f 96       	adiw	r24, 0x0f	; 15

00001144 <.Loc.291>:
    1144:	6b 80       	ldd	r6, Y+3	; 0x03
    1146:	7c 80       	ldd	r7, Y+4	; 0x04
    1148:	62 2f       	mov	r22, r18
    114a:	0e 94 f7 03 	call	0x7ee	; 0x7ee <_ZN10asyncruino4uart10WriteBytesEPKch>
    114e:	82 2e       	mov	r8, r18
    1150:	93 2e       	mov	r9, r19
    1152:	a4 2e       	mov	r10, r20
    1154:	b5 2e       	mov	r11, r21
    1156:	c6 2e       	mov	r12, r22
    1158:	d7 2e       	mov	r13, r23
    115a:	e8 2e       	mov	r14, r24
    115c:	f9 2e       	mov	r15, r25
    115e:	08 2d       	mov	r16, r8
    1160:	19 2d       	mov	r17, r9
    1162:	2a 2d       	mov	r18, r10
    1164:	3b 2d       	mov	r19, r11
    1166:	4c 2d       	mov	r20, r12
    1168:	5d 2d       	mov	r21, r13
    116a:	6e 2d       	mov	r22, r14
    116c:	7f 2d       	mov	r23, r15
    116e:	f3 01       	movw	r30, r6
    1170:	05 ab       	std	Z+53, r16	; 0x35
    1172:	d3 01       	movw	r26, r6
    1174:	d6 96       	adiw	r26, 0x36	; 54
    1176:	1c 93       	st	X, r17
    1178:	f3 01       	movw	r30, r6
    117a:	27 ab       	std	Z+55, r18	; 0x37
    117c:	d3 01       	movw	r26, r6
    117e:	d8 96       	adiw	r26, 0x38	; 56
    1180:	3c 93       	st	X, r19
    1182:	f3 01       	movw	r30, r6
    1184:	41 af       	std	Z+57, r20	; 0x39
    1186:	d3 01       	movw	r26, r6
    1188:	da 96       	adiw	r26, 0x3a	; 58
    118a:	5c 93       	st	X, r21

0000118c <.Loc.292>:
    118c:	8b 81       	ldd	r24, Y+3	; 0x03
    118e:	9c 81       	ldd	r25, Y+4	; 0x04
    1190:	c5 96       	adiw	r24, 0x35	; 53
    1192:	0e 94 b6 15 	call	0x2b6c	; 0x2b6c <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE19write_bytes_awaitor11await_readyEv>
    1196:	98 2f       	mov	r25, r24

00001198 <.Loc.293>:
    1198:	81 e0       	ldi	r24, 0x01	; 1
    119a:	89 27       	eor	r24, r25
    119c:	88 23       	and	r24, r24
    119e:	c1 f0       	breq	.+48     	; 0x11d0 <.L134>

000011a0 <.Loc.294>:
    11a0:	8b 81       	ldd	r24, Y+3	; 0x03
    11a2:	9c 81       	ldd	r25, Y+4	; 0x04
    11a4:	2a e0       	ldi	r18, 0x0A	; 10
    11a6:	30 e0       	ldi	r19, 0x00	; 0
    11a8:	fc 01       	movw	r30, r24
    11aa:	30 87       	std	Z+8, r19	; 0x08
    11ac:	27 83       	std	Z+7, r18	; 0x07

000011ae <.Loc.295>:
    11ae:	8b 81       	ldd	r24, Y+3	; 0x03
    11b0:	9c 81       	ldd	r25, Y+4	; 0x04
    11b2:	9c 01       	movw	r18, r24
    11b4:	2b 5c       	subi	r18, 0xCB	; 203
    11b6:	3f 4f       	sbci	r19, 0xFF	; 255
    11b8:	8b 81       	ldd	r24, Y+3	; 0x03
    11ba:	9c 81       	ldd	r25, Y+4	; 0x04
    11bc:	dc 01       	movw	r26, r24
    11be:	15 96       	adiw	r26, 0x05	; 5
    11c0:	8d 91       	ld	r24, X+
    11c2:	9c 91       	ld	r25, X
    11c4:	bc 01       	movw	r22, r24
    11c6:	c9 01       	movw	r24, r18
    11c8:	0e 94 c6 15 	call	0x2b8c	; 0x2b8c <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE19write_bytes_awaitor13await_suspendENSt7__n486116coroutine_handleIvEE>

000011cc <.Loc.296>:
    11cc:	4f c2       	rjmp	.+1182   	; 0x166c <.L143>

000011ce <.L103>:
    11ce:	3f c2       	rjmp	.+1150   	; 0x164e <.L98>

000011d0 <.L134>:
    11d0:	8b 81       	ldd	r24, Y+3	; 0x03
    11d2:	9c 81       	ldd	r25, Y+4	; 0x04
    11d4:	c5 96       	adiw	r24, 0x35	; 53
    11d6:	0e 94 0e 16 	call	0x2c1c	; 0x2c1c <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE19write_bytes_awaitor12await_resumeEv>

000011da <.LBB34>:
		co_await asyncruino::uart::WriteByte('\n');
    11da:	0b 81       	ldd	r16, Y+3	; 0x03
    11dc:	1c 81       	ldd	r17, Y+4	; 0x04
    11de:	8a e0       	ldi	r24, 0x0A	; 10
    11e0:	0e 94 cd 03 	call	0x79a	; 0x79a <_ZN10asyncruino4uart9WriteByteEc>
    11e4:	6d 8f       	std	Y+29, r22	; 0x1d
    11e6:	7e 8f       	std	Y+30, r23	; 0x1e
    11e8:	8f 8f       	std	Y+31, r24	; 0x1f
    11ea:	98 a3       	std	Y+32, r25	; 0x20
    11ec:	2d 8d       	ldd	r18, Y+29	; 0x1d
    11ee:	3e 8d       	ldd	r19, Y+30	; 0x1e
    11f0:	4f 8d       	ldd	r20, Y+31	; 0x1f
    11f2:	58 a1       	ldd	r21, Y+32	; 0x20
    11f4:	d8 01       	movw	r26, r16
    11f6:	db 96       	adiw	r26, 0x3b	; 59
    11f8:	2d 93       	st	X+, r18
    11fa:	3d 93       	st	X+, r19
    11fc:	4d 93       	st	X+, r20
    11fe:	5c 93       	st	X, r21
    1200:	de 97       	sbiw	r26, 0x3e	; 62

00001202 <.Loc.300>:
    1202:	8b 81       	ldd	r24, Y+3	; 0x03
    1204:	9c 81       	ldd	r25, Y+4	; 0x04
    1206:	cb 96       	adiw	r24, 0x3b	; 59
    1208:	0e 94 29 16 	call	0x2c52	; 0x2c52 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE18write_byte_awaitor11await_readyEv>
    120c:	98 2f       	mov	r25, r24

0000120e <.Loc.301>:
    120e:	81 e0       	ldi	r24, 0x01	; 1
    1210:	89 27       	eor	r24, r25
    1212:	88 23       	and	r24, r24
    1214:	c1 f0       	breq	.+48     	; 0x1246 <.L135>

00001216 <.Loc.302>:
    1216:	8b 81       	ldd	r24, Y+3	; 0x03
    1218:	9c 81       	ldd	r25, Y+4	; 0x04
    121a:	2c e0       	ldi	r18, 0x0C	; 12
    121c:	30 e0       	ldi	r19, 0x00	; 0
    121e:	fc 01       	movw	r30, r24
    1220:	30 87       	std	Z+8, r19	; 0x08
    1222:	27 83       	std	Z+7, r18	; 0x07

00001224 <.Loc.303>:
    1224:	8b 81       	ldd	r24, Y+3	; 0x03
    1226:	9c 81       	ldd	r25, Y+4	; 0x04
    1228:	9c 01       	movw	r18, r24
    122a:	25 5c       	subi	r18, 0xC5	; 197
    122c:	3f 4f       	sbci	r19, 0xFF	; 255
    122e:	8b 81       	ldd	r24, Y+3	; 0x03
    1230:	9c 81       	ldd	r25, Y+4	; 0x04
    1232:	dc 01       	movw	r26, r24
    1234:	15 96       	adiw	r26, 0x05	; 5
    1236:	8d 91       	ld	r24, X+
    1238:	9c 91       	ld	r25, X
    123a:	bc 01       	movw	r22, r24
    123c:	c9 01       	movw	r24, r18
    123e:	0e 94 39 16 	call	0x2c72	; 0x2c72 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE18write_byte_awaitor13await_suspendENSt7__n486116coroutine_handleIvEE>

00001242 <.Loc.304>:
    1242:	14 c2       	rjmp	.+1064   	; 0x166c <.L143>

00001244 <.L104>:
    1244:	04 c2       	rjmp	.+1032   	; 0x164e <.L98>

00001246 <.L135>:
    1246:	8b 81       	ldd	r24, Y+3	; 0x03
    1248:	9c 81       	ldd	r25, Y+4	; 0x04
    124a:	cb 96       	adiw	r24, 0x3b	; 59
    124c:	0e 94 73 16 	call	0x2ce6	; 0x2ce6 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE18write_byte_awaitor12await_resumeEv>

00001250 <.LBB35>:
		char c = co_await asyncruino::uart::ReadByte();
    1250:	8b 81       	ldd	r24, Y+3	; 0x03
    1252:	9c 81       	ldd	r25, Y+4	; 0x04
    1254:	8c 01       	movw	r16, r24
    1256:	01 5c       	subi	r16, 0xC1	; 193
    1258:	1f 4f       	sbci	r17, 0xFF	; 255
    125a:	0e 94 80 03 	call	0x700	; 0x700 <_ZN10asyncruino4uart8ReadByteEv>
    125e:	69 a3       	std	Y+33, r22	; 0x21
    1260:	7a a3       	std	Y+34, r23	; 0x22
    1262:	8b a3       	std	Y+35, r24	; 0x23
    1264:	9c a3       	std	Y+36, r25	; 0x24
    1266:	29 a1       	ldd	r18, Y+33	; 0x21
    1268:	3a a1       	ldd	r19, Y+34	; 0x22
    126a:	4b a1       	ldd	r20, Y+35	; 0x23
    126c:	5c a1       	ldd	r21, Y+36	; 0x24
    126e:	d8 01       	movw	r26, r16
    1270:	2d 93       	st	X+, r18
    1272:	3d 93       	st	X+, r19
    1274:	4d 93       	st	X+, r20
    1276:	5c 93       	st	X, r21
    1278:	13 97       	sbiw	r26, 0x03	; 3

0000127a <.Loc.308>:
    127a:	8b 81       	ldd	r24, Y+3	; 0x03
    127c:	9c 81       	ldd	r25, Y+4	; 0x04
    127e:	cf 96       	adiw	r24, 0x3f	; 63
    1280:	0e 94 8e 16 	call	0x2d1c	; 0x2d1c <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE17read_byte_awaitor11await_readyEv>
    1284:	98 2f       	mov	r25, r24

00001286 <.Loc.309>:
};
    1286:	81 e0       	ldi	r24, 0x01	; 1
    1288:	89 27       	eor	r24, r25
    128a:	88 23       	and	r24, r24
    128c:	c1 f0       	breq	.+48     	; 0x12be <.L136>

0000128e <.Loc.310>:
    128e:	8b 81       	ldd	r24, Y+3	; 0x03
    1290:	9c 81       	ldd	r25, Y+4	; 0x04
    1292:	2e e0       	ldi	r18, 0x0E	; 14
    1294:	30 e0       	ldi	r19, 0x00	; 0
    1296:	fc 01       	movw	r30, r24
    1298:	30 87       	std	Z+8, r19	; 0x08
    129a:	27 83       	std	Z+7, r18	; 0x07

0000129c <.Loc.311>:
		char c = co_await asyncruino::uart::ReadByte();
    129c:	8b 81       	ldd	r24, Y+3	; 0x03
    129e:	9c 81       	ldd	r25, Y+4	; 0x04
    12a0:	9c 01       	movw	r18, r24
    12a2:	21 5c       	subi	r18, 0xC1	; 193
    12a4:	3f 4f       	sbci	r19, 0xFF	; 255
    12a6:	8b 81       	ldd	r24, Y+3	; 0x03
    12a8:	9c 81       	ldd	r25, Y+4	; 0x04
    12aa:	dc 01       	movw	r26, r24
    12ac:	15 96       	adiw	r26, 0x05	; 5
    12ae:	8d 91       	ld	r24, X+
    12b0:	9c 91       	ld	r25, X
    12b2:	bc 01       	movw	r22, r24
    12b4:	c9 01       	movw	r24, r18
    12b6:	0e 94 9e 16 	call	0x2d3c	; 0x2d3c <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE17read_byte_awaitor13await_suspendENSt7__n486116coroutine_handleIvEE>

000012ba <.Loc.312>:
};
    12ba:	d8 c1       	rjmp	.+944    	; 0x166c <.L143>

000012bc <.L105>:
    12bc:	c8 c1       	rjmp	.+912    	; 0x164e <.L98>

000012be <.L136>:
		char c = co_await asyncruino::uart::ReadByte();
    12be:	8b 81       	ldd	r24, Y+3	; 0x03
    12c0:	9c 81       	ldd	r25, Y+4	; 0x04
    12c2:	cf 96       	adiw	r24, 0x3f	; 63
    12c4:	0e 94 cd 16 	call	0x2d9a	; 0x2d9a <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE17read_byte_awaitor12await_resumeEv>
    12c8:	28 2f       	mov	r18, r24

000012ca <.Loc.315>:
};
    12ca:	8b 81       	ldd	r24, Y+3	; 0x03
    12cc:	9c 81       	ldd	r25, Y+4	; 0x04
    12ce:	fc 01       	movw	r30, r24
    12d0:	20 a7       	std	Z+40, r18	; 0x28

000012d2 <.LBB36>:
		char c1 = co_await asyncruino::uart::ReadByte();
    12d2:	8b 81       	ldd	r24, Y+3	; 0x03
    12d4:	9c 81       	ldd	r25, Y+4	; 0x04
    12d6:	8c 01       	movw	r16, r24
    12d8:	0d 5b       	subi	r16, 0xBD	; 189
    12da:	1f 4f       	sbci	r17, 0xFF	; 255
    12dc:	0e 94 80 03 	call	0x700	; 0x700 <_ZN10asyncruino4uart8ReadByteEv>
    12e0:	6d a3       	std	Y+37, r22	; 0x25
    12e2:	7e a3       	std	Y+38, r23	; 0x26
    12e4:	8f a3       	std	Y+39, r24	; 0x27
    12e6:	98 a7       	std	Y+40, r25	; 0x28
    12e8:	2d a1       	ldd	r18, Y+37	; 0x25
    12ea:	3e a1       	ldd	r19, Y+38	; 0x26
    12ec:	4f a1       	ldd	r20, Y+39	; 0x27
    12ee:	58 a5       	ldd	r21, Y+40	; 0x28
    12f0:	d8 01       	movw	r26, r16
    12f2:	2d 93       	st	X+, r18
    12f4:	3d 93       	st	X+, r19
    12f6:	4d 93       	st	X+, r20
    12f8:	5c 93       	st	X, r21
    12fa:	13 97       	sbiw	r26, 0x03	; 3

000012fc <.Loc.317>:
    12fc:	8b 81       	ldd	r24, Y+3	; 0x03
    12fe:	9c 81       	ldd	r25, Y+4	; 0x04
    1300:	8d 5b       	subi	r24, 0xBD	; 189
    1302:	9f 4f       	sbci	r25, 0xFF	; 255
    1304:	0e 94 8e 16 	call	0x2d1c	; 0x2d1c <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE17read_byte_awaitor11await_readyEv>
    1308:	98 2f       	mov	r25, r24

0000130a <.Loc.318>:
};
    130a:	81 e0       	ldi	r24, 0x01	; 1
    130c:	89 27       	eor	r24, r25
    130e:	88 23       	and	r24, r24
    1310:	c1 f0       	breq	.+48     	; 0x1342 <.L137>

00001312 <.Loc.319>:
    1312:	8b 81       	ldd	r24, Y+3	; 0x03
    1314:	9c 81       	ldd	r25, Y+4	; 0x04
    1316:	20 e1       	ldi	r18, 0x10	; 16
    1318:	30 e0       	ldi	r19, 0x00	; 0
    131a:	fc 01       	movw	r30, r24
    131c:	30 87       	std	Z+8, r19	; 0x08
    131e:	27 83       	std	Z+7, r18	; 0x07

00001320 <.Loc.320>:
		char c1 = co_await asyncruino::uart::ReadByte();
    1320:	8b 81       	ldd	r24, Y+3	; 0x03
    1322:	9c 81       	ldd	r25, Y+4	; 0x04
    1324:	9c 01       	movw	r18, r24
    1326:	2d 5b       	subi	r18, 0xBD	; 189
    1328:	3f 4f       	sbci	r19, 0xFF	; 255
    132a:	8b 81       	ldd	r24, Y+3	; 0x03
    132c:	9c 81       	ldd	r25, Y+4	; 0x04
    132e:	dc 01       	movw	r26, r24
    1330:	15 96       	adiw	r26, 0x05	; 5
    1332:	8d 91       	ld	r24, X+
    1334:	9c 91       	ld	r25, X
    1336:	bc 01       	movw	r22, r24
    1338:	c9 01       	movw	r24, r18
    133a:	0e 94 9e 16 	call	0x2d3c	; 0x2d3c <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE17read_byte_awaitor13await_suspendENSt7__n486116coroutine_handleIvEE>

0000133e <.Loc.321>:
};
    133e:	96 c1       	rjmp	.+812    	; 0x166c <.L143>

00001340 <.L106>:
    1340:	86 c1       	rjmp	.+780    	; 0x164e <.L98>

00001342 <.L137>:
		char c1 = co_await asyncruino::uart::ReadByte();
    1342:	8b 81       	ldd	r24, Y+3	; 0x03
    1344:	9c 81       	ldd	r25, Y+4	; 0x04
    1346:	8d 5b       	subi	r24, 0xBD	; 189
    1348:	9f 4f       	sbci	r25, 0xFF	; 255
    134a:	0e 94 cd 16 	call	0x2d9a	; 0x2d9a <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE17read_byte_awaitor12await_resumeEv>
    134e:	28 2f       	mov	r18, r24

00001350 <.Loc.324>:
};
    1350:	8b 81       	ldd	r24, Y+3	; 0x03
    1352:	9c 81       	ldd	r25, Y+4	; 0x04
    1354:	fc 01       	movw	r30, r24
    1356:	21 a7       	std	Z+41, r18	; 0x29

00001358 <.LBB37>:
asyncruino::task EchoServer(){
    1358:	8b 81       	ldd	r24, Y+3	; 0x03
    135a:	9c 81       	ldd	r25, Y+4	; 0x04
    135c:	dc 01       	movw	r26, r24
    135e:	98 96       	adiw	r26, 0x28	; 40
    1360:	2c 91       	ld	r18, X

00001362 <.Loc.326>:
		co_await asyncruino::uart::WriteByte(c);
    1362:	8b 81       	ldd	r24, Y+3	; 0x03
    1364:	9c 81       	ldd	r25, Y+4	; 0x04
    1366:	8c 01       	movw	r16, r24
    1368:	09 5b       	subi	r16, 0xB9	; 185
    136a:	1f 4f       	sbci	r17, 0xFF	; 255
    136c:	82 2f       	mov	r24, r18
    136e:	0e 94 cd 03 	call	0x79a	; 0x79a <_ZN10asyncruino4uart9WriteByteEc>
    1372:	69 a7       	std	Y+41, r22	; 0x29
    1374:	7a a7       	std	Y+42, r23	; 0x2a
    1376:	8b a7       	std	Y+43, r24	; 0x2b
    1378:	9c a7       	std	Y+44, r25	; 0x2c
    137a:	29 a5       	ldd	r18, Y+41	; 0x29
    137c:	3a a5       	ldd	r19, Y+42	; 0x2a
    137e:	4b a5       	ldd	r20, Y+43	; 0x2b
    1380:	5c a5       	ldd	r21, Y+44	; 0x2c
    1382:	d8 01       	movw	r26, r16
    1384:	2d 93       	st	X+, r18
    1386:	3d 93       	st	X+, r19
    1388:	4d 93       	st	X+, r20
    138a:	5c 93       	st	X, r21
    138c:	13 97       	sbiw	r26, 0x03	; 3

0000138e <.Loc.327>:
    138e:	8b 81       	ldd	r24, Y+3	; 0x03
    1390:	9c 81       	ldd	r25, Y+4	; 0x04
    1392:	89 5b       	subi	r24, 0xB9	; 185
    1394:	9f 4f       	sbci	r25, 0xFF	; 255
    1396:	0e 94 29 16 	call	0x2c52	; 0x2c52 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE18write_byte_awaitor11await_readyEv>
    139a:	98 2f       	mov	r25, r24

0000139c <.Loc.328>:
    139c:	81 e0       	ldi	r24, 0x01	; 1
    139e:	89 27       	eor	r24, r25
    13a0:	88 23       	and	r24, r24
    13a2:	c1 f0       	breq	.+48     	; 0x13d4 <.L138>

000013a4 <.Loc.329>:
    13a4:	8b 81       	ldd	r24, Y+3	; 0x03
    13a6:	9c 81       	ldd	r25, Y+4	; 0x04
    13a8:	22 e1       	ldi	r18, 0x12	; 18
    13aa:	30 e0       	ldi	r19, 0x00	; 0
    13ac:	fc 01       	movw	r30, r24
    13ae:	30 87       	std	Z+8, r19	; 0x08
    13b0:	27 83       	std	Z+7, r18	; 0x07

000013b2 <.Loc.330>:
    13b2:	8b 81       	ldd	r24, Y+3	; 0x03
    13b4:	9c 81       	ldd	r25, Y+4	; 0x04
    13b6:	9c 01       	movw	r18, r24
    13b8:	29 5b       	subi	r18, 0xB9	; 185
    13ba:	3f 4f       	sbci	r19, 0xFF	; 255
    13bc:	8b 81       	ldd	r24, Y+3	; 0x03
    13be:	9c 81       	ldd	r25, Y+4	; 0x04
    13c0:	dc 01       	movw	r26, r24
    13c2:	15 96       	adiw	r26, 0x05	; 5
    13c4:	8d 91       	ld	r24, X+
    13c6:	9c 91       	ld	r25, X
    13c8:	bc 01       	movw	r22, r24
    13ca:	c9 01       	movw	r24, r18
    13cc:	0e 94 39 16 	call	0x2c72	; 0x2c72 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE18write_byte_awaitor13await_suspendENSt7__n486116coroutine_handleIvEE>

000013d0 <.Loc.331>:
    13d0:	4d c1       	rjmp	.+666    	; 0x166c <.L143>

000013d2 <.L107>:
    13d2:	3d c1       	rjmp	.+634    	; 0x164e <.L98>

000013d4 <.L138>:
    13d4:	8b 81       	ldd	r24, Y+3	; 0x03
    13d6:	9c 81       	ldd	r25, Y+4	; 0x04
    13d8:	89 5b       	subi	r24, 0xB9	; 185
    13da:	9f 4f       	sbci	r25, 0xFF	; 255
    13dc:	0e 94 73 16 	call	0x2ce6	; 0x2ce6 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE18write_byte_awaitor12await_resumeEv>

000013e0 <.LBB38>:
asyncruino::task EchoServer(){
    13e0:	8b 81       	ldd	r24, Y+3	; 0x03
    13e2:	9c 81       	ldd	r25, Y+4	; 0x04
    13e4:	fc 01       	movw	r30, r24
    13e6:	21 a5       	ldd	r18, Z+41	; 0x29

000013e8 <.Loc.335>:
		co_await asyncruino::uart::WriteByte(c1);
    13e8:	8b 81       	ldd	r24, Y+3	; 0x03
    13ea:	9c 81       	ldd	r25, Y+4	; 0x04
    13ec:	8c 01       	movw	r16, r24
    13ee:	05 5b       	subi	r16, 0xB5	; 181
    13f0:	1f 4f       	sbci	r17, 0xFF	; 255
    13f2:	82 2f       	mov	r24, r18
    13f4:	0e 94 cd 03 	call	0x79a	; 0x79a <_ZN10asyncruino4uart9WriteByteEc>
    13f8:	6d a7       	std	Y+45, r22	; 0x2d
    13fa:	7e a7       	std	Y+46, r23	; 0x2e
    13fc:	8f a7       	std	Y+47, r24	; 0x2f
    13fe:	98 ab       	std	Y+48, r25	; 0x30
    1400:	2d a5       	ldd	r18, Y+45	; 0x2d
    1402:	3e a5       	ldd	r19, Y+46	; 0x2e
    1404:	4f a5       	ldd	r20, Y+47	; 0x2f
    1406:	58 a9       	ldd	r21, Y+48	; 0x30
    1408:	d8 01       	movw	r26, r16
    140a:	2d 93       	st	X+, r18
    140c:	3d 93       	st	X+, r19
    140e:	4d 93       	st	X+, r20
    1410:	5c 93       	st	X, r21
    1412:	13 97       	sbiw	r26, 0x03	; 3

00001414 <.Loc.336>:
    1414:	8b 81       	ldd	r24, Y+3	; 0x03
    1416:	9c 81       	ldd	r25, Y+4	; 0x04
    1418:	85 5b       	subi	r24, 0xB5	; 181
    141a:	9f 4f       	sbci	r25, 0xFF	; 255
    141c:	0e 94 29 16 	call	0x2c52	; 0x2c52 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE18write_byte_awaitor11await_readyEv>
    1420:	98 2f       	mov	r25, r24

00001422 <.Loc.337>:
    1422:	81 e0       	ldi	r24, 0x01	; 1
    1424:	89 27       	eor	r24, r25
    1426:	88 23       	and	r24, r24
    1428:	c1 f0       	breq	.+48     	; 0x145a <.L139>

0000142a <.Loc.338>:
    142a:	8b 81       	ldd	r24, Y+3	; 0x03
    142c:	9c 81       	ldd	r25, Y+4	; 0x04
    142e:	24 e1       	ldi	r18, 0x14	; 20
    1430:	30 e0       	ldi	r19, 0x00	; 0
    1432:	fc 01       	movw	r30, r24
    1434:	30 87       	std	Z+8, r19	; 0x08
    1436:	27 83       	std	Z+7, r18	; 0x07

00001438 <.Loc.339>:
    1438:	8b 81       	ldd	r24, Y+3	; 0x03
    143a:	9c 81       	ldd	r25, Y+4	; 0x04
    143c:	9c 01       	movw	r18, r24
    143e:	25 5b       	subi	r18, 0xB5	; 181
    1440:	3f 4f       	sbci	r19, 0xFF	; 255
    1442:	8b 81       	ldd	r24, Y+3	; 0x03
    1444:	9c 81       	ldd	r25, Y+4	; 0x04
    1446:	dc 01       	movw	r26, r24
    1448:	15 96       	adiw	r26, 0x05	; 5
    144a:	8d 91       	ld	r24, X+
    144c:	9c 91       	ld	r25, X
    144e:	bc 01       	movw	r22, r24
    1450:	c9 01       	movw	r24, r18
    1452:	0e 94 39 16 	call	0x2c72	; 0x2c72 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE18write_byte_awaitor13await_suspendENSt7__n486116coroutine_handleIvEE>

00001456 <.Loc.340>:
    1456:	0a c1       	rjmp	.+532    	; 0x166c <.L143>

00001458 <.L108>:
    1458:	fa c0       	rjmp	.+500    	; 0x164e <.L98>

0000145a <.L139>:
    145a:	8b 81       	ldd	r24, Y+3	; 0x03
    145c:	9c 81       	ldd	r25, Y+4	; 0x04
    145e:	85 5b       	subi	r24, 0xB5	; 181
    1460:	9f 4f       	sbci	r25, 0xFF	; 255
    1462:	0e 94 73 16 	call	0x2ce6	; 0x2ce6 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE18write_byte_awaitor12await_resumeEv>

00001466 <.LBB39>:
		uint8_t rd = co_await asyncruino::uart::ReadBytesUntil(x_str,'\n',10);
    1466:	8b 81       	ldd	r24, Y+3	; 0x03
    1468:	9c 81       	ldd	r25, Y+4	; 0x04
    146a:	bc 01       	movw	r22, r24
    146c:	61 5f       	subi	r22, 0xF1	; 241
    146e:	7f 4f       	sbci	r23, 0xFF	; 255

00001470 <.Loc.344>:
    1470:	8b 81       	ldd	r24, Y+3	; 0x03
    1472:	9c 81       	ldd	r25, Y+4	; 0x04
    1474:	81 5b       	subi	r24, 0xB1	; 177
    1476:	9f 4f       	sbci	r25, 0xFF	; 255
    1478:	2a e0       	ldi	r18, 0x0A	; 10
    147a:	4a e0       	ldi	r20, 0x0A	; 10
    147c:	0e 94 a7 03 	call	0x74e	; 0x74e <_ZN10asyncruino4uart14ReadBytesUntilEPcch>

00001480 <.Loc.345>:
    1480:	8b 81       	ldd	r24, Y+3	; 0x03
    1482:	9c 81       	ldd	r25, Y+4	; 0x04
    1484:	81 5b       	subi	r24, 0xB1	; 177
    1486:	9f 4f       	sbci	r25, 0xFF	; 255
    1488:	0e 94 0b 17 	call	0x2e16	; 0x2e16 <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE24read_bytes_until_awaitorILh1EE11await_readyEv>
    148c:	98 2f       	mov	r25, r24

0000148e <.Loc.346>:
};
    148e:	81 e0       	ldi	r24, 0x01	; 1
    1490:	89 27       	eor	r24, r25
    1492:	88 23       	and	r24, r24
    1494:	c1 f0       	breq	.+48     	; 0x14c6 <.L140>

00001496 <.Loc.347>:
    1496:	8b 81       	ldd	r24, Y+3	; 0x03
    1498:	9c 81       	ldd	r25, Y+4	; 0x04
    149a:	26 e1       	ldi	r18, 0x16	; 22
    149c:	30 e0       	ldi	r19, 0x00	; 0
    149e:	fc 01       	movw	r30, r24
    14a0:	30 87       	std	Z+8, r19	; 0x08
    14a2:	27 83       	std	Z+7, r18	; 0x07

000014a4 <.Loc.348>:
		uint8_t rd = co_await asyncruino::uart::ReadBytesUntil(x_str,'\n',10);
    14a4:	8b 81       	ldd	r24, Y+3	; 0x03
    14a6:	9c 81       	ldd	r25, Y+4	; 0x04
    14a8:	9c 01       	movw	r18, r24
    14aa:	21 5b       	subi	r18, 0xB1	; 177
    14ac:	3f 4f       	sbci	r19, 0xFF	; 255
    14ae:	8b 81       	ldd	r24, Y+3	; 0x03
    14b0:	9c 81       	ldd	r25, Y+4	; 0x04
    14b2:	dc 01       	movw	r26, r24
    14b4:	15 96       	adiw	r26, 0x05	; 5
    14b6:	8d 91       	ld	r24, X+
    14b8:	9c 91       	ld	r25, X
    14ba:	bc 01       	movw	r22, r24
    14bc:	c9 01       	movw	r24, r18
    14be:	0e 94 1b 17 	call	0x2e36	; 0x2e36 <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE24read_bytes_until_awaitorILh1EE13await_suspendENSt7__n486116coroutine_handleIvEE>

000014c2 <.Loc.349>:
};
    14c2:	d4 c0       	rjmp	.+424    	; 0x166c <.L143>

000014c4 <.L109>:
    14c4:	c4 c0       	rjmp	.+392    	; 0x164e <.L98>

000014c6 <.L140>:
		uint8_t rd = co_await asyncruino::uart::ReadBytesUntil(x_str,'\n',10);
    14c6:	8b 81       	ldd	r24, Y+3	; 0x03
    14c8:	9c 81       	ldd	r25, Y+4	; 0x04
    14ca:	81 5b       	subi	r24, 0xB1	; 177
    14cc:	9f 4f       	sbci	r25, 0xFF	; 255
    14ce:	0e 94 75 17 	call	0x2eea	; 0x2eea <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE24read_bytes_until_awaitorILh1EE12await_resumeEv>
    14d2:	28 2f       	mov	r18, r24

000014d4 <.Loc.352>:
};
    14d4:	8b 81       	ldd	r24, Y+3	; 0x03
    14d6:	9c 81       	ldd	r25, Y+4	; 0x04
    14d8:	fc 01       	movw	r30, r24
    14da:	22 a7       	std	Z+42, r18	; 0x2a

000014dc <.LBE39>:
asyncruino::task EchoServer(){
    14dc:	8b 81       	ldd	r24, Y+3	; 0x03
    14de:	9c 81       	ldd	r25, Y+4	; 0x04
    14e0:	dc 01       	movw	r26, r24
    14e2:	9a 96       	adiw	r26, 0x2a	; 42
    14e4:	8c 91       	ld	r24, X
    14e6:	9a 97       	sbiw	r26, 0x2a	; 42

000014e8 <.Loc.354>:
		if(rd == 10){
    14e8:	8a 30       	cpi	r24, 0x0A	; 10
    14ea:	09 f0       	breq	.+2      	; 0x14ee <.LBB40>

000014ec <L0^A>:
    14ec:	53 c0       	rjmp	.+166    	; 0x1594 <.L146>

000014ee <.LBB40>:
			co_await asyncruino::uart::WriteBytes("expect '\\n'\n");
    14ee:	8b 81       	ldd	r24, Y+3	; 0x03
    14f0:	9c 81       	ldd	r25, Y+4	; 0x04
    14f2:	3c 01       	movw	r6, r24
    14f4:	b9 e5       	ldi	r27, 0x59	; 89
    14f6:	6b 0e       	add	r6, r27
    14f8:	71 1c       	adc	r7, r1
    14fa:	86 e0       	ldi	r24, 0x06	; 6
    14fc:	91 e0       	ldi	r25, 0x01	; 1
    14fe:	0e 94 62 04 	call	0x8c4	; 0x8c4 <_ZN10asyncruino4uart10WriteBytesEPKc>
    1502:	82 2e       	mov	r8, r18
    1504:	93 2e       	mov	r9, r19
    1506:	a4 2e       	mov	r10, r20
    1508:	b5 2e       	mov	r11, r21
    150a:	c6 2e       	mov	r12, r22
    150c:	d7 2e       	mov	r13, r23
    150e:	e8 2e       	mov	r14, r24
    1510:	f9 2e       	mov	r15, r25
    1512:	08 2d       	mov	r16, r8
    1514:	19 2d       	mov	r17, r9
    1516:	2a 2d       	mov	r18, r10
    1518:	3b 2d       	mov	r19, r11
    151a:	4c 2d       	mov	r20, r12
    151c:	5d 2d       	mov	r21, r13
    151e:	6e 2d       	mov	r22, r14
    1520:	7f 2d       	mov	r23, r15
    1522:	f3 01       	movw	r30, r6
    1524:	00 83       	st	Z, r16
    1526:	d3 01       	movw	r26, r6
    1528:	11 96       	adiw	r26, 0x01	; 1
    152a:	1c 93       	st	X, r17
    152c:	f3 01       	movw	r30, r6
    152e:	22 83       	std	Z+2, r18	; 0x02
    1530:	d3 01       	movw	r26, r6
    1532:	13 96       	adiw	r26, 0x03	; 3
    1534:	3c 93       	st	X, r19
    1536:	f3 01       	movw	r30, r6
    1538:	44 83       	std	Z+4, r20	; 0x04
    153a:	d3 01       	movw	r26, r6
    153c:	15 96       	adiw	r26, 0x05	; 5
    153e:	5c 93       	st	X, r21

00001540 <.Loc.356>:
    1540:	8b 81       	ldd	r24, Y+3	; 0x03
    1542:	9c 81       	ldd	r25, Y+4	; 0x04
    1544:	87 5a       	subi	r24, 0xA7	; 167
    1546:	9f 4f       	sbci	r25, 0xFF	; 255
    1548:	0e 94 b6 15 	call	0x2b6c	; 0x2b6c <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE19write_bytes_awaitor11await_readyEv>
    154c:	98 2f       	mov	r25, r24

0000154e <.Loc.357>:
    154e:	81 e0       	ldi	r24, 0x01	; 1
    1550:	89 27       	eor	r24, r25
    1552:	88 23       	and	r24, r24
    1554:	c1 f0       	breq	.+48     	; 0x1586 <.L141>

00001556 <.Loc.358>:
    1556:	8b 81       	ldd	r24, Y+3	; 0x03
    1558:	9c 81       	ldd	r25, Y+4	; 0x04
    155a:	28 e1       	ldi	r18, 0x18	; 24
    155c:	30 e0       	ldi	r19, 0x00	; 0
    155e:	fc 01       	movw	r30, r24
    1560:	30 87       	std	Z+8, r19	; 0x08
    1562:	27 83       	std	Z+7, r18	; 0x07

00001564 <.Loc.359>:
    1564:	8b 81       	ldd	r24, Y+3	; 0x03
    1566:	9c 81       	ldd	r25, Y+4	; 0x04
    1568:	9c 01       	movw	r18, r24
    156a:	27 5a       	subi	r18, 0xA7	; 167
    156c:	3f 4f       	sbci	r19, 0xFF	; 255
    156e:	8b 81       	ldd	r24, Y+3	; 0x03
    1570:	9c 81       	ldd	r25, Y+4	; 0x04
    1572:	dc 01       	movw	r26, r24
    1574:	15 96       	adiw	r26, 0x05	; 5
    1576:	8d 91       	ld	r24, X+
    1578:	9c 91       	ld	r25, X
    157a:	bc 01       	movw	r22, r24
    157c:	c9 01       	movw	r24, r18
    157e:	0e 94 c6 15 	call	0x2b8c	; 0x2b8c <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE19write_bytes_awaitor13await_suspendENSt7__n486116coroutine_handleIvEE>

00001582 <.Loc.360>:
    1582:	74 c0       	rjmp	.+232    	; 0x166c <.L143>

00001584 <.L110>:
    1584:	64 c0       	rjmp	.+200    	; 0x164e <.L98>

00001586 <.L141>:
    1586:	8b 81       	ldd	r24, Y+3	; 0x03
    1588:	9c 81       	ldd	r25, Y+4	; 0x04
    158a:	87 5a       	subi	r24, 0xA7	; 167
    158c:	9f 4f       	sbci	r25, 0xFF	; 255
    158e:	0e 94 0e 16 	call	0x2c1c	; 0x2c1c <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE19write_bytes_awaitor12await_resumeEv>

00001592 <.LBE40>:
	}
    1592:	c8 cc       	rjmp	.-1648   	; 0xf24 <.L149>

00001594 <.L146>:
asyncruino::task EchoServer(){
    1594:	8b 81       	ldd	r24, Y+3	; 0x03
    1596:	9c 81       	ldd	r25, Y+4	; 0x04
    1598:	fc 01       	movw	r30, r24
    159a:	42 a5       	ldd	r20, Z+42	; 0x2a

0000159c <.Loc.365>:
			co_await asyncruino::uart::WriteBytes(x_str,rd);
    159c:	8b 81       	ldd	r24, Y+3	; 0x03
    159e:	9c 81       	ldd	r25, Y+4	; 0x04
    15a0:	9c 01       	movw	r18, r24
    15a2:	21 5f       	subi	r18, 0xF1	; 241
    15a4:	3f 4f       	sbci	r19, 0xFF	; 255

000015a6 <.Loc.366>:
    15a6:	8b 81       	ldd	r24, Y+3	; 0x03
    15a8:	9c 81       	ldd	r25, Y+4	; 0x04
    15aa:	3c 01       	movw	r6, r24
    15ac:	ff e5       	ldi	r31, 0x5F	; 95
    15ae:	6f 0e       	add	r6, r31
    15b0:	71 1c       	adc	r7, r1
    15b2:	64 2f       	mov	r22, r20
    15b4:	c9 01       	movw	r24, r18
    15b6:	0e 94 f7 03 	call	0x7ee	; 0x7ee <_ZN10asyncruino4uart10WriteBytesEPKch>
    15ba:	82 2e       	mov	r8, r18
    15bc:	93 2e       	mov	r9, r19
    15be:	a4 2e       	mov	r10, r20
    15c0:	b5 2e       	mov	r11, r21
    15c2:	c6 2e       	mov	r12, r22
    15c4:	d7 2e       	mov	r13, r23
    15c6:	e8 2e       	mov	r14, r24
    15c8:	f9 2e       	mov	r15, r25
    15ca:	08 2d       	mov	r16, r8
    15cc:	19 2d       	mov	r17, r9
    15ce:	2a 2d       	mov	r18, r10
    15d0:	3b 2d       	mov	r19, r11
    15d2:	4c 2d       	mov	r20, r12
    15d4:	5d 2d       	mov	r21, r13
    15d6:	6e 2d       	mov	r22, r14
    15d8:	7f 2d       	mov	r23, r15
    15da:	d3 01       	movw	r26, r6
    15dc:	0c 93       	st	X, r16
    15de:	f3 01       	movw	r30, r6
    15e0:	11 83       	std	Z+1, r17	; 0x01
    15e2:	d3 01       	movw	r26, r6
    15e4:	12 96       	adiw	r26, 0x02	; 2
    15e6:	2c 93       	st	X, r18
    15e8:	f3 01       	movw	r30, r6
    15ea:	33 83       	std	Z+3, r19	; 0x03
    15ec:	d3 01       	movw	r26, r6
    15ee:	14 96       	adiw	r26, 0x04	; 4
    15f0:	4c 93       	st	X, r20
    15f2:	f3 01       	movw	r30, r6
    15f4:	55 83       	std	Z+5, r21	; 0x05

000015f6 <.Loc.367>:
    15f6:	8b 81       	ldd	r24, Y+3	; 0x03
    15f8:	9c 81       	ldd	r25, Y+4	; 0x04
    15fa:	81 5a       	subi	r24, 0xA1	; 161
    15fc:	9f 4f       	sbci	r25, 0xFF	; 255
    15fe:	0e 94 b6 15 	call	0x2b6c	; 0x2b6c <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE19write_bytes_awaitor11await_readyEv>
    1602:	98 2f       	mov	r25, r24

00001604 <.Loc.368>:
    1604:	81 e0       	ldi	r24, 0x01	; 1
    1606:	89 27       	eor	r24, r25
    1608:	88 23       	and	r24, r24
    160a:	c9 f0       	breq	.+50     	; 0x163e <.L142>

0000160c <.Loc.369>:
    160c:	8b 81       	ldd	r24, Y+3	; 0x03
    160e:	9c 81       	ldd	r25, Y+4	; 0x04
    1610:	2a e1       	ldi	r18, 0x1A	; 26
    1612:	30 e0       	ldi	r19, 0x00	; 0
    1614:	dc 01       	movw	r26, r24
    1616:	18 96       	adiw	r26, 0x08	; 8
    1618:	3c 93       	st	X, r19
    161a:	2e 93       	st	-X, r18
    161c:	17 97       	sbiw	r26, 0x07	; 7

0000161e <.Loc.370>:
    161e:	8b 81       	ldd	r24, Y+3	; 0x03
    1620:	9c 81       	ldd	r25, Y+4	; 0x04
    1622:	9c 01       	movw	r18, r24
    1624:	21 5a       	subi	r18, 0xA1	; 161
    1626:	3f 4f       	sbci	r19, 0xFF	; 255
    1628:	8b 81       	ldd	r24, Y+3	; 0x03
    162a:	9c 81       	ldd	r25, Y+4	; 0x04
    162c:	fc 01       	movw	r30, r24
    162e:	85 81       	ldd	r24, Z+5	; 0x05
    1630:	96 81       	ldd	r25, Z+6	; 0x06
    1632:	bc 01       	movw	r22, r24
    1634:	c9 01       	movw	r24, r18
    1636:	0e 94 c6 15 	call	0x2b8c	; 0x2b8c <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE19write_bytes_awaitor13await_suspendENSt7__n486116coroutine_handleIvEE>

0000163a <.Loc.371>:
    163a:	18 c0       	rjmp	.+48     	; 0x166c <.L143>

0000163c <.L111>:
    163c:	08 c0       	rjmp	.+16     	; 0x164e <.L98>

0000163e <.L142>:
    163e:	8b 81       	ldd	r24, Y+3	; 0x03
    1640:	9c 81       	ldd	r25, Y+4	; 0x04
    1642:	81 5a       	subi	r24, 0xA1	; 161
    1644:	9f 4f       	sbci	r25, 0xFF	; 255
    1646:	0e 94 0e 16 	call	0x2c1c	; 0x2c1c <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE19write_bytes_awaitor12await_resumeEv>

0000164a <.LBE41>:
	}
    164a:	6c cc       	rjmp	.-1832   	; 0xf24 <.L149>

0000164c <.L153>:
	...

0000164e <.L98>:
};
    164e:	8b 81       	ldd	r24, Y+3	; 0x03
    1650:	9c 81       	ldd	r25, Y+4	; 0x04
    1652:	dc 01       	movw	r26, r24
    1654:	19 96       	adiw	r26, 0x09	; 9
    1656:	8c 91       	ld	r24, X
    1658:	19 97       	sbiw	r26, 0x09	; 9
    165a:	88 2f       	mov	r24, r24
    165c:	90 e0       	ldi	r25, 0x00	; 0
    165e:	00 97       	sbiw	r24, 0x00	; 0
    1660:	29 f0       	breq	.+10     	; 0x166c <.L143>

00001662 <.Loc.377>:
    1662:	8b 81       	ldd	r24, Y+3	; 0x03
    1664:	9c 81       	ldd	r25, Y+4	; 0x04
    1666:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN10asyncruino4task12promise_typedlEPv>

0000166a <.Loc.378>:
asyncruino::task EchoServer(){
    166a:	00 c0       	rjmp	.+0      	; 0x166c <.L143>

0000166c <.L143>:
	...

0000166e <.LBE24>:
    166e:	e0 96       	adiw	r28, 0x30	; 48
    1670:	0f b6       	in	r0, 0x3f	; 63
    1672:	f8 94       	cli
    1674:	de bf       	out	0x3e, r29	; 62
    1676:	0f be       	out	0x3f, r0	; 63
    1678:	cd bf       	out	0x3d, r28	; 61
    167a:	df 91       	pop	r29
    167c:	cf 91       	pop	r28
    167e:	1f 91       	pop	r17
    1680:	0f 91       	pop	r16
    1682:	ff 90       	pop	r15
    1684:	ef 90       	pop	r14
    1686:	df 90       	pop	r13
    1688:	cf 90       	pop	r12
    168a:	bf 90       	pop	r11
    168c:	af 90       	pop	r10
    168e:	9f 90       	pop	r9
    1690:	8f 90       	pop	r8
    1692:	7f 90       	pop	r7
    1694:	6f 90       	pop	r6
    1696:	08 95       	ret

00001698 <_Z10EchoServerPZ10EchoServervE21_Z10EchoServerv.Frame.destroy>:
    1698:	cf 93       	push	r28
    169a:	df 93       	push	r29
    169c:	00 d0       	rcall	.+0      	; 0x169e <L0^A>

0000169e <L0^A>:
    169e:	cd b7       	in	r28, 0x3d	; 61
    16a0:	de b7       	in	r29, 0x3e	; 62
    16a2:	9a 83       	std	Y+2, r25	; 0x02
    16a4:	89 83       	std	Y+1, r24	; 0x01

000016a6 <.Loc.381>:
    16a6:	89 81       	ldd	r24, Y+1	; 0x01
    16a8:	9a 81       	ldd	r25, Y+2	; 0x02
    16aa:	fc 01       	movw	r30, r24
    16ac:	87 81       	ldd	r24, Z+7	; 0x07
    16ae:	90 85       	ldd	r25, Z+8	; 0x08
    16b0:	9c 01       	movw	r18, r24
    16b2:	21 60       	ori	r18, 0x01	; 1
    16b4:	89 81       	ldd	r24, Y+1	; 0x01
    16b6:	9a 81       	ldd	r25, Y+2	; 0x02
    16b8:	fc 01       	movw	r30, r24
    16ba:	30 87       	std	Z+8, r19	; 0x08
    16bc:	27 83       	std	Z+7, r18	; 0x07
    16be:	89 81       	ldd	r24, Y+1	; 0x01
    16c0:	9a 81       	ldd	r25, Y+2	; 0x02
    16c2:	0e 94 82 06 	call	0xd04	; 0xd04 <_Z10EchoServerPZ10EchoServervE21_Z10EchoServerv.Frame.actor>
    16c6:	0f 90       	pop	r0
    16c8:	0f 90       	pop	r0
    16ca:	df 91       	pop	r29
    16cc:	cf 91       	pop	r28
    16ce:	08 95       	ret

000016d0 <_ZN10asyncruino18timer_counter_implINS_9schedulerENS_13default_guardEmNS_17timer_dim_counterIyfLi0EEEhLj1EE5DelayIyEEDaT_>:
        inline auto Delay(_size_type _delayed,time_prefix_t<sec_prefix> _prfx){
            return this->Delay(m_counter.to_counter_t(_delayed,_prfx));
        }; 

        template <typename _size_type>
        inline auto Delay(_size_type _delayed){
    16d0:	8f 92       	push	r8
    16d2:	9f 92       	push	r9
    16d4:	af 92       	push	r10
    16d6:	bf 92       	push	r11
    16d8:	cf 92       	push	r12
    16da:	df 92       	push	r13
    16dc:	ef 92       	push	r14
    16de:	ff 92       	push	r15
    16e0:	0f 93       	push	r16
    16e2:	1f 93       	push	r17
    16e4:	cf 93       	push	r28
    16e6:	df 93       	push	r29
    16e8:	cd b7       	in	r28, 0x3d	; 61
    16ea:	de b7       	in	r29, 0x3e	; 62
    16ec:	68 97       	sbiw	r28, 0x18	; 24
    16ee:	0f b6       	in	r0, 0x3f	; 63
    16f0:	f8 94       	cli
    16f2:	de bf       	out	0x3e, r29	; 62
    16f4:	0f be       	out	0x3f, r0	; 63
    16f6:	cd bf       	out	0x3d, r28	; 61
    16f8:	98 87       	std	Y+8, r25	; 0x08
    16fa:	8f 83       	std	Y+7, r24	; 0x07
    16fc:	09 87       	std	Y+9, r16	; 0x09
    16fe:	1a 87       	std	Y+10, r17	; 0x0a
    1700:	2b 87       	std	Y+11, r18	; 0x0b
    1702:	3c 87       	std	Y+12, r19	; 0x0c
    1704:	4d 87       	std	Y+13, r20	; 0x0d
    1706:	5e 87       	std	Y+14, r21	; 0x0e
    1708:	6f 87       	std	Y+15, r22	; 0x0f
    170a:	78 8b       	std	Y+16, r23	; 0x10

0000170c <.Loc.383>:
            return this->timer_base_t::Delay(_delayed);
    170c:	2f 81       	ldd	r18, Y+7	; 0x07
    170e:	38 85       	ldd	r19, Y+8	; 0x08
    1710:	89 85       	ldd	r24, Y+9	; 0x09
    1712:	9a 85       	ldd	r25, Y+10	; 0x0a
    1714:	ab 85       	ldd	r26, Y+11	; 0x0b
    1716:	bc 85       	ldd	r27, Y+12	; 0x0c
    1718:	ac 01       	movw	r20, r24
    171a:	bd 01       	movw	r22, r26
    171c:	c9 01       	movw	r24, r18
    171e:	0e 94 05 18 	call	0x300a	; 0x300a <_ZN10asyncruino10timer_implINS_9schedulerENS_13default_guardEmhLh1EE5DelayEm>
    1722:	82 2e       	mov	r8, r18
    1724:	93 2e       	mov	r9, r19
    1726:	a4 2e       	mov	r10, r20
    1728:	b5 2e       	mov	r11, r21
    172a:	c6 2e       	mov	r12, r22
    172c:	d7 2e       	mov	r13, r23
    172e:	e8 2e       	mov	r14, r24
    1730:	f9 2e       	mov	r15, r25
    1732:	08 2d       	mov	r16, r8
    1734:	19 2d       	mov	r17, r9
    1736:	2a 2d       	mov	r18, r10
    1738:	3b 2d       	mov	r19, r11
    173a:	4c 2d       	mov	r20, r12
    173c:	5d 2d       	mov	r21, r13
    173e:	6e 2d       	mov	r22, r14
    1740:	7f 2d       	mov	r23, r15
    1742:	09 83       	std	Y+1, r16	; 0x01
    1744:	1a 83       	std	Y+2, r17	; 0x02
    1746:	2b 83       	std	Y+3, r18	; 0x03
    1748:	3c 83       	std	Y+4, r19	; 0x04
    174a:	4d 83       	std	Y+5, r20	; 0x05
    174c:	5e 83       	std	Y+6, r21	; 0x06

0000174e <.Loc.384>:
    174e:	50 e0       	ldi	r21, 0x00	; 0
    1750:	59 81       	ldd	r21, Y+1	; 0x01
    1752:	40 e0       	ldi	r20, 0x00	; 0
    1754:	4a 81       	ldd	r20, Y+2	; 0x02
    1756:	30 e0       	ldi	r19, 0x00	; 0
    1758:	3b 81       	ldd	r19, Y+3	; 0x03
    175a:	20 e0       	ldi	r18, 0x00	; 0
    175c:	2c 81       	ldd	r18, Y+4	; 0x04
    175e:	90 e0       	ldi	r25, 0x00	; 0
    1760:	9d 81       	ldd	r25, Y+5	; 0x05
    1762:	80 e0       	ldi	r24, 0x00	; 0
    1764:	8e 81       	ldd	r24, Y+6	; 0x06
    1766:	59 8b       	std	Y+17, r21	; 0x11
    1768:	4a 8b       	std	Y+18, r20	; 0x12
    176a:	3b 8b       	std	Y+19, r19	; 0x13
    176c:	2c 8b       	std	Y+20, r18	; 0x14
    176e:	9d 8b       	std	Y+21, r25	; 0x15
    1770:	8e 8b       	std	Y+22, r24	; 0x16
    1772:	89 88       	ldd	r8, Y+17	; 0x11
    1774:	9a 88       	ldd	r9, Y+18	; 0x12
    1776:	ab 88       	ldd	r10, Y+19	; 0x13
    1778:	bc 88       	ldd	r11, Y+20	; 0x14
    177a:	cd 88       	ldd	r12, Y+21	; 0x15
    177c:	de 88       	ldd	r13, Y+22	; 0x16
    177e:	ef 88       	ldd	r14, Y+23	; 0x17
    1780:	f8 8c       	ldd	r15, Y+24	; 0x18

00001782 <.Loc.385>:
        }
    1782:	28 2d       	mov	r18, r8
    1784:	39 2d       	mov	r19, r9
    1786:	4a 2d       	mov	r20, r10
    1788:	5b 2d       	mov	r21, r11
    178a:	6c 2d       	mov	r22, r12
    178c:	7d 2d       	mov	r23, r13
    178e:	8e 2d       	mov	r24, r14
    1790:	9f 2d       	mov	r25, r15
    1792:	68 96       	adiw	r28, 0x18	; 24
    1794:	0f b6       	in	r0, 0x3f	; 63
    1796:	f8 94       	cli
    1798:	de bf       	out	0x3e, r29	; 62
    179a:	0f be       	out	0x3f, r0	; 63
    179c:	cd bf       	out	0x3d, r28	; 61
    179e:	df 91       	pop	r29
    17a0:	cf 91       	pop	r28
    17a2:	1f 91       	pop	r17
    17a4:	0f 91       	pop	r16
    17a6:	ff 90       	pop	r15
    17a8:	ef 90       	pop	r14
    17aa:	df 90       	pop	r13
    17ac:	cf 90       	pop	r12
    17ae:	bf 90       	pop	r11
    17b0:	af 90       	pop	r10
    17b2:	9f 90       	pop	r9
    17b4:	8f 90       	pop	r8
    17b6:	08 95       	ret

000017b8 <_ZN10asyncruino18timer_counter_implINS_9schedulerENS_13default_guardEmNS_17timer_dim_counterIyfLi0EEEhLj1EE5DelayIjLin3EEEDaT_NS_13time_prefix_tIXT0_EEE>:
        inline auto Delay(_size_type _delayed,time_prefix_t<sec_prefix> _prfx){
    17b8:	8f 92       	push	r8
    17ba:	9f 92       	push	r9
    17bc:	af 92       	push	r10
    17be:	bf 92       	push	r11
    17c0:	cf 92       	push	r12
    17c2:	df 92       	push	r13
    17c4:	ef 92       	push	r14
    17c6:	ff 92       	push	r15
    17c8:	0f 93       	push	r16
    17ca:	1f 93       	push	r17
    17cc:	cf 93       	push	r28
    17ce:	df 93       	push	r29
    17d0:	cd b7       	in	r28, 0x3d	; 61
    17d2:	de b7       	in	r29, 0x3e	; 62
    17d4:	63 97       	sbiw	r28, 0x13	; 19
    17d6:	0f b6       	in	r0, 0x3f	; 63
    17d8:	f8 94       	cli
    17da:	de bf       	out	0x3e, r29	; 62
    17dc:	0f be       	out	0x3f, r0	; 63
    17de:	cd bf       	out	0x3d, r28	; 61
    17e0:	98 87       	std	Y+8, r25	; 0x08
    17e2:	8f 83       	std	Y+7, r24	; 0x07
    17e4:	7a 87       	std	Y+10, r23	; 0x0a
    17e6:	69 87       	std	Y+9, r22	; 0x09
    17e8:	4b 87       	std	Y+11, r20	; 0x0b

000017ea <.Loc.387>:
            return this->Delay(m_counter.to_counter_t(_delayed,_prfx));
    17ea:	8f 81       	ldd	r24, Y+7	; 0x07
    17ec:	98 85       	ldd	r25, Y+8	; 0x08
    17ee:	08 96       	adiw	r24, 0x08	; 8
    17f0:	29 85       	ldd	r18, Y+9	; 0x09
    17f2:	3a 85       	ldd	r19, Y+10	; 0x0a
    17f4:	45 2f       	mov	r20, r21
    17f6:	b9 01       	movw	r22, r18
    17f8:	0e 94 be 17 	call	0x2f7c	; 0x2f7c <_ZNK10asyncruino17timer_dim_counterIyfLi0EE12to_counter_tIjLin3EEEyT_NS_13time_prefix_tIXT0_EEE>
    17fc:	82 2e       	mov	r8, r18
    17fe:	93 2e       	mov	r9, r19
    1800:	a4 2e       	mov	r10, r20
    1802:	b5 2e       	mov	r11, r21
    1804:	c6 2e       	mov	r12, r22
    1806:	d7 2e       	mov	r13, r23
    1808:	e8 2e       	mov	r14, r24
    180a:	f9 2e       	mov	r15, r25
    180c:	8f 81       	ldd	r24, Y+7	; 0x07
    180e:	98 85       	ldd	r25, Y+8	; 0x08
    1810:	08 2d       	mov	r16, r8
    1812:	19 2d       	mov	r17, r9
    1814:	2a 2d       	mov	r18, r10
    1816:	3b 2d       	mov	r19, r11
    1818:	4c 2d       	mov	r20, r12
    181a:	5d 2d       	mov	r21, r13
    181c:	6e 2d       	mov	r22, r14
    181e:	7f 2d       	mov	r23, r15
    1820:	0e 94 68 0b 	call	0x16d0	; 0x16d0 <_ZN10asyncruino18timer_counter_implINS_9schedulerENS_13default_guardEmNS_17timer_dim_counterIyfLi0EEEhLj1EE5DelayIyEEDaT_>
    1824:	82 2e       	mov	r8, r18
    1826:	93 2e       	mov	r9, r19
    1828:	a4 2e       	mov	r10, r20
    182a:	b5 2e       	mov	r11, r21
    182c:	c6 2e       	mov	r12, r22
    182e:	d7 2e       	mov	r13, r23
    1830:	e8 2e       	mov	r14, r24
    1832:	f9 2e       	mov	r15, r25
    1834:	08 2d       	mov	r16, r8
    1836:	19 2d       	mov	r17, r9
    1838:	2a 2d       	mov	r18, r10
    183a:	3b 2d       	mov	r19, r11
    183c:	4c 2d       	mov	r20, r12
    183e:	5d 2d       	mov	r21, r13
    1840:	6e 2d       	mov	r22, r14
    1842:	7f 2d       	mov	r23, r15
    1844:	09 83       	std	Y+1, r16	; 0x01
    1846:	1a 83       	std	Y+2, r17	; 0x02
    1848:	2b 83       	std	Y+3, r18	; 0x03
    184a:	3c 83       	std	Y+4, r19	; 0x04
    184c:	4d 83       	std	Y+5, r20	; 0x05
    184e:	5e 83       	std	Y+6, r21	; 0x06

00001850 <.Loc.388>:
    1850:	50 e0       	ldi	r21, 0x00	; 0
    1852:	59 81       	ldd	r21, Y+1	; 0x01
    1854:	40 e0       	ldi	r20, 0x00	; 0
    1856:	4a 81       	ldd	r20, Y+2	; 0x02
    1858:	30 e0       	ldi	r19, 0x00	; 0
    185a:	3b 81       	ldd	r19, Y+3	; 0x03
    185c:	20 e0       	ldi	r18, 0x00	; 0
    185e:	2c 81       	ldd	r18, Y+4	; 0x04
    1860:	90 e0       	ldi	r25, 0x00	; 0
    1862:	9d 81       	ldd	r25, Y+5	; 0x05
    1864:	80 e0       	ldi	r24, 0x00	; 0
    1866:	8e 81       	ldd	r24, Y+6	; 0x06
    1868:	5c 87       	std	Y+12, r21	; 0x0c
    186a:	4d 87       	std	Y+13, r20	; 0x0d
    186c:	3e 87       	std	Y+14, r19	; 0x0e
    186e:	2f 87       	std	Y+15, r18	; 0x0f
    1870:	98 8b       	std	Y+16, r25	; 0x10
    1872:	89 8b       	std	Y+17, r24	; 0x11
    1874:	8c 84       	ldd	r8, Y+12	; 0x0c
    1876:	9d 84       	ldd	r9, Y+13	; 0x0d
    1878:	ae 84       	ldd	r10, Y+14	; 0x0e
    187a:	bf 84       	ldd	r11, Y+15	; 0x0f
    187c:	c8 88       	ldd	r12, Y+16	; 0x10
    187e:	d9 88       	ldd	r13, Y+17	; 0x11
    1880:	ea 88       	ldd	r14, Y+18	; 0x12
    1882:	fb 88       	ldd	r15, Y+19	; 0x13

00001884 <.Loc.389>:
        }; 
    1884:	28 2d       	mov	r18, r8
    1886:	39 2d       	mov	r19, r9
    1888:	4a 2d       	mov	r20, r10
    188a:	5b 2d       	mov	r21, r11
    188c:	6c 2d       	mov	r22, r12
    188e:	7d 2d       	mov	r23, r13
    1890:	8e 2d       	mov	r24, r14
    1892:	9f 2d       	mov	r25, r15
    1894:	63 96       	adiw	r28, 0x13	; 19
    1896:	0f b6       	in	r0, 0x3f	; 63
    1898:	f8 94       	cli
    189a:	de bf       	out	0x3e, r29	; 62
    189c:	0f be       	out	0x3f, r0	; 63
    189e:	cd bf       	out	0x3d, r28	; 61
    18a0:	df 91       	pop	r29
    18a2:	cf 91       	pop	r28
    18a4:	1f 91       	pop	r17
    18a6:	0f 91       	pop	r16
    18a8:	ff 90       	pop	r15
    18aa:	ef 90       	pop	r14
    18ac:	df 90       	pop	r13
    18ae:	cf 90       	pop	r12
    18b0:	bf 90       	pop	r11
    18b2:	af 90       	pop	r10
    18b4:	9f 90       	pop	r9
    18b6:	8f 90       	pop	r8
    18b8:	08 95       	ret

000018ba <_Z5Blinkji>:

asyncruino::task Blink(uint16_t delay_ms,int pin){
    18ba:	1f 93       	push	r17
    18bc:	cf 93       	push	r28
    18be:	df 93       	push	r29
    18c0:	cd b7       	in	r28, 0x3d	; 61
    18c2:	de b7       	in	r29, 0x3e	; 62
    18c4:	28 97       	sbiw	r28, 0x08	; 8
    18c6:	0f b6       	in	r0, 0x3f	; 63
    18c8:	f8 94       	cli
    18ca:	de bf       	out	0x3e, r29	; 62
    18cc:	0f be       	out	0x3f, r0	; 63
    18ce:	cd bf       	out	0x3d, r28	; 61
    18d0:	9e 83       	std	Y+6, r25	; 0x06
    18d2:	8d 83       	std	Y+5, r24	; 0x05
    18d4:	78 87       	std	Y+8, r23	; 0x08
    18d6:	6f 83       	std	Y+7, r22	; 0x07

000018d8 <.Loc.391>:
    18d8:	1a 82       	std	Y+2, r1	; 0x02
    18da:	19 82       	std	Y+1, r1	; 0x01
    18dc:	1b 82       	std	Y+3, r1	; 0x03
    18de:	1c 82       	std	Y+4, r1	; 0x04

000018e0 <.Loc.392>:
		PORTB = 0x00;
		co_await m_timer.Delay(delay_ms,asyncruino::tl::ms);
		PORTB = 0xFF;
		co_await m_timer.Delay(delay_ms,asyncruino::tl::ms);
	}
}
    18e0:	8e e1       	ldi	r24, 0x1E	; 30
    18e2:	90 e0       	ldi	r25, 0x00	; 0
    18e4:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <_ZN10asyncruino4task12promise_typenwEj>
    18e8:	9a 83       	std	Y+2, r25	; 0x02
    18ea:	89 83       	std	Y+1, r24	; 0x01

000018ec <.Loc.393>:
asyncruino::task Blink(uint16_t delay_ms,int pin){
    18ec:	89 81       	ldd	r24, Y+1	; 0x01
    18ee:	9a 81       	ldd	r25, Y+2	; 0x02
    18f0:	21 e0       	ldi	r18, 0x01	; 1
    18f2:	fc 01       	movw	r30, r24
    18f4:	25 87       	std	Z+13, r18	; 0x0d
    18f6:	89 81       	ldd	r24, Y+1	; 0x01
    18f8:	9a 81       	ldd	r25, Y+2	; 0x02
    18fa:	21 eb       	ldi	r18, 0xB1	; 177
    18fc:	3c e0       	ldi	r19, 0x0C	; 12
    18fe:	fc 01       	movw	r30, r24
    1900:	31 83       	std	Z+1, r19	; 0x01
    1902:	20 83       	st	Z, r18
    1904:	89 81       	ldd	r24, Y+1	; 0x01
    1906:	9a 81       	ldd	r25, Y+2	; 0x02
    1908:	2d e2       	ldi	r18, 0x2D	; 45
    190a:	3e e0       	ldi	r19, 0x0E	; 14
    190c:	fc 01       	movw	r30, r24
    190e:	33 83       	std	Z+3, r19	; 0x03
    1910:	22 83       	std	Z+2, r18	; 0x02
    1912:	2d 81       	ldd	r18, Y+5	; 0x05
    1914:	3e 81       	ldd	r19, Y+6	; 0x06
    1916:	89 81       	ldd	r24, Y+1	; 0x01
    1918:	9a 81       	ldd	r25, Y+2	; 0x02
    191a:	fc 01       	movw	r30, r24
    191c:	30 87       	std	Z+8, r19	; 0x08
    191e:	27 83       	std	Z+7, r18	; 0x07
    1920:	2f 81       	ldd	r18, Y+7	; 0x07
    1922:	38 85       	ldd	r19, Y+8	; 0x08
    1924:	89 81       	ldd	r24, Y+1	; 0x01
    1926:	9a 81       	ldd	r25, Y+2	; 0x02
    1928:	fc 01       	movw	r30, r24
    192a:	32 87       	std	Z+10, r19	; 0x0a
    192c:	21 87       	std	Z+9, r18	; 0x09

0000192e <.Loc.394>:
}
    192e:	89 81       	ldd	r24, Y+1	; 0x01
    1930:	9a 81       	ldd	r25, Y+2	; 0x02
    1932:	04 96       	adiw	r24, 0x04	; 4
    1934:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <_ZN10asyncruino4task12promise_type17get_return_objectEv>

00001938 <.Loc.395>:
asyncruino::task Blink(uint16_t delay_ms,int pin){
    1938:	89 81       	ldd	r24, Y+1	; 0x01
    193a:	9a 81       	ldd	r25, Y+2	; 0x02
    193c:	fc 01       	movw	r30, r24
    193e:	14 86       	std	Z+12, r1	; 0x0c
    1940:	13 86       	std	Z+11, r1	; 0x0b
    1942:	89 81       	ldd	r24, Y+1	; 0x01
    1944:	9a 81       	ldd	r25, Y+2	; 0x02
    1946:	0e 94 b1 0c 	call	0x1962	; 0x1962 <_Z5BlinkPZ5BlinkjiE16_Z5Blinkji.Frame.actor>

0000194a <.Loc.396>:
}
    194a:	00 00       	nop
    194c:	81 2f       	mov	r24, r17
    194e:	28 96       	adiw	r28, 0x08	; 8
    1950:	0f b6       	in	r0, 0x3f	; 63
    1952:	f8 94       	cli
    1954:	de bf       	out	0x3e, r29	; 62
    1956:	0f be       	out	0x3f, r0	; 63
    1958:	cd bf       	out	0x3d, r28	; 61
    195a:	df 91       	pop	r29
    195c:	cf 91       	pop	r28
    195e:	1f 91       	pop	r17
    1960:	08 95       	ret

00001962 <_Z5BlinkPZ5BlinkjiE16_Z5Blinkji.Frame.actor>:
asyncruino::task Blink(uint16_t delay_ms,int pin){
    1962:	4f 92       	push	r4
    1964:	5f 92       	push	r5
    1966:	6f 92       	push	r6
    1968:	7f 92       	push	r7
    196a:	8f 92       	push	r8
    196c:	9f 92       	push	r9
    196e:	af 92       	push	r10
    1970:	bf 92       	push	r11
    1972:	cf 92       	push	r12
    1974:	df 92       	push	r13
    1976:	ef 92       	push	r14
    1978:	ff 92       	push	r15
    197a:	0f 93       	push	r16
    197c:	1f 93       	push	r17
    197e:	cf 93       	push	r28
    1980:	df 93       	push	r29
    1982:	00 d0       	rcall	.+0      	; 0x1984 <L0^A>

00001984 <L0^A>:
    1984:	00 d0       	rcall	.+0      	; 0x1986 <L0^A>

00001986 <L0^A>:
    1986:	cd b7       	in	r28, 0x3d	; 61
    1988:	de b7       	in	r29, 0x3e	; 62
    198a:	9c 83       	std	Y+4, r25	; 0x04
    198c:	8b 83       	std	Y+3, r24	; 0x03

0000198e <.LBB45>:
}
    198e:	8b 81       	ldd	r24, Y+3	; 0x03
    1990:	9c 81       	ldd	r25, Y+4	; 0x04
    1992:	fc 01       	movw	r30, r24
    1994:	83 85       	ldd	r24, Z+11	; 0x0b
    1996:	94 85       	ldd	r25, Z+12	; 0x0c
    1998:	81 70       	andi	r24, 0x01	; 1
    199a:	99 27       	eor	r25, r25
    199c:	00 97       	sbiw	r24, 0x00	; 0
    199e:	31 f1       	breq	.+76     	; 0x19ec <.L164>

000019a0 <.Loc.399>:
    19a0:	8b 81       	ldd	r24, Y+3	; 0x03
    19a2:	9c 81       	ldd	r25, Y+4	; 0x04
    19a4:	fc 01       	movw	r30, r24
    19a6:	83 85       	ldd	r24, Z+11	; 0x0b
    19a8:	94 85       	ldd	r25, Z+12	; 0x0c
    19aa:	89 30       	cpi	r24, 0x09	; 9
    19ac:	91 05       	cpc	r25, r1
    19ae:	e1 f0       	breq	.+56     	; 0x19e8 <.L166>

000019b0 <.Loc.400>:
    19b0:	89 30       	cpi	r24, 0x09	; 9
    19b2:	91 05       	cpc	r25, r1
    19b4:	09 f0       	breq	.+2      	; 0x19b8 <L0^A+0x2>

000019b6 <L0^A>:
    19b6:	c0 f4       	brcc	.+48     	; 0x19e8 <.L166>
    19b8:	87 30       	cpi	r24, 0x07	; 7
    19ba:	91 05       	cpc	r25, r1
    19bc:	09 f4       	brne	.+2      	; 0x19c0 <L0^A+0x2>

000019be <L0^A>:
    19be:	22 c1       	rjmp	.+580    	; 0x1c04 <.L174>
    19c0:	87 30       	cpi	r24, 0x07	; 7
    19c2:	91 05       	cpc	r25, r1
    19c4:	09 f0       	breq	.+2      	; 0x19c8 <L0^A+0x2>

000019c6 <L0^A>:
    19c6:	80 f4       	brcc	.+32     	; 0x19e8 <.L166>
    19c8:	85 30       	cpi	r24, 0x05	; 5
    19ca:	91 05       	cpc	r25, r1
    19cc:	09 f4       	brne	.+2      	; 0x19d0 <L0^A+0x2>

000019ce <L0^A>:
    19ce:	c1 c0       	rjmp	.+386    	; 0x1b52 <.L173>
    19d0:	85 30       	cpi	r24, 0x05	; 5
    19d2:	91 05       	cpc	r25, r1
    19d4:	09 f0       	breq	.+2      	; 0x19d8 <L0^A+0x2>

000019d6 <L0^A>:
    19d6:	40 f4       	brcc	.+16     	; 0x19e8 <.L166>
    19d8:	81 30       	cpi	r24, 0x01	; 1
    19da:	91 05       	cpc	r25, r1
    19dc:	09 f4       	brne	.+2      	; 0x19e0 <L0^A+0x2>

000019de <L0^A>:
    19de:	19 c1       	rjmp	.+562    	; 0x1c12 <.L191>
    19e0:	83 30       	cpi	r24, 0x03	; 3
    19e2:	91 05       	cpc	r25, r1
    19e4:	09 f4       	brne	.+2      	; 0x19e8 <.L166>

000019e6 <L0^A>:
    19e6:	55 c0       	rjmp	.+170    	; 0x1a92 <.L172>

000019e8 <.L166>:
asyncruino::task Blink(uint16_t delay_ms,int pin){
    19e8:	0e 94 82 23 	call	0x4704	; 0x4704 <abort>

000019ec <.L164>:
}
    19ec:	8b 81       	ldd	r24, Y+3	; 0x03
    19ee:	9c 81       	ldd	r25, Y+4	; 0x04
    19f0:	fc 01       	movw	r30, r24
    19f2:	83 85       	ldd	r24, Z+11	; 0x0b
    19f4:	94 85       	ldd	r25, Z+12	; 0x0c
    19f6:	88 30       	cpi	r24, 0x08	; 8
    19f8:	91 05       	cpc	r25, r1
    19fa:	99 f1       	breq	.+102    	; 0x1a62 <.L176>

000019fc <.Loc.403>:
    19fc:	88 30       	cpi	r24, 0x08	; 8
    19fe:	91 05       	cpc	r25, r1
    1a00:	09 f0       	breq	.+2      	; 0x1a04 <L0^A+0x2>

00001a02 <L0^A>:
    1a02:	78 f5       	brcc	.+94     	; 0x1a62 <.L176>
    1a04:	86 30       	cpi	r24, 0x06	; 6
    1a06:	91 05       	cpc	r25, r1
    1a08:	09 f4       	brne	.+2      	; 0x1a0c <L0^A+0x2>

00001a0a <L0^A>:
    1a0a:	fd c0       	rjmp	.+506    	; 0x1c06 <.L186>
    1a0c:	86 30       	cpi	r24, 0x06	; 6
    1a0e:	91 05       	cpc	r25, r1
    1a10:	09 f0       	breq	.+2      	; 0x1a14 <L0^A+0x2>

00001a12 <L0^A>:
    1a12:	38 f5       	brcc	.+78     	; 0x1a62 <.L176>
    1a14:	84 30       	cpi	r24, 0x04	; 4
    1a16:	91 05       	cpc	r25, r1
    1a18:	09 f4       	brne	.+2      	; 0x1a1c <L0^A+0x2>

00001a1a <L0^A>:
    1a1a:	9c c0       	rjmp	.+312    	; 0x1b54 <.L183>
    1a1c:	84 30       	cpi	r24, 0x04	; 4
    1a1e:	91 05       	cpc	r25, r1
    1a20:	09 f0       	breq	.+2      	; 0x1a24 <L0^A+0x2>

00001a22 <L0^A>:
    1a22:	f8 f4       	brcc	.+62     	; 0x1a62 <.L176>
    1a24:	00 97       	sbiw	r24, 0x00	; 0
    1a26:	21 f0       	breq	.+8      	; 0x1a30 <.L179>
    1a28:	82 30       	cpi	r24, 0x02	; 2
    1a2a:	91 05       	cpc	r25, r1
    1a2c:	99 f1       	breq	.+102    	; 0x1a94 <.L182>
    1a2e:	19 c0       	rjmp	.+50     	; 0x1a62 <.L176>

00001a30 <.L179>:
    1a30:	0b 81       	ldd	r16, Y+3	; 0x03
    1a32:	1c 81       	ldd	r17, Y+4	; 0x04
    1a34:	8b 81       	ldd	r24, Y+3	; 0x03
    1a36:	9c 81       	ldd	r25, Y+4	; 0x04
    1a38:	0e 94 a7 17 	call	0x2f4e	; 0x2f4e <_ZNSt7__n486116coroutine_handleIN10asyncruino4task12promise_typeEE12from_addressEPv>
    1a3c:	f8 01       	movw	r30, r16
    1a3e:	96 83       	std	Z+6, r25	; 0x06
    1a40:	85 83       	std	Z+5, r24	; 0x05

00001a42 <.LBB46>:
    1a42:	8b 81       	ldd	r24, Y+3	; 0x03
    1a44:	9c 81       	ldd	r25, Y+4	; 0x04
    1a46:	04 96       	adiw	r24, 0x04	; 4
    1a48:	0e 94 ff 00 	call	0x1fe	; 0x1fe <_ZN10asyncruino4task12promise_type15initial_suspendEv>
    1a4c:	8b 81       	ldd	r24, Y+3	; 0x03
    1a4e:	9c 81       	ldd	r25, Y+4	; 0x04
    1a50:	0e 96       	adiw	r24, 0x0e	; 14
    1a52:	0e 94 a4 00 	call	0x148	; 0x148 <_ZNSt7__n486113suspend_never11await_readyEv>
    1a56:	98 2f       	mov	r25, r24

00001a58 <.Loc.404>:
asyncruino::task Blink(uint16_t delay_ms,int pin){
    1a58:	81 e0       	ldi	r24, 0x01	; 1
    1a5a:	89 27       	eor	r24, r25
    1a5c:	88 23       	and	r24, r24
    1a5e:	19 f4       	brne	.+6      	; 0x1a66 <.L181>
    1a60:	19 c0       	rjmp	.+50     	; 0x1a94 <.L182>

00001a62 <.L176>:
    1a62:	0e 94 82 23 	call	0x4704	; 0x4704 <abort>

00001a66 <.L181>:
    1a66:	8b 81       	ldd	r24, Y+3	; 0x03
    1a68:	9c 81       	ldd	r25, Y+4	; 0x04
    1a6a:	22 e0       	ldi	r18, 0x02	; 2
    1a6c:	30 e0       	ldi	r19, 0x00	; 0
    1a6e:	fc 01       	movw	r30, r24
    1a70:	34 87       	std	Z+12, r19	; 0x0c
    1a72:	23 87       	std	Z+11, r18	; 0x0b

00001a74 <.Loc.407>:
}
    1a74:	8b 81       	ldd	r24, Y+3	; 0x03
    1a76:	9c 81       	ldd	r25, Y+4	; 0x04
    1a78:	9c 01       	movw	r18, r24
    1a7a:	22 5f       	subi	r18, 0xF2	; 242
    1a7c:	3f 4f       	sbci	r19, 0xFF	; 255
    1a7e:	8b 81       	ldd	r24, Y+3	; 0x03
    1a80:	9c 81       	ldd	r25, Y+4	; 0x04
    1a82:	fc 01       	movw	r30, r24
    1a84:	85 81       	ldd	r24, Z+5	; 0x05
    1a86:	96 81       	ldd	r25, Z+6	; 0x06
    1a88:	bc 01       	movw	r22, r24
    1a8a:	c9 01       	movw	r24, r18
    1a8c:	0e 94 b1 00 	call	0x162	; 0x162 <_ZNSt7__n486113suspend_never13await_suspendENS_16coroutine_handleIvEE>

00001a90 <.Loc.408>:
asyncruino::task Blink(uint16_t delay_ms,int pin){
    1a90:	ce c0       	rjmp	.+412    	; 0x1c2e <.L185>

00001a92 <.L172>:
    1a92:	c0 c0       	rjmp	.+384    	; 0x1c14 <.L171>

00001a94 <.L182>:
}
    1a94:	8b 81       	ldd	r24, Y+3	; 0x03
    1a96:	9c 81       	ldd	r25, Y+4	; 0x04
    1a98:	0e 96       	adiw	r24, 0x0e	; 14
    1a9a:	0e 94 c3 00 	call	0x186	; 0x186 <_ZNSt7__n486113suspend_never12await_resumeEv>

00001a9e <.LBB49>:
	auto & m_timer = asyncruino::timer0::instance();	
    1a9e:	0e 94 fe 05 	call	0xbfc	; 0xbfc <_ZN10asyncruino6timer08instanceEv>
    1aa2:	9c 01       	movw	r18, r24

00001aa4 <.Loc.412>:
    1aa4:	8b 81       	ldd	r24, Y+3	; 0x03
    1aa6:	9c 81       	ldd	r25, Y+4	; 0x04
    1aa8:	fc 01       	movw	r30, r24
    1aaa:	30 8b       	std	Z+16, r19	; 0x10
    1aac:	27 87       	std	Z+15, r18	; 0x0f

00001aae <.L187>:
		PORTB = 0x00;
    1aae:	85 e2       	ldi	r24, 0x25	; 37
    1ab0:	90 e0       	ldi	r25, 0x00	; 0

00001ab2 <.Loc.414>:
    1ab2:	fc 01       	movw	r30, r24
    1ab4:	10 82       	st	Z, r1

00001ab6 <.LBB50>:
asyncruino::task Blink(uint16_t delay_ms,int pin){
    1ab6:	8b 81       	ldd	r24, Y+3	; 0x03
    1ab8:	9c 81       	ldd	r25, Y+4	; 0x04
    1aba:	fc 01       	movw	r30, r24
    1abc:	87 85       	ldd	r24, Z+15	; 0x0f
    1abe:	90 89       	ldd	r25, Z+16	; 0x10

00001ac0 <.Loc.416>:
		co_await m_timer.Delay(delay_ms,asyncruino::tl::ms);
    1ac0:	9c 01       	movw	r18, r24

00001ac2 <.Loc.417>:
asyncruino::task Blink(uint16_t delay_ms,int pin){
    1ac2:	8b 81       	ldd	r24, Y+3	; 0x03
    1ac4:	9c 81       	ldd	r25, Y+4	; 0x04
    1ac6:	fc 01       	movw	r30, r24
    1ac8:	87 81       	ldd	r24, Z+7	; 0x07
    1aca:	90 85       	ldd	r25, Z+8	; 0x08

00001acc <.Loc.418>:
		co_await m_timer.Delay(delay_ms,asyncruino::tl::ms);
    1acc:	6b 80       	ldd	r6, Y+3	; 0x03
    1ace:	7c 80       	ldd	r7, Y+4	; 0x04
    1ad0:	44 2d       	mov	r20, r4
    1ad2:	bc 01       	movw	r22, r24
    1ad4:	c9 01       	movw	r24, r18
    1ad6:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <_ZN10asyncruino18timer_counter_implINS_9schedulerENS_13default_guardEmNS_17timer_dim_counterIyfLi0EEEhLj1EE5DelayIjLin3EEEDaT_NS_13time_prefix_tIXT0_EEE>
    1ada:	82 2e       	mov	r8, r18
    1adc:	93 2e       	mov	r9, r19
    1ade:	a4 2e       	mov	r10, r20
    1ae0:	b5 2e       	mov	r11, r21
    1ae2:	c6 2e       	mov	r12, r22
    1ae4:	d7 2e       	mov	r13, r23
    1ae6:	e8 2e       	mov	r14, r24
    1ae8:	f9 2e       	mov	r15, r25
    1aea:	08 2d       	mov	r16, r8
    1aec:	19 2d       	mov	r17, r9
    1aee:	2a 2d       	mov	r18, r10
    1af0:	3b 2d       	mov	r19, r11
    1af2:	4c 2d       	mov	r20, r12
    1af4:	5d 2d       	mov	r21, r13
    1af6:	6e 2d       	mov	r22, r14
    1af8:	7f 2d       	mov	r23, r15
    1afa:	f3 01       	movw	r30, r6
    1afc:	01 8b       	std	Z+17, r16	; 0x11
    1afe:	f3 01       	movw	r30, r6
    1b00:	12 8b       	std	Z+18, r17	; 0x12
    1b02:	f3 01       	movw	r30, r6
    1b04:	23 8b       	std	Z+19, r18	; 0x13
    1b06:	f3 01       	movw	r30, r6
    1b08:	34 8b       	std	Z+20, r19	; 0x14
    1b0a:	f3 01       	movw	r30, r6
    1b0c:	45 8b       	std	Z+21, r20	; 0x15
    1b0e:	f3 01       	movw	r30, r6
    1b10:	56 8b       	std	Z+22, r21	; 0x16

00001b12 <.Loc.419>:
    1b12:	8b 81       	ldd	r24, Y+3	; 0x03
    1b14:	9c 81       	ldd	r25, Y+4	; 0x04
    1b16:	41 96       	adiw	r24, 0x11	; 17
    1b18:	0e 94 7b 18 	call	0x30f6	; 0x30f6 <_ZN10asyncruino10timer_implINS_9schedulerENS_13default_guardEmhLh1EE13Delay_awaitor11await_readyEv>
    1b1c:	98 2f       	mov	r25, r24

00001b1e <.Loc.420>:
    1b1e:	81 e0       	ldi	r24, 0x01	; 1
    1b20:	89 27       	eor	r24, r25
    1b22:	88 23       	and	r24, r24
    1b24:	b9 f0       	breq	.+46     	; 0x1b54 <.L183>

00001b26 <.Loc.421>:
    1b26:	8b 81       	ldd	r24, Y+3	; 0x03
    1b28:	9c 81       	ldd	r25, Y+4	; 0x04
    1b2a:	24 e0       	ldi	r18, 0x04	; 4
    1b2c:	30 e0       	ldi	r19, 0x00	; 0
    1b2e:	fc 01       	movw	r30, r24
    1b30:	34 87       	std	Z+12, r19	; 0x0c
    1b32:	23 87       	std	Z+11, r18	; 0x0b

00001b34 <.Loc.422>:
    1b34:	8b 81       	ldd	r24, Y+3	; 0x03
    1b36:	9c 81       	ldd	r25, Y+4	; 0x04
    1b38:	9c 01       	movw	r18, r24
    1b3a:	2f 5e       	subi	r18, 0xEF	; 239
    1b3c:	3f 4f       	sbci	r19, 0xFF	; 255
    1b3e:	8b 81       	ldd	r24, Y+3	; 0x03
    1b40:	9c 81       	ldd	r25, Y+4	; 0x04
    1b42:	fc 01       	movw	r30, r24
    1b44:	85 81       	ldd	r24, Z+5	; 0x05
    1b46:	96 81       	ldd	r25, Z+6	; 0x06
    1b48:	bc 01       	movw	r22, r24
    1b4a:	c9 01       	movw	r24, r18
    1b4c:	0e 94 95 18 	call	0x312a	; 0x312a <_ZN10asyncruino10timer_implINS_9schedulerENS_13default_guardEmhLh1EE13Delay_awaitor13await_suspendENSt7__n486116coroutine_handleIvEE>

00001b50 <.Loc.423>:
    1b50:	6e c0       	rjmp	.+220    	; 0x1c2e <.L185>

00001b52 <.L173>:
    1b52:	60 c0       	rjmp	.+192    	; 0x1c14 <.L171>

00001b54 <.L183>:
    1b54:	8b 81       	ldd	r24, Y+3	; 0x03
    1b56:	9c 81       	ldd	r25, Y+4	; 0x04
    1b58:	41 96       	adiw	r24, 0x11	; 17
    1b5a:	0e 94 c2 18 	call	0x3184	; 0x3184 <_ZN10asyncruino10timer_implINS_9schedulerENS_13default_guardEmhLh1EE13Delay_awaitor12await_resumeEv>

00001b5e <.LBE50>:
		PORTB = 0xFF;
    1b5e:	85 e2       	ldi	r24, 0x25	; 37
    1b60:	90 e0       	ldi	r25, 0x00	; 0

00001b62 <.Loc.427>:
    1b62:	2f ef       	ldi	r18, 0xFF	; 255
    1b64:	fc 01       	movw	r30, r24
    1b66:	20 83       	st	Z, r18

00001b68 <.LBB51>:
asyncruino::task Blink(uint16_t delay_ms,int pin){
    1b68:	8b 81       	ldd	r24, Y+3	; 0x03
    1b6a:	9c 81       	ldd	r25, Y+4	; 0x04
    1b6c:	fc 01       	movw	r30, r24
    1b6e:	87 85       	ldd	r24, Z+15	; 0x0f
    1b70:	90 89       	ldd	r25, Z+16	; 0x10

00001b72 <.Loc.429>:
		co_await m_timer.Delay(delay_ms,asyncruino::tl::ms);
    1b72:	9c 01       	movw	r18, r24

00001b74 <.Loc.430>:
asyncruino::task Blink(uint16_t delay_ms,int pin){
    1b74:	8b 81       	ldd	r24, Y+3	; 0x03
    1b76:	9c 81       	ldd	r25, Y+4	; 0x04
    1b78:	fc 01       	movw	r30, r24
    1b7a:	87 81       	ldd	r24, Z+7	; 0x07
    1b7c:	90 85       	ldd	r25, Z+8	; 0x08

00001b7e <.Loc.431>:
		co_await m_timer.Delay(delay_ms,asyncruino::tl::ms);
    1b7e:	6b 80       	ldd	r6, Y+3	; 0x03
    1b80:	7c 80       	ldd	r7, Y+4	; 0x04
    1b82:	45 2d       	mov	r20, r5
    1b84:	bc 01       	movw	r22, r24
    1b86:	c9 01       	movw	r24, r18
    1b88:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <_ZN10asyncruino18timer_counter_implINS_9schedulerENS_13default_guardEmNS_17timer_dim_counterIyfLi0EEEhLj1EE5DelayIjLin3EEEDaT_NS_13time_prefix_tIXT0_EEE>
    1b8c:	82 2e       	mov	r8, r18
    1b8e:	93 2e       	mov	r9, r19
    1b90:	a4 2e       	mov	r10, r20
    1b92:	b5 2e       	mov	r11, r21
    1b94:	c6 2e       	mov	r12, r22
    1b96:	d7 2e       	mov	r13, r23
    1b98:	e8 2e       	mov	r14, r24
    1b9a:	f9 2e       	mov	r15, r25
    1b9c:	08 2d       	mov	r16, r8
    1b9e:	19 2d       	mov	r17, r9
    1ba0:	2a 2d       	mov	r18, r10
    1ba2:	3b 2d       	mov	r19, r11
    1ba4:	4c 2d       	mov	r20, r12
    1ba6:	5d 2d       	mov	r21, r13
    1ba8:	6e 2d       	mov	r22, r14
    1baa:	7f 2d       	mov	r23, r15
    1bac:	f3 01       	movw	r30, r6
    1bae:	07 8b       	std	Z+23, r16	; 0x17
    1bb0:	f3 01       	movw	r30, r6
    1bb2:	10 8f       	std	Z+24, r17	; 0x18
    1bb4:	f3 01       	movw	r30, r6
    1bb6:	21 8f       	std	Z+25, r18	; 0x19
    1bb8:	f3 01       	movw	r30, r6
    1bba:	32 8f       	std	Z+26, r19	; 0x1a
    1bbc:	f3 01       	movw	r30, r6
    1bbe:	43 8f       	std	Z+27, r20	; 0x1b
    1bc0:	f3 01       	movw	r30, r6
    1bc2:	54 8f       	std	Z+28, r21	; 0x1c

00001bc4 <.Loc.432>:
    1bc4:	8b 81       	ldd	r24, Y+3	; 0x03
    1bc6:	9c 81       	ldd	r25, Y+4	; 0x04
    1bc8:	47 96       	adiw	r24, 0x17	; 23
    1bca:	0e 94 7b 18 	call	0x30f6	; 0x30f6 <_ZN10asyncruino10timer_implINS_9schedulerENS_13default_guardEmhLh1EE13Delay_awaitor11await_readyEv>
    1bce:	98 2f       	mov	r25, r24

00001bd0 <.Loc.433>:
    1bd0:	81 e0       	ldi	r24, 0x01	; 1
    1bd2:	89 27       	eor	r24, r25
    1bd4:	88 23       	and	r24, r24
    1bd6:	b9 f0       	breq	.+46     	; 0x1c06 <.L186>

00001bd8 <.Loc.434>:
    1bd8:	8b 81       	ldd	r24, Y+3	; 0x03
    1bda:	9c 81       	ldd	r25, Y+4	; 0x04
    1bdc:	26 e0       	ldi	r18, 0x06	; 6
    1bde:	30 e0       	ldi	r19, 0x00	; 0
    1be0:	fc 01       	movw	r30, r24
    1be2:	34 87       	std	Z+12, r19	; 0x0c
    1be4:	23 87       	std	Z+11, r18	; 0x0b

00001be6 <.Loc.435>:
    1be6:	8b 81       	ldd	r24, Y+3	; 0x03
    1be8:	9c 81       	ldd	r25, Y+4	; 0x04
    1bea:	9c 01       	movw	r18, r24
    1bec:	29 5e       	subi	r18, 0xE9	; 233
    1bee:	3f 4f       	sbci	r19, 0xFF	; 255
    1bf0:	8b 81       	ldd	r24, Y+3	; 0x03
    1bf2:	9c 81       	ldd	r25, Y+4	; 0x04
    1bf4:	fc 01       	movw	r30, r24
    1bf6:	85 81       	ldd	r24, Z+5	; 0x05
    1bf8:	96 81       	ldd	r25, Z+6	; 0x06
    1bfa:	bc 01       	movw	r22, r24
    1bfc:	c9 01       	movw	r24, r18
    1bfe:	0e 94 95 18 	call	0x312a	; 0x312a <_ZN10asyncruino10timer_implINS_9schedulerENS_13default_guardEmhLh1EE13Delay_awaitor13await_suspendENSt7__n486116coroutine_handleIvEE>

00001c02 <.Loc.436>:
    1c02:	15 c0       	rjmp	.+42     	; 0x1c2e <.L185>

00001c04 <.L174>:
    1c04:	07 c0       	rjmp	.+14     	; 0x1c14 <.L171>

00001c06 <.L186>:
    1c06:	8b 81       	ldd	r24, Y+3	; 0x03
    1c08:	9c 81       	ldd	r25, Y+4	; 0x04
    1c0a:	47 96       	adiw	r24, 0x17	; 23
    1c0c:	0e 94 c2 18 	call	0x3184	; 0x3184 <_ZN10asyncruino10timer_implINS_9schedulerENS_13default_guardEmhLh1EE13Delay_awaitor12await_resumeEv>

00001c10 <.LBE51>:
		PORTB = 0x00;
    1c10:	4e cf       	rjmp	.-356    	; 0x1aae <.L187>

00001c12 <.L191>:
	...

00001c14 <.L171>:
}
    1c14:	8b 81       	ldd	r24, Y+3	; 0x03
    1c16:	9c 81       	ldd	r25, Y+4	; 0x04
    1c18:	fc 01       	movw	r30, r24
    1c1a:	85 85       	ldd	r24, Z+13	; 0x0d
    1c1c:	88 2f       	mov	r24, r24
    1c1e:	90 e0       	ldi	r25, 0x00	; 0
    1c20:	00 97       	sbiw	r24, 0x00	; 0
    1c22:	29 f0       	breq	.+10     	; 0x1c2e <.L185>

00001c24 <.Loc.442>:
    1c24:	8b 81       	ldd	r24, Y+3	; 0x03
    1c26:	9c 81       	ldd	r25, Y+4	; 0x04
    1c28:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN10asyncruino4task12promise_typedlEPv>

00001c2c <.Loc.443>:
asyncruino::task Blink(uint16_t delay_ms,int pin){
    1c2c:	00 c0       	rjmp	.+0      	; 0x1c2e <.L185>

00001c2e <.L185>:
	...

00001c30 <.LBE45>:
    1c30:	0f 90       	pop	r0
    1c32:	0f 90       	pop	r0
    1c34:	0f 90       	pop	r0
    1c36:	0f 90       	pop	r0
    1c38:	df 91       	pop	r29
    1c3a:	cf 91       	pop	r28
    1c3c:	1f 91       	pop	r17
    1c3e:	0f 91       	pop	r16
    1c40:	ff 90       	pop	r15
    1c42:	ef 90       	pop	r14
    1c44:	df 90       	pop	r13
    1c46:	cf 90       	pop	r12
    1c48:	bf 90       	pop	r11
    1c4a:	af 90       	pop	r10
    1c4c:	9f 90       	pop	r9
    1c4e:	8f 90       	pop	r8
    1c50:	7f 90       	pop	r7
    1c52:	6f 90       	pop	r6
    1c54:	5f 90       	pop	r5
    1c56:	4f 90       	pop	r4
    1c58:	08 95       	ret

00001c5a <_Z5BlinkPZ5BlinkjiE16_Z5Blinkji.Frame.destroy>:
    1c5a:	cf 93       	push	r28
    1c5c:	df 93       	push	r29
    1c5e:	00 d0       	rcall	.+0      	; 0x1c60 <L0^A>

00001c60 <L0^A>:
    1c60:	cd b7       	in	r28, 0x3d	; 61
    1c62:	de b7       	in	r29, 0x3e	; 62
    1c64:	9a 83       	std	Y+2, r25	; 0x02
    1c66:	89 83       	std	Y+1, r24	; 0x01

00001c68 <.Loc.446>:
    1c68:	89 81       	ldd	r24, Y+1	; 0x01
    1c6a:	9a 81       	ldd	r25, Y+2	; 0x02
    1c6c:	fc 01       	movw	r30, r24
    1c6e:	83 85       	ldd	r24, Z+11	; 0x0b
    1c70:	94 85       	ldd	r25, Z+12	; 0x0c
    1c72:	9c 01       	movw	r18, r24
    1c74:	21 60       	ori	r18, 0x01	; 1
    1c76:	89 81       	ldd	r24, Y+1	; 0x01
    1c78:	9a 81       	ldd	r25, Y+2	; 0x02
    1c7a:	fc 01       	movw	r30, r24
    1c7c:	34 87       	std	Z+12, r19	; 0x0c
    1c7e:	23 87       	std	Z+11, r18	; 0x0b
    1c80:	89 81       	ldd	r24, Y+1	; 0x01
    1c82:	9a 81       	ldd	r25, Y+2	; 0x02
    1c84:	0e 94 b1 0c 	call	0x1962	; 0x1962 <_Z5BlinkPZ5BlinkjiE16_Z5Blinkji.Frame.actor>
    1c88:	0f 90       	pop	r0
    1c8a:	0f 90       	pop	r0
    1c8c:	df 91       	pop	r29
    1c8e:	cf 91       	pop	r28
    1c90:	08 95       	ret

00001c92 <_Z10sleep_funcv>:



size_t delay_bug_param = 0;
volatile bool error = false;
void sleep_func (void){
    1c92:	cf 93       	push	r28
    1c94:	df 93       	push	r29
    1c96:	cd b7       	in	r28, 0x3d	; 61
    1c98:	de b7       	in	r29, 0x3e	; 62
    1c9a:	c4 54       	subi	r28, 0x44	; 68
    1c9c:	d1 09       	sbc	r29, r1
    1c9e:	0f b6       	in	r0, 0x3f	; 63
    1ca0:	f8 94       	cli
    1ca2:	de bf       	out	0x3e, r29	; 62
    1ca4:	0f be       	out	0x3f, r0	; 63
    1ca6:	cd bf       	out	0x3d, r28	; 61

00001ca8 <.Loc.448>:
	
	
	if(!(SREG & (1<<7)) ){
    1ca8:	8f e5       	ldi	r24, 0x5F	; 95
    1caa:	90 e0       	ldi	r25, 0x00	; 0
    1cac:	dc 01       	movw	r26, r24
    1cae:	8c 91       	ld	r24, X

00001cb0 <.Loc.449>:
    1cb0:	80 95       	com	r24
    1cb2:	88 1f       	adc	r24, r24
    1cb4:	88 27       	eor	r24, r24
    1cb6:	88 1f       	adc	r24, r24

00001cb8 <.Loc.450>:
    1cb8:	88 23       	and	r24, r24
    1cba:	09 f4       	brne	.+2      	; 0x1cbe <.Loc.451>

00001cbc <L0^A>:
    1cbc:	36 c1       	rjmp	.+620    	; 0x1f2a <.L197>

00001cbe <.Loc.451>:
		asyncruino::uart::debug_crush("sreg became 0 strange!!!");
    1cbe:	8d e1       	ldi	r24, 0x1D	; 29
    1cc0:	91 e0       	ldi	r25, 0x01	; 1
    1cc2:	0e 94 cb 04 	call	0x996	; 0x996 <_ZN10asyncruino4uart11debug_crushEPKc>

00001cc6 <.Loc.452>:
		error = true;
    1cc6:	81 e0       	ldi	r24, 0x01	; 1
    1cc8:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <error>

00001ccc <.Loc.453>:
	}
	while(error){
    1ccc:	2e c1       	rjmp	.+604    	; 0x1f2a <.L197>

00001cce <.L214>:
    1cce:	80 e0       	ldi	r24, 0x00	; 0
    1cd0:	90 e0       	ldi	r25, 0x00	; 0
    1cd2:	a8 ec       	ldi	r26, 0xC8	; 200
    1cd4:	b2 e4       	ldi	r27, 0x42	; 66
    1cd6:	8f 87       	std	Y+15, r24	; 0x0f
    1cd8:	98 8b       	std	Y+16, r25	; 0x10
    1cda:	a9 8b       	std	Y+17, r26	; 0x11
    1cdc:	ba 8b       	std	Y+18, r27	; 0x12

00001cde <.LBB53>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1cde:	20 e0       	ldi	r18, 0x00	; 0
    1ce0:	30 e0       	ldi	r19, 0x00	; 0
    1ce2:	4a e7       	ldi	r20, 0x7A	; 122
    1ce4:	55 e4       	ldi	r21, 0x45	; 69
    1ce6:	6f 85       	ldd	r22, Y+15	; 0x0f
    1ce8:	78 89       	ldd	r23, Y+16	; 0x10
    1cea:	89 89       	ldd	r24, Y+17	; 0x11
    1cec:	9a 89       	ldd	r25, Y+18	; 0x12
    1cee:	0e 94 aa 21 	call	0x4354	; 0x4354 <__mulsf3>
    1cf2:	6d a3       	std	Y+37, r22	; 0x25
    1cf4:	7e a3       	std	Y+38, r23	; 0x26
    1cf6:	8f a3       	std	Y+39, r24	; 0x27
    1cf8:	98 a7       	std	Y+40, r25	; 0x28
    1cfa:	8d a1       	ldd	r24, Y+37	; 0x25
    1cfc:	9e a1       	ldd	r25, Y+38	; 0x26
    1cfe:	af a1       	ldd	r26, Y+39	; 0x27
    1d00:	b8 a5       	ldd	r27, Y+40	; 0x28
    1d02:	8b 8b       	std	Y+19, r24	; 0x13
    1d04:	9c 8b       	std	Y+20, r25	; 0x14
    1d06:	ad 8b       	std	Y+21, r26	; 0x15
    1d08:	be 8b       	std	Y+22, r27	; 0x16

00001d0a <.Loc.455>:
	if (__tmp < 1.0)
    1d0a:	20 e0       	ldi	r18, 0x00	; 0
    1d0c:	30 e0       	ldi	r19, 0x00	; 0
    1d0e:	40 e8       	ldi	r20, 0x80	; 128
    1d10:	5f e3       	ldi	r21, 0x3F	; 63
    1d12:	6b 89       	ldd	r22, Y+19	; 0x13
    1d14:	7c 89       	ldd	r23, Y+20	; 0x14
    1d16:	8d 89       	ldd	r24, Y+21	; 0x15
    1d18:	9e 89       	ldd	r25, Y+22	; 0x16
    1d1a:	0e 94 01 20 	call	0x4002	; 0x4002 <__cmpsf2>
    1d1e:	88 23       	and	r24, r24
    1d20:	2c f4       	brge	.+10     	; 0x1d2c <.L219>

00001d22 <.Loc.456>:
		__ticks = 1;
    1d22:	81 e0       	ldi	r24, 0x01	; 1
    1d24:	90 e0       	ldi	r25, 0x00	; 0
    1d26:	98 8f       	std	Y+24, r25	; 0x18
    1d28:	8f 8b       	std	Y+23, r24	; 0x17
    1d2a:	55 c0       	rjmp	.+170    	; 0x1dd6 <.L200>

00001d2c <.L219>:
	else if (__tmp > 65535)
    1d2c:	20 e0       	ldi	r18, 0x00	; 0
    1d2e:	3f ef       	ldi	r19, 0xFF	; 255
    1d30:	4f e7       	ldi	r20, 0x7F	; 127
    1d32:	57 e4       	ldi	r21, 0x47	; 71
    1d34:	6b 89       	ldd	r22, Y+19	; 0x13
    1d36:	7c 89       	ldd	r23, Y+20	; 0x14
    1d38:	8d 89       	ldd	r24, Y+21	; 0x15
    1d3a:	9e 89       	ldd	r25, Y+22	; 0x16
    1d3c:	0e 94 a5 21 	call	0x434a	; 0x434a <__gesf2>
    1d40:	88 23       	and	r24, r24
    1d42:	d9 f1       	breq	.+118    	; 0x1dba <.L220>
    1d44:	d4 f1       	brlt	.+116    	; 0x1dba <.L220>

00001d46 <.Loc.458>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d46:	20 e0       	ldi	r18, 0x00	; 0
    1d48:	30 e0       	ldi	r19, 0x00	; 0
    1d4a:	40 e2       	ldi	r20, 0x20	; 32
    1d4c:	51 e4       	ldi	r21, 0x41	; 65
    1d4e:	6f 85       	ldd	r22, Y+15	; 0x0f
    1d50:	78 89       	ldd	r23, Y+16	; 0x10
    1d52:	89 89       	ldd	r24, Y+17	; 0x11
    1d54:	9a 89       	ldd	r25, Y+18	; 0x12
    1d56:	0e 94 aa 21 	call	0x4354	; 0x4354 <__mulsf3>
    1d5a:	69 a7       	std	Y+41, r22	; 0x29
    1d5c:	7a a7       	std	Y+42, r23	; 0x2a
    1d5e:	8b a7       	std	Y+43, r24	; 0x2b
    1d60:	9c a7       	std	Y+44, r25	; 0x2c
    1d62:	89 a5       	ldd	r24, Y+41	; 0x29
    1d64:	9a a5       	ldd	r25, Y+42	; 0x2a
    1d66:	ab a5       	ldd	r26, Y+43	; 0x2b
    1d68:	bc a5       	ldd	r27, Y+44	; 0x2c
    1d6a:	89 a3       	std	Y+33, r24	; 0x21
    1d6c:	9a a3       	std	Y+34, r25	; 0x22
    1d6e:	ab a3       	std	Y+35, r26	; 0x23
    1d70:	bc a3       	std	Y+36, r27	; 0x24

00001d72 <.Loc.459>:
    1d72:	69 a1       	ldd	r22, Y+33	; 0x21
    1d74:	7a a1       	ldd	r23, Y+34	; 0x22
    1d76:	8b a1       	ldd	r24, Y+35	; 0x23
    1d78:	9c a1       	ldd	r25, Y+36	; 0x24
    1d7a:	0e 94 b4 20 	call	0x4168	; 0x4168 <__fixunssfsi>
    1d7e:	6d a7       	std	Y+45, r22	; 0x2d
    1d80:	7e a7       	std	Y+46, r23	; 0x2e
    1d82:	8f a7       	std	Y+47, r24	; 0x2f
    1d84:	98 ab       	std	Y+48, r25	; 0x30
    1d86:	ad a5       	ldd	r26, Y+45	; 0x2d
    1d88:	be a5       	ldd	r27, Y+46	; 0x2e
    1d8a:	b8 8f       	std	Y+24, r27	; 0x18
    1d8c:	af 8b       	std	Y+23, r26	; 0x17

00001d8e <.Loc.460>:
		while(__ticks)
    1d8e:	10 c0       	rjmp	.+32     	; 0x1db0 <.L203>

00001d90 <.L204>:
    1d90:	80 e9       	ldi	r24, 0x90	; 144
    1d92:	91 e0       	ldi	r25, 0x01	; 1
    1d94:	9a 8f       	std	Y+26, r25	; 0x1a
    1d96:	89 8f       	std	Y+25, r24	; 0x19

00001d98 <.LBB55>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
    1d98:	89 8d       	ldd	r24, Y+25	; 0x19
    1d9a:	9a 8d       	ldd	r25, Y+26	; 0x1a

00001d9c <.L1^B1>:
    1d9c:	01 97       	sbiw	r24, 0x01	; 1
    1d9e:	f1 f7       	brne	.-4      	; 0x1d9c <.L1^B1>
    1da0:	9a 8f       	std	Y+26, r25	; 0x1a
    1da2:	89 8f       	std	Y+25, r24	; 0x19

00001da4 <.Loc.462>:
	...

00001da6 <.LBE55>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1da6:	8f 89       	ldd	r24, Y+23	; 0x17
    1da8:	98 8d       	ldd	r25, Y+24	; 0x18
    1daa:	01 97       	sbiw	r24, 0x01	; 1
    1dac:	98 8f       	std	Y+24, r25	; 0x18
    1dae:	8f 8b       	std	Y+23, r24	; 0x17

00001db0 <.L203>:
		while(__ticks)
    1db0:	8f 89       	ldd	r24, Y+23	; 0x17
    1db2:	98 8d       	ldd	r25, Y+24	; 0x18
    1db4:	00 97       	sbiw	r24, 0x00	; 0
    1db6:	61 f7       	brne	.-40     	; 0x1d90 <.L204>

00001db8 <.Loc.465>:
		}
		return;
    1db8:	19 c0       	rjmp	.+50     	; 0x1dec <.L205>

00001dba <.L220>:
	}
	else
		__ticks = (uint16_t)__tmp;
    1dba:	6b 89       	ldd	r22, Y+19	; 0x13
    1dbc:	7c 89       	ldd	r23, Y+20	; 0x14
    1dbe:	8d 89       	ldd	r24, Y+21	; 0x15
    1dc0:	9e 89       	ldd	r25, Y+22	; 0x16
    1dc2:	0e 94 b4 20 	call	0x4168	; 0x4168 <__fixunssfsi>
    1dc6:	69 ab       	std	Y+49, r22	; 0x31
    1dc8:	7a ab       	std	Y+50, r23	; 0x32
    1dca:	8b ab       	std	Y+51, r24	; 0x33
    1dcc:	9c ab       	std	Y+52, r25	; 0x34
    1dce:	e9 a9       	ldd	r30, Y+49	; 0x31
    1dd0:	fa a9       	ldd	r31, Y+50	; 0x32
    1dd2:	f8 8f       	std	Y+24, r31	; 0x18
    1dd4:	ef 8b       	std	Y+23, r30	; 0x17

00001dd6 <.L200>:
    1dd6:	8f 89       	ldd	r24, Y+23	; 0x17
    1dd8:	98 8d       	ldd	r25, Y+24	; 0x18
    1dda:	9c 8f       	std	Y+28, r25	; 0x1c
    1ddc:	8b 8f       	std	Y+27, r24	; 0x1b

00001dde <.LBB57>:
    1dde:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1de0:	9c 8d       	ldd	r25, Y+28	; 0x1c

00001de2 <.L1^B2>:
    1de2:	01 97       	sbiw	r24, 0x01	; 1
    1de4:	f1 f7       	brne	.-4      	; 0x1de2 <.L1^B2>
    1de6:	9c 8f       	std	Y+28, r25	; 0x1c
    1de8:	8b 8f       	std	Y+27, r24	; 0x1b

00001dea <.Loc.468>:
	...

00001dec <.L205>:
		_delay_ms(100);
		PORTB = 0x00;
    1dec:	85 e2       	ldi	r24, 0x25	; 37
    1dee:	90 e0       	ldi	r25, 0x00	; 0

00001df0 <.Loc.470>:
    1df0:	dc 01       	movw	r26, r24
    1df2:	1c 92       	st	X, r1
    1df4:	80 e0       	ldi	r24, 0x00	; 0
    1df6:	90 e0       	ldi	r25, 0x00	; 0
    1df8:	a8 ec       	ldi	r26, 0xC8	; 200
    1dfa:	b2 e4       	ldi	r27, 0x42	; 66
    1dfc:	89 83       	std	Y+1, r24	; 0x01
    1dfe:	9a 83       	std	Y+2, r25	; 0x02
    1e00:	ab 83       	std	Y+3, r26	; 0x03
    1e02:	bc 83       	std	Y+4, r27	; 0x04

00001e04 <.LBB59>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    1e04:	20 e0       	ldi	r18, 0x00	; 0
    1e06:	30 e0       	ldi	r19, 0x00	; 0
    1e08:	4a e7       	ldi	r20, 0x7A	; 122
    1e0a:	55 e4       	ldi	r21, 0x45	; 69
    1e0c:	69 81       	ldd	r22, Y+1	; 0x01
    1e0e:	7a 81       	ldd	r23, Y+2	; 0x02
    1e10:	8b 81       	ldd	r24, Y+3	; 0x03
    1e12:	9c 81       	ldd	r25, Y+4	; 0x04
    1e14:	0e 94 aa 21 	call	0x4354	; 0x4354 <__mulsf3>
    1e18:	6d ab       	std	Y+53, r22	; 0x35
    1e1a:	7e ab       	std	Y+54, r23	; 0x36
    1e1c:	8f ab       	std	Y+55, r24	; 0x37
    1e1e:	98 af       	std	Y+56, r25	; 0x38
    1e20:	8d a9       	ldd	r24, Y+53	; 0x35
    1e22:	9e a9       	ldd	r25, Y+54	; 0x36
    1e24:	af a9       	ldd	r26, Y+55	; 0x37
    1e26:	b8 ad       	ldd	r27, Y+56	; 0x38
    1e28:	8d 83       	std	Y+5, r24	; 0x05
    1e2a:	9e 83       	std	Y+6, r25	; 0x06
    1e2c:	af 83       	std	Y+7, r26	; 0x07
    1e2e:	b8 87       	std	Y+8, r27	; 0x08

00001e30 <.Loc.472>:
	if (__tmp < 1.0)
    1e30:	20 e0       	ldi	r18, 0x00	; 0
    1e32:	30 e0       	ldi	r19, 0x00	; 0
    1e34:	40 e8       	ldi	r20, 0x80	; 128
    1e36:	5f e3       	ldi	r21, 0x3F	; 63
    1e38:	6d 81       	ldd	r22, Y+5	; 0x05
    1e3a:	7e 81       	ldd	r23, Y+6	; 0x06
    1e3c:	8f 81       	ldd	r24, Y+7	; 0x07
    1e3e:	98 85       	ldd	r25, Y+8	; 0x08
    1e40:	0e 94 01 20 	call	0x4002	; 0x4002 <__cmpsf2>
    1e44:	88 23       	and	r24, r24
    1e46:	2c f4       	brge	.+10     	; 0x1e52 <.L221>

00001e48 <.Loc.473>:
		__ticks = 1;
    1e48:	81 e0       	ldi	r24, 0x01	; 1
    1e4a:	90 e0       	ldi	r25, 0x00	; 0
    1e4c:	9a 87       	std	Y+10, r25	; 0x0a
    1e4e:	89 87       	std	Y+9, r24	; 0x09
    1e50:	5c c0       	rjmp	.+184    	; 0x1f0a <.L208>

00001e52 <.L221>:
	else if (__tmp > 65535)
    1e52:	20 e0       	ldi	r18, 0x00	; 0
    1e54:	3f ef       	ldi	r19, 0xFF	; 255
    1e56:	4f e7       	ldi	r20, 0x7F	; 127
    1e58:	57 e4       	ldi	r21, 0x47	; 71
    1e5a:	6d 81       	ldd	r22, Y+5	; 0x05
    1e5c:	7e 81       	ldd	r23, Y+6	; 0x06
    1e5e:	8f 81       	ldd	r24, Y+7	; 0x07
    1e60:	98 85       	ldd	r25, Y+8	; 0x08
    1e62:	0e 94 a5 21 	call	0x434a	; 0x434a <__gesf2>
    1e66:	88 23       	and	r24, r24
    1e68:	09 f0       	breq	.+2      	; 0x1e6c <L0^A>

00001e6a <L0^A>:
    1e6a:	0c f4       	brge	.+2      	; 0x1e6e <.Loc.475>

00001e6c <L0^A>:
    1e6c:	3c c0       	rjmp	.+120    	; 0x1ee6 <.L222>

00001e6e <.Loc.475>:
		__ticks = (uint16_t) (__ms * 10.0);
    1e6e:	20 e0       	ldi	r18, 0x00	; 0
    1e70:	30 e0       	ldi	r19, 0x00	; 0
    1e72:	40 e2       	ldi	r20, 0x20	; 32
    1e74:	51 e4       	ldi	r21, 0x41	; 65
    1e76:	69 81       	ldd	r22, Y+1	; 0x01
    1e78:	7a 81       	ldd	r23, Y+2	; 0x02
    1e7a:	8b 81       	ldd	r24, Y+3	; 0x03
    1e7c:	9c 81       	ldd	r25, Y+4	; 0x04
    1e7e:	0e 94 aa 21 	call	0x4354	; 0x4354 <__mulsf3>
    1e82:	69 af       	std	Y+57, r22	; 0x39
    1e84:	7a af       	std	Y+58, r23	; 0x3a
    1e86:	8b af       	std	Y+59, r24	; 0x3b
    1e88:	9c af       	std	Y+60, r25	; 0x3c
    1e8a:	89 ad       	ldd	r24, Y+57	; 0x39
    1e8c:	9a ad       	ldd	r25, Y+58	; 0x3a
    1e8e:	ab ad       	ldd	r26, Y+59	; 0x3b
    1e90:	bc ad       	ldd	r27, Y+60	; 0x3c
    1e92:	8d 8f       	std	Y+29, r24	; 0x1d
    1e94:	9e 8f       	std	Y+30, r25	; 0x1e
    1e96:	af 8f       	std	Y+31, r26	; 0x1f
    1e98:	b8 a3       	std	Y+32, r27	; 0x20

00001e9a <.Loc.476>:
    1e9a:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1e9c:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1e9e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1ea0:	98 a1       	ldd	r25, Y+32	; 0x20
    1ea2:	0e 94 b4 20 	call	0x4168	; 0x4168 <__fixunssfsi>
    1ea6:	21 96       	adiw	r28, 0x01	; 1
    1ea8:	6c af       	std	Y+60, r22	; 0x3c
    1eaa:	7d af       	std	Y+61, r23	; 0x3d
    1eac:	8e af       	std	Y+62, r24	; 0x3e
    1eae:	9f af       	std	Y+63, r25	; 0x3f
    1eb0:	21 97       	sbiw	r28, 0x01	; 1
    1eb2:	ad ad       	ldd	r26, Y+61	; 0x3d
    1eb4:	be ad       	ldd	r27, Y+62	; 0x3e
    1eb6:	ba 87       	std	Y+10, r27	; 0x0a
    1eb8:	a9 87       	std	Y+9, r26	; 0x09

00001eba <.Loc.477>:
		while(__ticks)
    1eba:	10 c0       	rjmp	.+32     	; 0x1edc <.L211>

00001ebc <.L212>:
    1ebc:	80 e9       	ldi	r24, 0x90	; 144
    1ebe:	91 e0       	ldi	r25, 0x01	; 1
    1ec0:	9c 87       	std	Y+12, r25	; 0x0c
    1ec2:	8b 87       	std	Y+11, r24	; 0x0b

00001ec4 <.LBB61>:
    1ec4:	8b 85       	ldd	r24, Y+11	; 0x0b
    1ec6:	9c 85       	ldd	r25, Y+12	; 0x0c

00001ec8 <.L1^B3>:
    1ec8:	01 97       	sbiw	r24, 0x01	; 1
    1eca:	f1 f7       	brne	.-4      	; 0x1ec8 <.L1^B3>
    1ecc:	9c 87       	std	Y+12, r25	; 0x0c
    1ece:	8b 87       	std	Y+11, r24	; 0x0b

00001ed0 <.Loc.479>:
	...

00001ed2 <.LBE61>:
			__ticks --;
    1ed2:	89 85       	ldd	r24, Y+9	; 0x09
    1ed4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ed6:	01 97       	sbiw	r24, 0x01	; 1
    1ed8:	9a 87       	std	Y+10, r25	; 0x0a
    1eda:	89 87       	std	Y+9, r24	; 0x09

00001edc <.L211>:
		while(__ticks)
    1edc:	89 85       	ldd	r24, Y+9	; 0x09
    1ede:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ee0:	00 97       	sbiw	r24, 0x00	; 0
    1ee2:	61 f7       	brne	.-40     	; 0x1ebc <.L212>

00001ee4 <.Loc.482>:
		return;
    1ee4:	1d c0       	rjmp	.+58     	; 0x1f20 <.L213>

00001ee6 <.L222>:
		__ticks = (uint16_t)__tmp;
    1ee6:	6d 81       	ldd	r22, Y+5	; 0x05
    1ee8:	7e 81       	ldd	r23, Y+6	; 0x06
    1eea:	8f 81       	ldd	r24, Y+7	; 0x07
    1eec:	98 85       	ldd	r25, Y+8	; 0x08
    1eee:	0e 94 b4 20 	call	0x4168	; 0x4168 <__fixunssfsi>
    1ef2:	25 96       	adiw	r28, 0x05	; 5
    1ef4:	6c af       	std	Y+60, r22	; 0x3c
    1ef6:	7d af       	std	Y+61, r23	; 0x3d
    1ef8:	8e af       	std	Y+62, r24	; 0x3e
    1efa:	9f af       	std	Y+63, r25	; 0x3f
    1efc:	25 97       	sbiw	r28, 0x05	; 5
    1efe:	23 96       	adiw	r28, 0x03	; 3
    1f00:	ee ad       	ldd	r30, Y+62	; 0x3e
    1f02:	ff ad       	ldd	r31, Y+63	; 0x3f
    1f04:	23 97       	sbiw	r28, 0x03	; 3
    1f06:	fa 87       	std	Y+10, r31	; 0x0a
    1f08:	e9 87       	std	Y+9, r30	; 0x09

00001f0a <.L208>:
    1f0a:	89 85       	ldd	r24, Y+9	; 0x09
    1f0c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f0e:	9e 87       	std	Y+14, r25	; 0x0e
    1f10:	8d 87       	std	Y+13, r24	; 0x0d

00001f12 <.LBB63>:
    1f12:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f14:	9e 85       	ldd	r25, Y+14	; 0x0e

00001f16 <.L1^B4>:
    1f16:	01 97       	sbiw	r24, 0x01	; 1
    1f18:	f1 f7       	brne	.-4      	; 0x1f16 <.L1^B4>
    1f1a:	9e 87       	std	Y+14, r25	; 0x0e
    1f1c:	8d 87       	std	Y+13, r24	; 0x0d

00001f1e <.Loc.485>:
	...

00001f20 <.L213>:
		_delay_ms(100);
		PORTB = 0xFF;
    1f20:	85 e2       	ldi	r24, 0x25	; 37
    1f22:	90 e0       	ldi	r25, 0x00	; 0

00001f24 <.Loc.487>:
    1f24:	2f ef       	ldi	r18, 0xFF	; 255
    1f26:	dc 01       	movw	r26, r24
    1f28:	2c 93       	st	X, r18

00001f2a <.L197>:
	while(error){
    1f2a:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <error>
    1f2e:	88 23       	and	r24, r24
    1f30:	09 f0       	breq	.+2      	; 0x1f34 <.Loc.489>

00001f32 <L0^A>:
    1f32:	cd ce       	rjmp	.-614    	; 0x1cce <.L214>

00001f34 <.Loc.489>:
	}
	//sei();
}
    1f34:	00 00       	nop
    1f36:	00 00       	nop
    1f38:	cc 5b       	subi	r28, 0xBC	; 188
    1f3a:	df 4f       	sbci	r29, 0xFF	; 255
    1f3c:	0f b6       	in	r0, 0x3f	; 63
    1f3e:	f8 94       	cli
    1f40:	de bf       	out	0x3e, r29	; 62
    1f42:	0f be       	out	0x3f, r0	; 63
    1f44:	cd bf       	out	0x3d, r28	; 61
    1f46:	df 91       	pop	r29
    1f48:	cf 91       	pop	r28
    1f4a:	08 95       	ret

00001f4c <_Z13double_lockedv>:



void double_locked(){
    1f4c:	cf 93       	push	r28
    1f4e:	df 93       	push	r29
    1f50:	cd b7       	in	r28, 0x3d	; 61
    1f52:	de b7       	in	r29, 0x3e	; 62

00001f54 <.Loc.491>:
	asyncruino::uart::debug_crush("twice lock");
    1f54:	86 e3       	ldi	r24, 0x36	; 54
    1f56:	91 e0       	ldi	r25, 0x01	; 1
    1f58:	0e 94 cb 04 	call	0x996	; 0x996 <_ZN10asyncruino4uart11debug_crushEPKc>

00001f5c <.Loc.492>:
}
    1f5c:	00 00       	nop
    1f5e:	df 91       	pop	r29
    1f60:	cf 91       	pop	r28
    1f62:	08 95       	ret

00001f64 <_Z15double_unlockedv>:

void double_unlocked(){
    1f64:	cf 93       	push	r28
    1f66:	df 93       	push	r29
    1f68:	cd b7       	in	r28, 0x3d	; 61
    1f6a:	de b7       	in	r29, 0x3e	; 62

00001f6c <.Loc.494>:
	error = true;
    1f6c:	81 e0       	ldi	r24, 0x01	; 1
    1f6e:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <error>

00001f72 <.Loc.495>:
	asyncruino::uart::debug_crush("twice unlock");
    1f72:	81 e4       	ldi	r24, 0x41	; 65
    1f74:	91 e0       	ldi	r25, 0x01	; 1
    1f76:	0e 94 cb 04 	call	0x996	; 0x996 <_ZN10asyncruino4uart11debug_crushEPKc>

00001f7a <.Loc.496>:
}
    1f7a:	00 00       	nop
    1f7c:	df 91       	pop	r29
    1f7e:	cf 91       	pop	r28
    1f80:	08 95       	ret

00001f82 <main>:


int main(void)
{	
    1f82:	cf 93       	push	r28
    1f84:	df 93       	push	r29
    1f86:	00 d0       	rcall	.+0      	; 0x1f88 <L0^A>

00001f88 <L0^A>:
    1f88:	0f 92       	push	r0
    1f8a:	cd b7       	in	r28, 0x3d	; 61
    1f8c:	de b7       	in	r29, 0x3e	; 62

00001f8e <.Loc.498>:
	
	DDRD = 0x00;
    1f8e:	8a e2       	ldi	r24, 0x2A	; 42
    1f90:	90 e0       	ldi	r25, 0x00	; 0

00001f92 <.Loc.499>:
    1f92:	fc 01       	movw	r30, r24
    1f94:	10 82       	st	Z, r1

00001f96 <.Loc.500>:
	DDRB = 0xFF;
    1f96:	84 e2       	ldi	r24, 0x24	; 36
    1f98:	90 e0       	ldi	r25, 0x00	; 0

00001f9a <.Loc.501>:
    1f9a:	2f ef       	ldi	r18, 0xFF	; 255
    1f9c:	fc 01       	movw	r30, r24
    1f9e:	20 83       	st	Z, r18

00001fa0 <.Loc.502>:
	PORTB = 0xFF;
    1fa0:	85 e2       	ldi	r24, 0x25	; 37
    1fa2:	90 e0       	ldi	r25, 0x00	; 0

00001fa4 <.Loc.503>:
    1fa4:	2f ef       	ldi	r18, 0xFF	; 255
    1fa6:	fc 01       	movw	r30, r24
    1fa8:	20 83       	st	Z, r18

00001faa <.LBB65>:
	
	for(uint8_t i=0;i<2;++i){
    1faa:	19 82       	std	Y+1, r1	; 0x01

00001fac <.Loc.505>:
    1fac:	0c c0       	rjmp	.+24     	; 0x1fc6 <.L226>

00001fae <.L227>:
		//_delay_ms(100);
		PORTB = 0x00;
    1fae:	85 e2       	ldi	r24, 0x25	; 37
    1fb0:	90 e0       	ldi	r25, 0x00	; 0

00001fb2 <.Loc.507>:
    1fb2:	fc 01       	movw	r30, r24
    1fb4:	10 82       	st	Z, r1

00001fb6 <.Loc.508>:
		//_delay_ms(100);
		PORTB = 0xFF;
    1fb6:	85 e2       	ldi	r24, 0x25	; 37
    1fb8:	90 e0       	ldi	r25, 0x00	; 0

00001fba <.Loc.509>:
    1fba:	2f ef       	ldi	r18, 0xFF	; 255
    1fbc:	fc 01       	movw	r30, r24
    1fbe:	20 83       	st	Z, r18

00001fc0 <.Loc.510>:
	for(uint8_t i=0;i<2;++i){
    1fc0:	89 81       	ldd	r24, Y+1	; 0x01
    1fc2:	8f 5f       	subi	r24, 0xFF	; 255
    1fc4:	89 83       	std	Y+1, r24	; 0x01

00001fc6 <.L226>:
    1fc6:	89 81       	ldd	r24, Y+1	; 0x01
    1fc8:	81 30       	cpi	r24, 0x01	; 1
    1fca:	89 f3       	breq	.-30     	; 0x1fae <.L227>
    1fcc:	80 f3       	brcs	.-32     	; 0x1fae <.L227>

00001fce <.LBE65>:
	}
	
	
    /* Replace with your application code */
	auto f = EchoServer();
    1fce:	0e 94 46 06 	call	0xc8c	; 0xc8c <_Z10EchoServerv>

00001fd2 <.Loc.513>:
	auto g = Blink(1000,0);
    1fd2:	60 e0       	ldi	r22, 0x00	; 0
    1fd4:	70 e0       	ldi	r23, 0x00	; 0
    1fd6:	88 ee       	ldi	r24, 0xE8	; 232
    1fd8:	93 e0       	ldi	r25, 0x03	; 3
    1fda:	0e 94 5d 0c 	call	0x18ba	; 0x18ba <_Z5Blinkji>

00001fde <.Loc.514>:
	std::is_same_v<int,int>;
	asyncruino::scheduler::instance().sleep = sleep_func;
    1fde:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <_ZN10asyncruino9scheduler8instanceEv>

00001fe2 <.Loc.515>:
    1fe2:	8a 5b       	subi	r24, 0xBA	; 186
    1fe4:	9f 4f       	sbci	r25, 0xFF	; 255
    1fe6:	29 e4       	ldi	r18, 0x49	; 73
    1fe8:	3e e0       	ldi	r19, 0x0E	; 14
    1fea:	fc 01       	movw	r30, r24
    1fec:	31 83       	std	Z+1, r19	; 0x01
    1fee:	20 83       	st	Z, r18

00001ff0 <.Loc.516>:
    return asyncruino::scheduler::run();
    1ff0:	0e 94 95 01 	call	0x32a	; 0x32a <_ZN10asyncruino9scheduler3runEv>

00001ff4 <.Loc.517>:
	...

00001ff6 <.Loc.518>:
}
    1ff6:	0f 90       	pop	r0
    1ff8:	0f 90       	pop	r0
    1ffa:	0f 90       	pop	r0
    1ffc:	df 91       	pop	r29
    1ffe:	cf 91       	pop	r28
    2000:	08 95       	ret

00002002 <_ZN10asyncruino14scheduler_implINS_13default_guardELj32EEC1Ev>:
    struct scheduler_impl{
        pipe<std::coroutine_handle<>,size_t,max_coro_num> m_handles;
        guard_type m_pipe_guard;
        void (*sleep)(void);

        scheduler_impl():sleep(nullptr){}
    2002:	cf 93       	push	r28
    2004:	df 93       	push	r29
    2006:	00 d0       	rcall	.+0      	; 0x2008 <L0^A>

00002008 <L0^A>:
    2008:	cd b7       	in	r28, 0x3d	; 61
    200a:	de b7       	in	r29, 0x3e	; 62
    200c:	9a 83       	std	Y+2, r25	; 0x02
    200e:	89 83       	std	Y+1, r24	; 0x01

00002010 <.Loc.520>:
    2010:	89 81       	ldd	r24, Y+1	; 0x01
    2012:	9a 81       	ldd	r25, Y+2	; 0x02
    2014:	0e 94 cf 18 	call	0x319e	; 0x319e <_ZN10asyncruino4pipeINSt7__n486116coroutine_handleIvEEjLj32EEC1Ev>
    2018:	89 81       	ldd	r24, Y+1	; 0x01
    201a:	9a 81       	ldd	r25, Y+2	; 0x02
    201c:	8c 5b       	subi	r24, 0xBC	; 188
    201e:	9f 4f       	sbci	r25, 0xFF	; 255
    2020:	0e 94 0d 01 	call	0x21a	; 0x21a <_ZN10asyncruino13default_guardC1Ev>

00002024 <.Loc.521>:
    2024:	89 81       	ldd	r24, Y+1	; 0x01
    2026:	9a 81       	ldd	r25, Y+2	; 0x02
    2028:	8a 5b       	subi	r24, 0xBA	; 186
    202a:	9f 4f       	sbci	r25, 0xFF	; 255
    202c:	fc 01       	movw	r30, r24
    202e:	11 82       	std	Z+1, r1	; 0x01
    2030:	10 82       	st	Z, r1

00002032 <.Loc.522>:
    2032:	00 00       	nop
    2034:	0f 90       	pop	r0
    2036:	0f 90       	pop	r0
    2038:	df 91       	pop	r29
    203a:	cf 91       	pop	r28
    203c:	08 95       	ret

0000203e <_ZN10asyncruino14scheduler_implINS_13default_guardELj32EE3runEv>:
        void run(){
    203e:	cf 93       	push	r28
    2040:	df 93       	push	r29
    2042:	00 d0       	rcall	.+0      	; 0x2044 <L0^A>

00002044 <L0^A>:
    2044:	00 d0       	rcall	.+0      	; 0x2046 <L0^A>

00002046 <L0^A>:
    2046:	cd b7       	in	r28, 0x3d	; 61
    2048:	de b7       	in	r29, 0x3e	; 62
    204a:	9c 83       	std	Y+4, r25	; 0x04
    204c:	8b 83       	std	Y+3, r24	; 0x03

0000204e <.L233>:
            while(1){
                m_pipe_guard.lock();
    204e:	8b 81       	ldd	r24, Y+3	; 0x03
    2050:	9c 81       	ldd	r25, Y+4	; 0x04
    2052:	8c 5b       	subi	r24, 0xBC	; 188
    2054:	9f 4f       	sbci	r25, 0xFF	; 255
    2056:	0e 94 1e 01 	call	0x23c	; 0x23c <_ZN10asyncruino13default_guard4lockEv>

0000205a <.Loc.525>:
                if(m_handles.empty()){
    205a:	8b 81       	ldd	r24, Y+3	; 0x03
    205c:	9c 81       	ldd	r25, Y+4	; 0x04
    205e:	0e 94 f2 18 	call	0x31e4	; 0x31e4 <_ZNK10asyncruino4pipeINSt7__n486116coroutine_handleIvEEjLj32EE5emptyEv>

00002062 <.Loc.526>:
    2062:	88 23       	and	r24, r24
    2064:	c9 f0       	breq	.+50     	; 0x2098 <.L231>

00002066 <.Loc.527>:
                    m_pipe_guard.unlock();
    2066:	8b 81       	ldd	r24, Y+3	; 0x03
    2068:	9c 81       	ldd	r25, Y+4	; 0x04
    206a:	8c 5b       	subi	r24, 0xBC	; 188
    206c:	9f 4f       	sbci	r25, 0xFF	; 255
    206e:	0e 94 45 01 	call	0x28a	; 0x28a <_ZN10asyncruino13default_guard6unlockEv>

00002072 <.Loc.528>:
                    if(sleep){
    2072:	8b 81       	ldd	r24, Y+3	; 0x03
    2074:	9c 81       	ldd	r25, Y+4	; 0x04
    2076:	8a 5b       	subi	r24, 0xBA	; 186
    2078:	9f 4f       	sbci	r25, 0xFF	; 255
    207a:	fc 01       	movw	r30, r24
    207c:	80 81       	ld	r24, Z
    207e:	91 81       	ldd	r25, Z+1	; 0x01

00002080 <.Loc.529>:
    2080:	00 97       	sbiw	r24, 0x00	; 0
    2082:	29 f3       	breq	.-54     	; 0x204e <.L233>

00002084 <.Loc.530>:
                        sleep();
    2084:	8b 81       	ldd	r24, Y+3	; 0x03
    2086:	9c 81       	ldd	r25, Y+4	; 0x04
    2088:	8a 5b       	subi	r24, 0xBA	; 186
    208a:	9f 4f       	sbci	r25, 0xFF	; 255
    208c:	fc 01       	movw	r30, r24
    208e:	80 81       	ld	r24, Z
    2090:	91 81       	ldd	r25, Z+1	; 0x01
    2092:	fc 01       	movw	r30, r24
    2094:	09 95       	icall
    2096:	db cf       	rjmp	.-74     	; 0x204e <.L233>

00002098 <.L231>:
                    }
                } else {
                    std::coroutine_handle<> tmp_handle;
    2098:	1a 82       	std	Y+2, r1	; 0x02
    209a:	19 82       	std	Y+1, r1	; 0x01

0000209c <.Loc.532>:
                    m_handles.read(tmp_handle);
    209c:	8b 81       	ldd	r24, Y+3	; 0x03
    209e:	9c 81       	ldd	r25, Y+4	; 0x04
    20a0:	9e 01       	movw	r18, r28
    20a2:	2f 5f       	subi	r18, 0xFF	; 255
    20a4:	3f 4f       	sbci	r19, 0xFF	; 255
    20a6:	b9 01       	movw	r22, r18
    20a8:	0e 94 0a 19 	call	0x3214	; 0x3214 <_ZN10asyncruino4pipeINSt7__n486116coroutine_handleIvEEjLj32EE4readERS3_>

000020ac <.Loc.533>:
                    m_pipe_guard.unlock();
    20ac:	8b 81       	ldd	r24, Y+3	; 0x03
    20ae:	9c 81       	ldd	r25, Y+4	; 0x04
    20b0:	8c 5b       	subi	r24, 0xBC	; 188
    20b2:	9f 4f       	sbci	r25, 0xFF	; 255
    20b4:	0e 94 45 01 	call	0x28a	; 0x28a <_ZN10asyncruino13default_guard6unlockEv>

000020b8 <.Loc.534>:
                    tmp_handle.resume();
    20b8:	ce 01       	movw	r24, r28
    20ba:	01 96       	adiw	r24, 0x01	; 1
    20bc:	0e 94 8d 00 	call	0x11a	; 0x11a <_ZNKSt7__n486116coroutine_handleIvE6resumeEv>

000020c0 <.LBE69>:
            while(1){
    20c0:	c6 cf       	rjmp	.-116    	; 0x204e <.L233>

000020c2 <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EEC1ERS1_>:
                READ_BYTES_UNTIL_2 = 3
            };
            action_type action;
            std::coroutine_handle<> handle; 
        };
        async_input_impl(scheduler_t & m_scheduler):sheduler_getter<scheduler_t>(m_scheduler){
    20c2:	cf 93       	push	r28
    20c4:	df 93       	push	r29
    20c6:	00 d0       	rcall	.+0      	; 0x20c8 <L0^A>

000020c8 <L0^A>:
    20c8:	00 d0       	rcall	.+0      	; 0x20ca <L0^A>

000020ca <L0^A>:
    20ca:	cd b7       	in	r28, 0x3d	; 61
    20cc:	de b7       	in	r29, 0x3e	; 62
    20ce:	9a 83       	std	Y+2, r25	; 0x02
    20d0:	89 83       	std	Y+1, r24	; 0x01
    20d2:	7c 83       	std	Y+4, r23	; 0x04
    20d4:	6b 83       	std	Y+3, r22	; 0x03

000020d6 <.Loc.537>:
    20d6:	2b 81       	ldd	r18, Y+3	; 0x03
    20d8:	3c 81       	ldd	r19, Y+4	; 0x04
    20da:	89 81       	ldd	r24, Y+1	; 0x01
    20dc:	9a 81       	ldd	r25, Y+2	; 0x02
    20de:	b9 01       	movw	r22, r18
    20e0:	0e 94 71 19 	call	0x32e2	; 0x32e2 <_ZN10asyncruino15sheduler_getterINS_9schedulerEEC1ERS1_>
    20e4:	89 81       	ldd	r24, Y+1	; 0x01
    20e6:	9a 81       	ldd	r25, Y+2	; 0x02
    20e8:	0e 94 83 19 	call	0x3306	; 0x3306 <_ZN10asyncruino4pipeIchLh32EEC1Ev>
    20ec:	89 81       	ldd	r24, Y+1	; 0x01
    20ee:	9a 81       	ldd	r25, Y+2	; 0x02
    20f0:	88 96       	adiw	r24, 0x28	; 40
    20f2:	0e 94 0d 01 	call	0x21a	; 0x21a <_ZN10asyncruino13default_guardC1Ev>
    20f6:	89 81       	ldd	r24, Y+1	; 0x01
    20f8:	9a 81       	ldd	r25, Y+2	; 0x02
    20fa:	8a 96       	adiw	r24, 0x2a	; 42
    20fc:	0e 94 aa 19 	call	0x3354	; 0x3354 <_ZN10asyncruino8optionalINS_16async_input_implINS_9schedulerENS_13default_guardEhLh32EE9coro_dataEEC1Ev>

00002100 <.Loc.538>:
            match_length = 0;
    2100:	89 81       	ldd	r24, Y+1	; 0x01
    2102:	9a 81       	ldd	r25, Y+2	; 0x02
    2104:	fc 01       	movw	r30, r24
    2106:	17 a2       	std	Z+39, r1	; 0x27

00002108 <.Loc.539>:
        }
    2108:	00 00       	nop
    210a:	0f 90       	pop	r0
    210c:	0f 90       	pop	r0
    210e:	0f 90       	pop	r0
    2110:	0f 90       	pop	r0
    2112:	df 91       	pop	r29
    2114:	cf 91       	pop	r28
    2116:	08 95       	ret

00002118 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhEC1ERS1_RS2_>:
            };
            action_type action;
            std::coroutine_handle<> handle; 
        };
        optional<coro_data> m_waitor;
        async_output_impl(scheduler_t & m_shed,writer_impl_t & m_writer):
    2118:	cf 93       	push	r28
    211a:	df 93       	push	r29
    211c:	00 d0       	rcall	.+0      	; 0x211e <L0^A>

0000211e <L0^A>:
    211e:	00 d0       	rcall	.+0      	; 0x2120 <L0^A>

00002120 <L0^A>:
    2120:	00 d0       	rcall	.+0      	; 0x2122 <L0^A>

00002122 <L0^A>:
    2122:	cd b7       	in	r28, 0x3d	; 61
    2124:	de b7       	in	r29, 0x3e	; 62
    2126:	9a 83       	std	Y+2, r25	; 0x02
    2128:	89 83       	std	Y+1, r24	; 0x01
    212a:	7c 83       	std	Y+4, r23	; 0x04
    212c:	6b 83       	std	Y+3, r22	; 0x03
    212e:	5e 83       	std	Y+6, r21	; 0x06
    2130:	4d 83       	std	Y+5, r20	; 0x05

00002132 <.Loc.541>:
            sheduler_getter<scheduler_t>(m_shed),m_writer(&m_writer){}
    2132:	2b 81       	ldd	r18, Y+3	; 0x03
    2134:	3c 81       	ldd	r19, Y+4	; 0x04
    2136:	89 81       	ldd	r24, Y+1	; 0x01
    2138:	9a 81       	ldd	r25, Y+2	; 0x02
    213a:	b9 01       	movw	r22, r18
    213c:	0e 94 71 19 	call	0x32e2	; 0x32e2 <_ZN10asyncruino15sheduler_getterINS_9schedulerEEC1ERS1_>

00002140 <.Loc.542>:
    2140:	89 81       	ldd	r24, Y+1	; 0x01
    2142:	9a 81       	ldd	r25, Y+2	; 0x02
    2144:	2d 81       	ldd	r18, Y+5	; 0x05
    2146:	3e 81       	ldd	r19, Y+6	; 0x06
    2148:	fc 01       	movw	r30, r24
    214a:	31 83       	std	Z+1, r19	; 0x01
    214c:	20 83       	st	Z, r18

0000214e <.Loc.543>:
    214e:	89 81       	ldd	r24, Y+1	; 0x01
    2150:	9a 81       	ldd	r25, Y+2	; 0x02
    2152:	02 96       	adiw	r24, 0x02	; 2
    2154:	0e 94 0d 01 	call	0x21a	; 0x21a <_ZN10asyncruino13default_guardC1Ev>
    2158:	89 81       	ldd	r24, Y+1	; 0x01
    215a:	9a 81       	ldd	r25, Y+2	; 0x02
    215c:	08 96       	adiw	r24, 0x08	; 8
    215e:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <_ZN10asyncruino8optionalINS_17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE9coro_dataEEC1Ev>

00002162 <.Loc.544>:
    2162:	00 00       	nop
    2164:	0f 90       	pop	r0
    2166:	0f 90       	pop	r0
    2168:	0f 90       	pop	r0
    216a:	0f 90       	pop	r0
    216c:	0f 90       	pop	r0
    216e:	0f 90       	pop	r0
    2170:	df 91       	pop	r29
    2172:	cf 91       	pop	r28
    2174:	08 95       	ret

00002176 <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE8ReadByteEv>:
        read_byte_awaitor ReadByte(){
    2176:	cf 93       	push	r28
    2178:	df 93       	push	r29
    217a:	cd b7       	in	r28, 0x3d	; 61
    217c:	de b7       	in	r29, 0x3e	; 62
    217e:	2a 97       	sbiw	r28, 0x0a	; 10
    2180:	0f b6       	in	r0, 0x3f	; 63
    2182:	f8 94       	cli
    2184:	de bf       	out	0x3e, r29	; 62
    2186:	0f be       	out	0x3f, r0	; 63
    2188:	cd bf       	out	0x3d, r28	; 61
    218a:	9e 83       	std	Y+6, r25	; 0x06
    218c:	8d 83       	std	Y+5, r24	; 0x05

0000218e <.Loc.546>:
            return read_byte_awaitor(*this);
    218e:	8d 81       	ldd	r24, Y+5	; 0x05
    2190:	9e 81       	ldd	r25, Y+6	; 0x06
    2192:	bc 01       	movw	r22, r24
    2194:	ce 01       	movw	r24, r28
    2196:	01 96       	adiw	r24, 0x01	; 1
    2198:	0e 94 e6 19 	call	0x33cc	; 0x33cc <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE17read_byte_awaitorC1ERS3_>

0000219c <.Loc.547>:
    219c:	89 81       	ldd	r24, Y+1	; 0x01
    219e:	9a 81       	ldd	r25, Y+2	; 0x02
    21a0:	ab 81       	ldd	r26, Y+3	; 0x03
    21a2:	bc 81       	ldd	r27, Y+4	; 0x04
    21a4:	8f 83       	std	Y+7, r24	; 0x07
    21a6:	98 87       	std	Y+8, r25	; 0x08
    21a8:	a9 87       	std	Y+9, r26	; 0x09
    21aa:	ba 87       	std	Y+10, r27	; 0x0a

000021ac <.Loc.548>:
        }
    21ac:	6f 81       	ldd	r22, Y+7	; 0x07
    21ae:	78 85       	ldd	r23, Y+8	; 0x08
    21b0:	89 85       	ldd	r24, Y+9	; 0x09
    21b2:	9a 85       	ldd	r25, Y+10	; 0x0a
    21b4:	2a 96       	adiw	r28, 0x0a	; 10
    21b6:	0f b6       	in	r0, 0x3f	; 63
    21b8:	f8 94       	cli
    21ba:	de bf       	out	0x3e, r29	; 62
    21bc:	0f be       	out	0x3f, r0	; 63
    21be:	cd bf       	out	0x3d, r28	; 61
    21c0:	df 91       	pop	r29
    21c2:	cf 91       	pop	r28
    21c4:	08 95       	ret

000021c6 <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE14ReadBytesUntilEPchc>:
        read_bytes_until_awaitor<1> ReadBytesUntil(char * dest,size_type n_bytes,char escape_symbol){
    21c6:	0f 93       	push	r16
    21c8:	1f 93       	push	r17
    21ca:	cf 93       	push	r28
    21cc:	df 93       	push	r29
    21ce:	cd b7       	in	r28, 0x3d	; 61
    21d0:	de b7       	in	r29, 0x3e	; 62
    21d2:	28 97       	sbiw	r28, 0x08	; 8
    21d4:	0f b6       	in	r0, 0x3f	; 63
    21d6:	f8 94       	cli
    21d8:	de bf       	out	0x3e, r29	; 62
    21da:	0f be       	out	0x3f, r0	; 63
    21dc:	cd bf       	out	0x3d, r28	; 61
    21de:	9a 83       	std	Y+2, r25	; 0x02
    21e0:	89 83       	std	Y+1, r24	; 0x01
    21e2:	7c 83       	std	Y+4, r23	; 0x04
    21e4:	6b 83       	std	Y+3, r22	; 0x03
    21e6:	5e 83       	std	Y+6, r21	; 0x06
    21e8:	4d 83       	std	Y+5, r20	; 0x05
    21ea:	2f 83       	std	Y+7, r18	; 0x07
    21ec:	08 87       	std	Y+8, r16	; 0x08

000021ee <.Loc.550>:
            return read_bytes_until_awaitor<1>(*this,dest,n_bytes,&escape_symbol);
    21ee:	9e 01       	movw	r18, r28
    21f0:	28 5f       	subi	r18, 0xF8	; 248
    21f2:	3f 4f       	sbci	r19, 0xFF	; 255
    21f4:	4d 81       	ldd	r20, Y+5	; 0x05
    21f6:	5e 81       	ldd	r21, Y+6	; 0x06
    21f8:	6b 81       	ldd	r22, Y+3	; 0x03
    21fa:	7c 81       	ldd	r23, Y+4	; 0x04
    21fc:	89 81       	ldd	r24, Y+1	; 0x01
    21fe:	9a 81       	ldd	r25, Y+2	; 0x02
    2200:	89 01       	movw	r16, r18
    2202:	2f 81       	ldd	r18, Y+7	; 0x07
    2204:	0e 94 18 1a 	call	0x3430	; 0x3430 <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE24read_bytes_until_awaitorILh1EEC1ERS3_PchPKc>

00002208 <.Loc.551>:
        }
    2208:	89 81       	ldd	r24, Y+1	; 0x01
    220a:	9a 81       	ldd	r25, Y+2	; 0x02
    220c:	28 96       	adiw	r28, 0x08	; 8
    220e:	0f b6       	in	r0, 0x3f	; 63
    2210:	f8 94       	cli
    2212:	de bf       	out	0x3e, r29	; 62
    2214:	0f be       	out	0x3f, r0	; 63
    2216:	cd bf       	out	0x3d, r28	; 61
    2218:	df 91       	pop	r29
    221a:	cf 91       	pop	r28
    221c:	1f 91       	pop	r17
    221e:	0f 91       	pop	r16
    2220:	08 95       	ret

00002222 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE9WriteByteEc>:
                m_input->m_guard.unlock();
            }

        };
        public:
        write_byte_awaitor WriteByte(char c){
    2222:	cf 93       	push	r28
    2224:	df 93       	push	r29
    2226:	cd b7       	in	r28, 0x3d	; 61
    2228:	de b7       	in	r29, 0x3e	; 62
    222a:	2b 97       	sbiw	r28, 0x0b	; 11
    222c:	0f b6       	in	r0, 0x3f	; 63
    222e:	f8 94       	cli
    2230:	de bf       	out	0x3e, r29	; 62
    2232:	0f be       	out	0x3f, r0	; 63
    2234:	cd bf       	out	0x3d, r28	; 61
    2236:	9e 83       	std	Y+6, r25	; 0x06
    2238:	8d 83       	std	Y+5, r24	; 0x05
    223a:	6f 83       	std	Y+7, r22	; 0x07

0000223c <.Loc.553>:
            return write_byte_awaitor(*this,c);
    223c:	8d 81       	ldd	r24, Y+5	; 0x05
    223e:	9e 81       	ldd	r25, Y+6	; 0x06
    2240:	4f 81       	ldd	r20, Y+7	; 0x07
    2242:	bc 01       	movw	r22, r24
    2244:	ce 01       	movw	r24, r28
    2246:	01 96       	adiw	r24, 0x01	; 1
    2248:	0e 94 8c 1a 	call	0x3518	; 0x3518 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE18write_byte_awaitorC1ERS4_c>

0000224c <.Loc.554>:
    224c:	89 81       	ldd	r24, Y+1	; 0x01
    224e:	9a 81       	ldd	r25, Y+2	; 0x02
    2250:	ab 81       	ldd	r26, Y+3	; 0x03
    2252:	bc 81       	ldd	r27, Y+4	; 0x04
    2254:	88 87       	std	Y+8, r24	; 0x08
    2256:	99 87       	std	Y+9, r25	; 0x09
    2258:	aa 87       	std	Y+10, r26	; 0x0a
    225a:	bb 87       	std	Y+11, r27	; 0x0b

0000225c <.Loc.555>:
        }
    225c:	68 85       	ldd	r22, Y+8	; 0x08
    225e:	79 85       	ldd	r23, Y+9	; 0x09
    2260:	8a 85       	ldd	r24, Y+10	; 0x0a
    2262:	9b 85       	ldd	r25, Y+11	; 0x0b
    2264:	2b 96       	adiw	r28, 0x0b	; 11
    2266:	0f b6       	in	r0, 0x3f	; 63
    2268:	f8 94       	cli
    226a:	de bf       	out	0x3e, r29	; 62
    226c:	0f be       	out	0x3f, r0	; 63
    226e:	cd bf       	out	0x3d, r28	; 61
    2270:	df 91       	pop	r29
    2272:	cf 91       	pop	r28
    2274:	08 95       	ret

00002276 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE10WriteBytesEPKch>:
        write_bytes_awaitor WriteBytes(const char* S,size_type _size){
    2276:	8f 92       	push	r8
    2278:	9f 92       	push	r9
    227a:	af 92       	push	r10
    227c:	bf 92       	push	r11
    227e:	cf 92       	push	r12
    2280:	df 92       	push	r13
    2282:	ef 92       	push	r14
    2284:	ff 92       	push	r15
    2286:	cf 93       	push	r28
    2288:	df 93       	push	r29
    228a:	cd b7       	in	r28, 0x3d	; 61
    228c:	de b7       	in	r29, 0x3e	; 62
    228e:	69 97       	sbiw	r28, 0x19	; 25
    2290:	0f b6       	in	r0, 0x3f	; 63
    2292:	f8 94       	cli
    2294:	de bf       	out	0x3e, r29	; 62
    2296:	0f be       	out	0x3f, r0	; 63
    2298:	cd bf       	out	0x3d, r28	; 61
    229a:	9e 87       	std	Y+14, r25	; 0x0e
    229c:	8d 87       	std	Y+13, r24	; 0x0d
    229e:	78 8b       	std	Y+16, r23	; 0x10
    22a0:	6f 87       	std	Y+15, r22	; 0x0f
    22a2:	49 8b       	std	Y+17, r20	; 0x11

000022a4 <.Loc.557>:
            return write_bytes_awaitor(*this,S,_size);
    22a4:	4f 85       	ldd	r20, Y+15	; 0x0f
    22a6:	58 89       	ldd	r21, Y+16	; 0x10
    22a8:	8d 85       	ldd	r24, Y+13	; 0x0d
    22aa:	9e 85       	ldd	r25, Y+14	; 0x0e
    22ac:	29 89       	ldd	r18, Y+17	; 0x11
    22ae:	bc 01       	movw	r22, r24
    22b0:	ce 01       	movw	r24, r28
    22b2:	01 96       	adiw	r24, 0x01	; 1
    22b4:	0e 94 cc 1a 	call	0x3598	; 0x3598 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE19write_bytes_awaitorC1ERS4_PKch>

000022b8 <.Loc.558>:
    22b8:	26 e0       	ldi	r18, 0x06	; 6
    22ba:	ce 01       	movw	r24, r28
    22bc:	01 96       	adiw	r24, 0x01	; 1
    22be:	fc 01       	movw	r30, r24
    22c0:	de 01       	movw	r26, r28
    22c2:	17 96       	adiw	r26, 0x07	; 7

000022c4 <.L^B2>:
    22c4:	01 90       	ld	r0, Z+
    22c6:	0d 92       	st	X+, r0
    22c8:	2a 95       	dec	r18
    22ca:	e1 f7       	brne	.-8      	; 0x22c4 <.L^B2>
    22cc:	50 e0       	ldi	r21, 0x00	; 0
    22ce:	5f 81       	ldd	r21, Y+7	; 0x07
    22d0:	40 e0       	ldi	r20, 0x00	; 0
    22d2:	48 85       	ldd	r20, Y+8	; 0x08
    22d4:	30 e0       	ldi	r19, 0x00	; 0
    22d6:	39 85       	ldd	r19, Y+9	; 0x09
    22d8:	20 e0       	ldi	r18, 0x00	; 0
    22da:	2a 85       	ldd	r18, Y+10	; 0x0a
    22dc:	90 e0       	ldi	r25, 0x00	; 0
    22de:	9b 85       	ldd	r25, Y+11	; 0x0b
    22e0:	80 e0       	ldi	r24, 0x00	; 0
    22e2:	8c 85       	ldd	r24, Y+12	; 0x0c
    22e4:	5a 8b       	std	Y+18, r21	; 0x12
    22e6:	4b 8b       	std	Y+19, r20	; 0x13
    22e8:	3c 8b       	std	Y+20, r19	; 0x14
    22ea:	2d 8b       	std	Y+21, r18	; 0x15
    22ec:	9e 8b       	std	Y+22, r25	; 0x16
    22ee:	8f 8b       	std	Y+23, r24	; 0x17
    22f0:	8a 88       	ldd	r8, Y+18	; 0x12
    22f2:	9b 88       	ldd	r9, Y+19	; 0x13
    22f4:	ac 88       	ldd	r10, Y+20	; 0x14
    22f6:	bd 88       	ldd	r11, Y+21	; 0x15
    22f8:	ce 88       	ldd	r12, Y+22	; 0x16
    22fa:	df 88       	ldd	r13, Y+23	; 0x17
    22fc:	e8 8c       	ldd	r14, Y+24	; 0x18
    22fe:	f9 8c       	ldd	r15, Y+25	; 0x19

00002300 <.Loc.559>:
        }
    2300:	28 2d       	mov	r18, r8
    2302:	39 2d       	mov	r19, r9
    2304:	4a 2d       	mov	r20, r10
    2306:	5b 2d       	mov	r21, r11
    2308:	6c 2d       	mov	r22, r12
    230a:	7d 2d       	mov	r23, r13
    230c:	8e 2d       	mov	r24, r14
    230e:	9f 2d       	mov	r25, r15
    2310:	69 96       	adiw	r28, 0x19	; 25
    2312:	0f b6       	in	r0, 0x3f	; 63
    2314:	f8 94       	cli
    2316:	de bf       	out	0x3e, r29	; 62
    2318:	0f be       	out	0x3f, r0	; 63
    231a:	cd bf       	out	0x3d, r28	; 61
    231c:	df 91       	pop	r29
    231e:	cf 91       	pop	r28
    2320:	ff 90       	pop	r15
    2322:	ef 90       	pop	r14
    2324:	df 90       	pop	r13
    2326:	cf 90       	pop	r12
    2328:	bf 90       	pop	r11
    232a:	af 90       	pop	r10
    232c:	9f 90       	pop	r9
    232e:	8f 90       	pop	r8
    2330:	08 95       	ret

00002332 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE10WriteBytesEPKc>:
		write_bytes_awaitor WriteBytes(const char* S){
    2332:	8f 92       	push	r8
    2334:	9f 92       	push	r9
    2336:	af 92       	push	r10
    2338:	bf 92       	push	r11
    233a:	cf 92       	push	r12
    233c:	df 92       	push	r13
    233e:	ef 92       	push	r14
    2340:	ff 92       	push	r15
    2342:	cf 93       	push	r28
    2344:	df 93       	push	r29
    2346:	cd b7       	in	r28, 0x3d	; 61
    2348:	de b7       	in	r29, 0x3e	; 62
    234a:	69 97       	sbiw	r28, 0x19	; 25
    234c:	0f b6       	in	r0, 0x3f	; 63
    234e:	f8 94       	cli
    2350:	de bf       	out	0x3e, r29	; 62
    2352:	0f be       	out	0x3f, r0	; 63
    2354:	cd bf       	out	0x3d, r28	; 61
    2356:	9f 87       	std	Y+15, r25	; 0x0f
    2358:	8e 87       	std	Y+14, r24	; 0x0e
    235a:	79 8b       	std	Y+17, r23	; 0x11
    235c:	68 8b       	std	Y+16, r22	; 0x10

0000235e <.Loc.561>:
			size_type i = 0;
    235e:	19 82       	std	Y+1, r1	; 0x01

00002360 <.Loc.562>:
			for(;S[i] != 0;++i){}
    2360:	03 c0       	rjmp	.+6      	; 0x2368 <.L245>

00002362 <.L246>:
    2362:	89 81       	ldd	r24, Y+1	; 0x01
    2364:	8f 5f       	subi	r24, 0xFF	; 255
    2366:	89 83       	std	Y+1, r24	; 0x01

00002368 <.L245>:
    2368:	89 81       	ldd	r24, Y+1	; 0x01
    236a:	88 2f       	mov	r24, r24
    236c:	90 e0       	ldi	r25, 0x00	; 0

0000236e <.Loc.565>:
    236e:	28 89       	ldd	r18, Y+16	; 0x10
    2370:	39 89       	ldd	r19, Y+17	; 0x11
    2372:	82 0f       	add	r24, r18
    2374:	93 1f       	adc	r25, r19
    2376:	fc 01       	movw	r30, r24
    2378:	80 81       	ld	r24, Z

0000237a <.Loc.566>:
    237a:	88 23       	and	r24, r24
    237c:	91 f7       	brne	.-28     	; 0x2362 <.L246>

0000237e <.Loc.567>:
			return write_bytes_awaitor(*this,S,i);
    237e:	48 89       	ldd	r20, Y+16	; 0x10
    2380:	59 89       	ldd	r21, Y+17	; 0x11
    2382:	6e 85       	ldd	r22, Y+14	; 0x0e
    2384:	7f 85       	ldd	r23, Y+15	; 0x0f
    2386:	ce 01       	movw	r24, r28
    2388:	02 96       	adiw	r24, 0x02	; 2
    238a:	29 81       	ldd	r18, Y+1	; 0x01
    238c:	0e 94 cc 1a 	call	0x3598	; 0x3598 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE19write_bytes_awaitorC1ERS4_PKch>

00002390 <.Loc.568>:
    2390:	86 e0       	ldi	r24, 0x06	; 6
    2392:	fe 01       	movw	r30, r28
    2394:	32 96       	adiw	r30, 0x02	; 2
    2396:	de 01       	movw	r26, r28
    2398:	18 96       	adiw	r26, 0x08	; 8

0000239a <.L^B3>:
    239a:	01 90       	ld	r0, Z+
    239c:	0d 92       	st	X+, r0
    239e:	8a 95       	dec	r24
    23a0:	e1 f7       	brne	.-8      	; 0x239a <.L^B3>
    23a2:	50 e0       	ldi	r21, 0x00	; 0
    23a4:	58 85       	ldd	r21, Y+8	; 0x08
    23a6:	40 e0       	ldi	r20, 0x00	; 0
    23a8:	49 85       	ldd	r20, Y+9	; 0x09
    23aa:	30 e0       	ldi	r19, 0x00	; 0
    23ac:	3a 85       	ldd	r19, Y+10	; 0x0a
    23ae:	20 e0       	ldi	r18, 0x00	; 0
    23b0:	2b 85       	ldd	r18, Y+11	; 0x0b
    23b2:	90 e0       	ldi	r25, 0x00	; 0
    23b4:	9c 85       	ldd	r25, Y+12	; 0x0c
    23b6:	80 e0       	ldi	r24, 0x00	; 0
    23b8:	8d 85       	ldd	r24, Y+13	; 0x0d
    23ba:	5a 8b       	std	Y+18, r21	; 0x12
    23bc:	4b 8b       	std	Y+19, r20	; 0x13
    23be:	3c 8b       	std	Y+20, r19	; 0x14
    23c0:	2d 8b       	std	Y+21, r18	; 0x15
    23c2:	9e 8b       	std	Y+22, r25	; 0x16
    23c4:	8f 8b       	std	Y+23, r24	; 0x17
    23c6:	8a 88       	ldd	r8, Y+18	; 0x12
    23c8:	9b 88       	ldd	r9, Y+19	; 0x13
    23ca:	ac 88       	ldd	r10, Y+20	; 0x14
    23cc:	bd 88       	ldd	r11, Y+21	; 0x15
    23ce:	ce 88       	ldd	r12, Y+22	; 0x16
    23d0:	df 88       	ldd	r13, Y+23	; 0x17
    23d2:	e8 8c       	ldd	r14, Y+24	; 0x18
    23d4:	f9 8c       	ldd	r15, Y+25	; 0x19

000023d6 <.Loc.569>:
		}
    23d6:	28 2d       	mov	r18, r8
    23d8:	39 2d       	mov	r19, r9
    23da:	4a 2d       	mov	r20, r10
    23dc:	5b 2d       	mov	r21, r11
    23de:	6c 2d       	mov	r22, r12
    23e0:	7d 2d       	mov	r23, r13
    23e2:	8e 2d       	mov	r24, r14
    23e4:	9f 2d       	mov	r25, r15
    23e6:	69 96       	adiw	r28, 0x19	; 25
    23e8:	0f b6       	in	r0, 0x3f	; 63
    23ea:	f8 94       	cli
    23ec:	de bf       	out	0x3e, r29	; 62
    23ee:	0f be       	out	0x3f, r0	; 63
    23f0:	cd bf       	out	0x3d, r28	; 61
    23f2:	df 91       	pop	r29
    23f4:	cf 91       	pop	r28
    23f6:	ff 90       	pop	r15
    23f8:	ef 90       	pop	r14
    23fa:	df 90       	pop	r13
    23fc:	cf 90       	pop	r12
    23fe:	bf 90       	pop	r11
    2400:	af 90       	pop	r10
    2402:	9f 90       	pop	r9
    2404:	8f 90       	pop	r8
    2406:	08 95       	ret

00002408 <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE9interruptEc>:
        void interrupt(char c){
    2408:	cf 93       	push	r28
    240a:	df 93       	push	r29
    240c:	cd b7       	in	r28, 0x3d	; 61
    240e:	de b7       	in	r29, 0x3e	; 62
    2410:	2b 97       	sbiw	r28, 0x0b	; 11
    2412:	0f b6       	in	r0, 0x3f	; 63
    2414:	f8 94       	cli
    2416:	de bf       	out	0x3e, r29	; 62
    2418:	0f be       	out	0x3f, r0	; 63
    241a:	cd bf       	out	0x3d, r28	; 61
    241c:	9a 87       	std	Y+10, r25	; 0x0a
    241e:	89 87       	std	Y+9, r24	; 0x09
    2420:	6b 87       	std	Y+11, r22	; 0x0b

00002422 <.Loc.571>:
            if(!m_waitor){
    2422:	89 85       	ldd	r24, Y+9	; 0x09
    2424:	9a 85       	ldd	r25, Y+10	; 0x0a
    2426:	8a 96       	adiw	r24, 0x2a	; 42
    2428:	0e 94 30 1b 	call	0x3660	; 0x3660 <_ZNK10asyncruino8optionalINS_16async_input_implINS_9schedulerENS_13default_guardEhLh32EE9coro_dataEEcvbEv>
    242c:	98 2f       	mov	r25, r24
    242e:	81 e0       	ldi	r24, 0x01	; 1
    2430:	89 27       	eor	r24, r25

00002432 <.Loc.572>:
    2432:	88 23       	and	r24, r24
    2434:	49 f0       	breq	.+18     	; 0x2448 <.L249>

00002436 <.Loc.573>:
                m_buf.write(c);
    2436:	89 85       	ldd	r24, Y+9	; 0x09
    2438:	9a 85       	ldd	r25, Y+10	; 0x0a
    243a:	9e 01       	movw	r18, r28
    243c:	25 5f       	subi	r18, 0xF5	; 245
    243e:	3f 4f       	sbci	r19, 0xFF	; 255
    2440:	b9 01       	movw	r22, r18
    2442:	0e 94 40 1b 	call	0x3680	; 0x3680 <_ZN10asyncruino4pipeIchLh32EE5writeERKc>

00002446 <.Loc.574>:
        }
    2446:	23 c1       	rjmp	.+582    	; 0x268e <.L250>

00002448 <.L249>:
                switch (m_waitor.value.action)
    2448:	89 85       	ldd	r24, Y+9	; 0x09
    244a:	9a 85       	ldd	r25, Y+10	; 0x0a
    244c:	fc 01       	movw	r30, r24
    244e:	82 a5       	ldd	r24, Z+42	; 0x2a
    2450:	88 2f       	mov	r24, r24
    2452:	90 e0       	ldi	r25, 0x00	; 0

00002454 <.Loc.576>:
    2454:	83 30       	cpi	r24, 0x03	; 3
    2456:	91 05       	cpc	r25, r1
    2458:	09 f4       	brne	.+2      	; 0x245c <L0^A+0x2>

0000245a <L0^A>:
    245a:	b2 c0       	rjmp	.+356    	; 0x25c0 <.L251>
    245c:	83 30       	cpi	r24, 0x03	; 3
    245e:	91 05       	cpc	r25, r1
    2460:	11 f0       	breq	.+4      	; 0x2466 <L0^A+0x2>

00002462 <L0^A>:
    2462:	0c f0       	brlt	.+2      	; 0x2466 <L0^A+0x2>

00002464 <L0^A>:
    2464:	11 c1       	rjmp	.+546    	; 0x2688 <.L264>
    2466:	82 30       	cpi	r24, 0x02	; 2
    2468:	91 05       	cpc	r25, r1
    246a:	09 f4       	brne	.+2      	; 0x246e <L0^A+0x2>

0000246c <L0^A>:
    246c:	65 c0       	rjmp	.+202    	; 0x2538 <.L253>
    246e:	82 30       	cpi	r24, 0x02	; 2
    2470:	91 05       	cpc	r25, r1
    2472:	11 f0       	breq	.+4      	; 0x2478 <L0^A+0x2>

00002474 <L0^A>:
    2474:	0c f0       	brlt	.+2      	; 0x2478 <L0^A+0x2>

00002476 <L0^A>:
    2476:	08 c1       	rjmp	.+528    	; 0x2688 <.L264>
    2478:	00 97       	sbiw	r24, 0x00	; 0
    247a:	21 f0       	breq	.+8      	; 0x2484 <.L254>
    247c:	81 30       	cpi	r24, 0x01	; 1
    247e:	91 05       	cpc	r25, r1
    2480:	f9 f0       	breq	.+62     	; 0x24c0 <.L255>

00002482 <.Loc.577>:
                    break;
    2482:	02 c1       	rjmp	.+516    	; 0x2688 <.L264>

00002484 <.L254>:
                    auto m_c_handle = m_waitor.value.handle;
    2484:	89 85       	ldd	r24, Y+9	; 0x09
    2486:	9a 85       	ldd	r25, Y+10	; 0x0a
    2488:	fc 01       	movw	r30, r24
    248a:	83 a5       	ldd	r24, Z+43	; 0x2b
    248c:	94 a5       	ldd	r25, Z+44	; 0x2c
    248e:	9a 83       	std	Y+2, r25	; 0x02
    2490:	89 83       	std	Y+1, r24	; 0x01

00002492 <.Loc.579>:
                    m_waitor.reset();
    2492:	89 85       	ldd	r24, Y+9	; 0x09
    2494:	9a 85       	ldd	r25, Y+10	; 0x0a
    2496:	8a 96       	adiw	r24, 0x2a	; 42
    2498:	0e 94 82 1b 	call	0x3704	; 0x3704 <_ZN10asyncruino8optionalINS_16async_input_implINS_9schedulerENS_13default_guardEhLh32EE9coro_dataEE5resetEv>

0000249c <.Loc.580>:
                    m_buf.write(c);
    249c:	89 85       	ldd	r24, Y+9	; 0x09
    249e:	9a 85       	ldd	r25, Y+10	; 0x0a
    24a0:	9e 01       	movw	r18, r28
    24a2:	25 5f       	subi	r18, 0xF5	; 245
    24a4:	3f 4f       	sbci	r19, 0xFF	; 255
    24a6:	b9 01       	movw	r22, r18
    24a8:	0e 94 40 1b 	call	0x3680	; 0x3680 <_ZN10asyncruino4pipeIchLh32EE5writeERKc>

000024ac <.Loc.581>:
                    this->_get_sheduler().push_task(m_c_handle);
    24ac:	0e 94 93 1b 	call	0x3726	; 0x3726 <_ZN10asyncruino15sheduler_getterINS_9schedulerEE13_get_shedulerEv>

000024b0 <.Loc.582>:
    24b0:	9c 01       	movw	r18, r24
    24b2:	89 81       	ldd	r24, Y+1	; 0x01
    24b4:	9a 81       	ldd	r25, Y+2	; 0x02
    24b6:	bc 01       	movw	r22, r24
    24b8:	c9 01       	movw	r24, r18
    24ba:	0e 94 9c 1b 	call	0x3738	; 0x3738 <_ZN10asyncruino14scheduler_implINS_13default_guardELj32EE9push_taskENSt7__n486116coroutine_handleIvEE>

000024be <.Loc.583>:
                    break;
    24be:	e7 c0       	rjmp	.+462    	; 0x268e <.L250>

000024c0 <.L255>:
                    *buffer_out = c;
    24c0:	89 85       	ldd	r24, Y+9	; 0x09
    24c2:	9a 85       	ldd	r25, Y+10	; 0x0a
    24c4:	fc 01       	movw	r30, r24
    24c6:	82 a1       	ldd	r24, Z+34	; 0x22
    24c8:	93 a1       	ldd	r25, Z+35	; 0x23

000024ca <.Loc.585>:
    24ca:	2b 85       	ldd	r18, Y+11	; 0x0b
    24cc:	fc 01       	movw	r30, r24
    24ce:	20 83       	st	Z, r18

000024d0 <.Loc.586>:
                    buffer_out++;
    24d0:	89 85       	ldd	r24, Y+9	; 0x09
    24d2:	9a 85       	ldd	r25, Y+10	; 0x0a
    24d4:	fc 01       	movw	r30, r24
    24d6:	82 a1       	ldd	r24, Z+34	; 0x22
    24d8:	93 a1       	ldd	r25, Z+35	; 0x23
    24da:	9c 01       	movw	r18, r24
    24dc:	2f 5f       	subi	r18, 0xFF	; 255
    24de:	3f 4f       	sbci	r19, 0xFF	; 255
    24e0:	89 85       	ldd	r24, Y+9	; 0x09
    24e2:	9a 85       	ldd	r25, Y+10	; 0x0a
    24e4:	fc 01       	movw	r30, r24
    24e6:	33 a3       	std	Z+35, r19	; 0x23
    24e8:	22 a3       	std	Z+34, r18	; 0x22

000024ea <.Loc.587>:
                    remain_space--;
    24ea:	89 85       	ldd	r24, Y+9	; 0x09
    24ec:	9a 85       	ldd	r25, Y+10	; 0x0a
    24ee:	fc 01       	movw	r30, r24
    24f0:	84 a1       	ldd	r24, Z+36	; 0x24
    24f2:	2f ef       	ldi	r18, 0xFF	; 255
    24f4:	28 0f       	add	r18, r24
    24f6:	89 85       	ldd	r24, Y+9	; 0x09
    24f8:	9a 85       	ldd	r25, Y+10	; 0x0a
    24fa:	fc 01       	movw	r30, r24
    24fc:	24 a3       	std	Z+36, r18	; 0x24

000024fe <.Loc.588>:
                    if(!remain_space){
    24fe:	89 85       	ldd	r24, Y+9	; 0x09
    2500:	9a 85       	ldd	r25, Y+10	; 0x0a
    2502:	fc 01       	movw	r30, r24
    2504:	84 a1       	ldd	r24, Z+36	; 0x24

00002506 <.Loc.589>:
    2506:	88 23       	and	r24, r24
    2508:	09 f0       	breq	.+2      	; 0x250c <.LBB79>

0000250a <L0^A>:
    250a:	c0 c0       	rjmp	.+384    	; 0x268c <.L265>

0000250c <.LBB79>:
                        auto m_c_handle = m_waitor.value.handle;
    250c:	89 85       	ldd	r24, Y+9	; 0x09
    250e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2510:	fc 01       	movw	r30, r24
    2512:	83 a5       	ldd	r24, Z+43	; 0x2b
    2514:	94 a5       	ldd	r25, Z+44	; 0x2c
    2516:	9c 83       	std	Y+4, r25	; 0x04
    2518:	8b 83       	std	Y+3, r24	; 0x03

0000251a <.Loc.591>:
                        m_waitor.reset();
    251a:	89 85       	ldd	r24, Y+9	; 0x09
    251c:	9a 85       	ldd	r25, Y+10	; 0x0a
    251e:	8a 96       	adiw	r24, 0x2a	; 42
    2520:	0e 94 82 1b 	call	0x3704	; 0x3704 <_ZN10asyncruino8optionalINS_16async_input_implINS_9schedulerENS_13default_guardEhLh32EE9coro_dataEE5resetEv>

00002524 <.Loc.592>:
                        this->_get_sheduler().push_task(m_c_handle);
    2524:	0e 94 93 1b 	call	0x3726	; 0x3726 <_ZN10asyncruino15sheduler_getterINS_9schedulerEE13_get_shedulerEv>

00002528 <.Loc.593>:
    2528:	9c 01       	movw	r18, r24
    252a:	8b 81       	ldd	r24, Y+3	; 0x03
    252c:	9c 81       	ldd	r25, Y+4	; 0x04
    252e:	bc 01       	movw	r22, r24
    2530:	c9 01       	movw	r24, r18
    2532:	0e 94 9c 1b 	call	0x3738	; 0x3738 <_ZN10asyncruino14scheduler_implINS_13default_guardELj32EE9push_taskENSt7__n486116coroutine_handleIvEE>

00002536 <.LBE79>:
                    break;
    2536:	aa c0       	rjmp	.+340    	; 0x268c <.L265>

00002538 <.L253>:
                    *buffer_out = c;
    2538:	89 85       	ldd	r24, Y+9	; 0x09
    253a:	9a 85       	ldd	r25, Y+10	; 0x0a
    253c:	fc 01       	movw	r30, r24
    253e:	82 a1       	ldd	r24, Z+34	; 0x22
    2540:	93 a1       	ldd	r25, Z+35	; 0x23

00002542 <.Loc.596>:
    2542:	2b 85       	ldd	r18, Y+11	; 0x0b
    2544:	fc 01       	movw	r30, r24
    2546:	20 83       	st	Z, r18

00002548 <.Loc.597>:
                    remain_space--;
    2548:	89 85       	ldd	r24, Y+9	; 0x09
    254a:	9a 85       	ldd	r25, Y+10	; 0x0a
    254c:	fc 01       	movw	r30, r24
    254e:	84 a1       	ldd	r24, Z+36	; 0x24
    2550:	2f ef       	ldi	r18, 0xFF	; 255
    2552:	28 0f       	add	r18, r24
    2554:	89 85       	ldd	r24, Y+9	; 0x09
    2556:	9a 85       	ldd	r25, Y+10	; 0x0a
    2558:	fc 01       	movw	r30, r24
    255a:	24 a3       	std	Z+36, r18	; 0x24

0000255c <.Loc.598>:
                    if(!remain_space || c == control_seq[0]){
    255c:	89 85       	ldd	r24, Y+9	; 0x09
    255e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2560:	fc 01       	movw	r30, r24
    2562:	84 a1       	ldd	r24, Z+36	; 0x24

00002564 <.Loc.599>:
    2564:	88 23       	and	r24, r24
    2566:	39 f0       	breq	.+14     	; 0x2576 <.L257>

00002568 <.Loc.600>:
    2568:	89 85       	ldd	r24, Y+9	; 0x09
    256a:	9a 85       	ldd	r25, Y+10	; 0x0a
    256c:	fc 01       	movw	r30, r24
    256e:	95 a1       	ldd	r25, Z+37	; 0x25

00002570 <.Loc.601>:
    2570:	8b 85       	ldd	r24, Y+11	; 0x0b

00002572 <.Loc.602>:
    2572:	98 17       	cp	r25, r24
    2574:	b9 f4       	brne	.+46     	; 0x25a4 <.L258>

00002576 <.L257>:
                        auto m_c_handle = m_waitor.value.handle;
    2576:	89 85       	ldd	r24, Y+9	; 0x09
    2578:	9a 85       	ldd	r25, Y+10	; 0x0a
    257a:	fc 01       	movw	r30, r24
    257c:	83 a5       	ldd	r24, Z+43	; 0x2b
    257e:	94 a5       	ldd	r25, Z+44	; 0x2c
    2580:	9e 83       	std	Y+6, r25	; 0x06
    2582:	8d 83       	std	Y+5, r24	; 0x05

00002584 <.Loc.604>:
                        m_waitor.reset();
    2584:	89 85       	ldd	r24, Y+9	; 0x09
    2586:	9a 85       	ldd	r25, Y+10	; 0x0a
    2588:	8a 96       	adiw	r24, 0x2a	; 42
    258a:	0e 94 82 1b 	call	0x3704	; 0x3704 <_ZN10asyncruino8optionalINS_16async_input_implINS_9schedulerENS_13default_guardEhLh32EE9coro_dataEE5resetEv>

0000258e <.Loc.605>:
                        this->_get_sheduler().push_task(m_c_handle);
    258e:	0e 94 93 1b 	call	0x3726	; 0x3726 <_ZN10asyncruino15sheduler_getterINS_9schedulerEE13_get_shedulerEv>

00002592 <.Loc.606>:
    2592:	9c 01       	movw	r18, r24
    2594:	8d 81       	ldd	r24, Y+5	; 0x05
    2596:	9e 81       	ldd	r25, Y+6	; 0x06
    2598:	bc 01       	movw	r22, r24
    259a:	c9 01       	movw	r24, r18
    259c:	0e 94 9c 1b 	call	0x3738	; 0x3738 <_ZN10asyncruino14scheduler_implINS_13default_guardELj32EE9push_taskENSt7__n486116coroutine_handleIvEE>

000025a0 <.LBE82>:
	...

000025a2 <.Loc.608>:
                    break;
    25a2:	75 c0       	rjmp	.+234    	; 0x268e <.L250>

000025a4 <.L258>:
                        ++buffer_out;
    25a4:	89 85       	ldd	r24, Y+9	; 0x09
    25a6:	9a 85       	ldd	r25, Y+10	; 0x0a
    25a8:	fc 01       	movw	r30, r24
    25aa:	82 a1       	ldd	r24, Z+34	; 0x22
    25ac:	93 a1       	ldd	r25, Z+35	; 0x23

000025ae <.Loc.610>:
    25ae:	9c 01       	movw	r18, r24
    25b0:	2f 5f       	subi	r18, 0xFF	; 255
    25b2:	3f 4f       	sbci	r19, 0xFF	; 255
    25b4:	89 85       	ldd	r24, Y+9	; 0x09
    25b6:	9a 85       	ldd	r25, Y+10	; 0x0a
    25b8:	fc 01       	movw	r30, r24
    25ba:	33 a3       	std	Z+35, r19	; 0x23
    25bc:	22 a3       	std	Z+34, r18	; 0x22

000025be <.Loc.611>:
                    break;
    25be:	67 c0       	rjmp	.+206    	; 0x268e <.L250>

000025c0 <.L251>:
                    *buffer_out = c;
    25c0:	89 85       	ldd	r24, Y+9	; 0x09
    25c2:	9a 85       	ldd	r25, Y+10	; 0x0a
    25c4:	fc 01       	movw	r30, r24
    25c6:	82 a1       	ldd	r24, Z+34	; 0x22
    25c8:	93 a1       	ldd	r25, Z+35	; 0x23

000025ca <.Loc.613>:
    25ca:	2b 85       	ldd	r18, Y+11	; 0x0b
    25cc:	fc 01       	movw	r30, r24
    25ce:	20 83       	st	Z, r18

000025d0 <.Loc.614>:
                    ++buffer_out;
    25d0:	89 85       	ldd	r24, Y+9	; 0x09
    25d2:	9a 85       	ldd	r25, Y+10	; 0x0a
    25d4:	fc 01       	movw	r30, r24
    25d6:	82 a1       	ldd	r24, Z+34	; 0x22
    25d8:	93 a1       	ldd	r25, Z+35	; 0x23

000025da <.Loc.615>:
    25da:	9c 01       	movw	r18, r24
    25dc:	2f 5f       	subi	r18, 0xFF	; 255
    25de:	3f 4f       	sbci	r19, 0xFF	; 255
    25e0:	89 85       	ldd	r24, Y+9	; 0x09
    25e2:	9a 85       	ldd	r25, Y+10	; 0x0a
    25e4:	fc 01       	movw	r30, r24
    25e6:	33 a3       	std	Z+35, r19	; 0x23
    25e8:	22 a3       	std	Z+34, r18	; 0x22

000025ea <.Loc.616>:
                    remain_space--;
    25ea:	89 85       	ldd	r24, Y+9	; 0x09
    25ec:	9a 85       	ldd	r25, Y+10	; 0x0a
    25ee:	fc 01       	movw	r30, r24
    25f0:	84 a1       	ldd	r24, Z+36	; 0x24
    25f2:	2f ef       	ldi	r18, 0xFF	; 255
    25f4:	28 0f       	add	r18, r24
    25f6:	89 85       	ldd	r24, Y+9	; 0x09
    25f8:	9a 85       	ldd	r25, Y+10	; 0x0a
    25fa:	fc 01       	movw	r30, r24
    25fc:	24 a3       	std	Z+36, r18	; 0x24

000025fe <.Loc.617>:
                    if(!remain_space){
    25fe:	89 85       	ldd	r24, Y+9	; 0x09
    2600:	9a 85       	ldd	r25, Y+10	; 0x0a
    2602:	fc 01       	movw	r30, r24
    2604:	84 a1       	ldd	r24, Z+36	; 0x24

00002606 <.Loc.618>:
    2606:	88 23       	and	r24, r24
    2608:	31 f1       	breq	.+76     	; 0x2656 <.L266>

0000260a <.Loc.619>:
                    if(c == control_seq[match_length]){
    260a:	89 85       	ldd	r24, Y+9	; 0x09
    260c:	9a 85       	ldd	r25, Y+10	; 0x0a
    260e:	fc 01       	movw	r30, r24
    2610:	87 a1       	ldd	r24, Z+39	; 0x27
    2612:	88 2f       	mov	r24, r24
    2614:	90 e0       	ldi	r25, 0x00	; 0

00002616 <.Loc.620>:
    2616:	29 85       	ldd	r18, Y+9	; 0x09
    2618:	3a 85       	ldd	r19, Y+10	; 0x0a
    261a:	82 0f       	add	r24, r18
    261c:	93 1f       	adc	r25, r19
    261e:	85 96       	adiw	r24, 0x25	; 37
    2620:	fc 01       	movw	r30, r24
    2622:	90 81       	ld	r25, Z

00002624 <.Loc.621>:
    2624:	8b 85       	ldd	r24, Y+11	; 0x0b

00002626 <.Loc.622>:
    2626:	98 17       	cp	r25, r24
    2628:	89 f4       	brne	.+34     	; 0x264c <.L262>

0000262a <.Loc.623>:
                        if(match_length ==1){
    262a:	89 85       	ldd	r24, Y+9	; 0x09
    262c:	9a 85       	ldd	r25, Y+10	; 0x0a
    262e:	fc 01       	movw	r30, r24
    2630:	87 a1       	ldd	r24, Z+39	; 0x27

00002632 <.Loc.624>:
    2632:	81 30       	cpi	r24, 0x01	; 1
    2634:	91 f0       	breq	.+36     	; 0x265a <.L267>

00002636 <.Loc.625>:
                            match_length++;
    2636:	89 85       	ldd	r24, Y+9	; 0x09
    2638:	9a 85       	ldd	r25, Y+10	; 0x0a
    263a:	fc 01       	movw	r30, r24
    263c:	87 a1       	ldd	r24, Z+39	; 0x27
    263e:	21 e0       	ldi	r18, 0x01	; 1
    2640:	28 0f       	add	r18, r24
    2642:	89 85       	ldd	r24, Y+9	; 0x09
    2644:	9a 85       	ldd	r25, Y+10	; 0x0a
    2646:	fc 01       	movw	r30, r24
    2648:	27 a3       	std	Z+39, r18	; 0x27

0000264a <.Loc.626>:
                            break;
    264a:	21 c0       	rjmp	.+66     	; 0x268e <.L250>

0000264c <.L262>:
                        match_length = 0;
    264c:	89 85       	ldd	r24, Y+9	; 0x09
    264e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2650:	fc 01       	movw	r30, r24
    2652:	17 a2       	std	Z+39, r1	; 0x27

00002654 <.Loc.628>:
                        break;
    2654:	1c c0       	rjmp	.+56     	; 0x268e <.L250>

00002656 <.L266>:
                        goto exit_label;
    2656:	00 00       	nop
    2658:	01 c0       	rjmp	.+2      	; 0x265c <.L261>

0000265a <.L267>:
	...

0000265c <.L261>:
                        auto m_c_handle = m_waitor.value.handle;
    265c:	89 85       	ldd	r24, Y+9	; 0x09
    265e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2660:	fc 01       	movw	r30, r24
    2662:	83 a5       	ldd	r24, Z+43	; 0x2b
    2664:	94 a5       	ldd	r25, Z+44	; 0x2c
    2666:	98 87       	std	Y+8, r25	; 0x08
    2668:	8f 83       	std	Y+7, r24	; 0x07

0000266a <.Loc.632>:
                        m_waitor.reset();
    266a:	89 85       	ldd	r24, Y+9	; 0x09
    266c:	9a 85       	ldd	r25, Y+10	; 0x0a
    266e:	8a 96       	adiw	r24, 0x2a	; 42
    2670:	0e 94 82 1b 	call	0x3704	; 0x3704 <_ZN10asyncruino8optionalINS_16async_input_implINS_9schedulerENS_13default_guardEhLh32EE9coro_dataEE5resetEv>

00002674 <.Loc.633>:
                        this->_get_sheduler().push_task(m_c_handle);
    2674:	0e 94 93 1b 	call	0x3726	; 0x3726 <_ZN10asyncruino15sheduler_getterINS_9schedulerEE13_get_shedulerEv>

00002678 <.Loc.634>:
    2678:	9c 01       	movw	r18, r24
    267a:	8f 81       	ldd	r24, Y+7	; 0x07
    267c:	98 85       	ldd	r25, Y+8	; 0x08
    267e:	bc 01       	movw	r22, r24
    2680:	c9 01       	movw	r24, r18
    2682:	0e 94 9c 1b 	call	0x3738	; 0x3738 <_ZN10asyncruino14scheduler_implINS_13default_guardELj32EE9push_taskENSt7__n486116coroutine_handleIvEE>

00002686 <.Loc.635>:
                        break;
    2686:	03 c0       	rjmp	.+6      	; 0x268e <.L250>

00002688 <.L264>:
                    break;
    2688:	00 00       	nop
    268a:	01 c0       	rjmp	.+2      	; 0x268e <.L250>

0000268c <.L265>:
	...

0000268e <.L250>:
        }
    268e:	00 00       	nop
    2690:	2b 96       	adiw	r28, 0x0b	; 11
    2692:	0f b6       	in	r0, 0x3f	; 63
    2694:	f8 94       	cli
    2696:	de bf       	out	0x3e, r29	; 62
    2698:	0f be       	out	0x3f, r0	; 63
    269a:	cd bf       	out	0x3d, r28	; 61
    269c:	df 91       	pop	r29
    269e:	cf 91       	pop	r28
    26a0:	08 95       	ret

000026a2 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE9interruptEv>:
        void interrupt(){
    26a2:	cf 93       	push	r28
    26a4:	df 93       	push	r29
    26a6:	00 d0       	rcall	.+0      	; 0x26a8 <L0^A>

000026a8 <L0^A>:
    26a8:	00 d0       	rcall	.+0      	; 0x26aa <L0^A>

000026aa <L0^A>:
    26aa:	00 d0       	rcall	.+0      	; 0x26ac <L0^A>

000026ac <L0^A>:
    26ac:	cd b7       	in	r28, 0x3d	; 61
    26ae:	de b7       	in	r29, 0x3e	; 62
    26b0:	9e 83       	std	Y+6, r25	; 0x06
    26b2:	8d 83       	std	Y+5, r24	; 0x05

000026b4 <.Loc.640>:
            if(m_waitor){
    26b4:	8d 81       	ldd	r24, Y+5	; 0x05
    26b6:	9e 81       	ldd	r25, Y+6	; 0x06
    26b8:	08 96       	adiw	r24, 0x08	; 8
    26ba:	0e 94 c5 1b 	call	0x378a	; 0x378a <_ZNK10asyncruino8optionalINS_17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE9coro_dataEEcvbEv>

000026be <.Loc.641>:
    26be:	88 23       	and	r24, r24
    26c0:	09 f4       	brne	.+2      	; 0x26c4 <.Loc.642>

000026c2 <L0^A>:
    26c2:	72 c0       	rjmp	.+228    	; 0x27a8 <.L270>

000026c4 <.Loc.642>:
                switch (m_waitor.value.action)
    26c4:	8d 81       	ldd	r24, Y+5	; 0x05
    26c6:	9e 81       	ldd	r25, Y+6	; 0x06
    26c8:	fc 01       	movw	r30, r24
    26ca:	80 85       	ldd	r24, Z+8	; 0x08
    26cc:	88 2f       	mov	r24, r24
    26ce:	90 e0       	ldi	r25, 0x00	; 0

000026d0 <.Loc.643>:
    26d0:	00 97       	sbiw	r24, 0x00	; 0
    26d2:	21 f0       	breq	.+8      	; 0x26dc <.L271>
    26d4:	81 30       	cpi	r24, 0x01	; 1
    26d6:	91 05       	cpc	r25, r1
    26d8:	21 f1       	breq	.+72     	; 0x2722 <.L272>

000026da <.Loc.644>:
                    break;
    26da:	66 c0       	rjmp	.+204    	; 0x27a8 <.L270>

000026dc <.L271>:
					m_writer->write(m_byte);
    26dc:	8d 81       	ldd	r24, Y+5	; 0x05
    26de:	9e 81       	ldd	r25, Y+6	; 0x06
    26e0:	fc 01       	movw	r30, r24
    26e2:	20 81       	ld	r18, Z
    26e4:	31 81       	ldd	r19, Z+1	; 0x01

000026e6 <.Loc.646>:
    26e6:	8d 81       	ldd	r24, Y+5	; 0x05
    26e8:	9e 81       	ldd	r25, Y+6	; 0x06
    26ea:	fc 01       	movw	r30, r24
    26ec:	84 81       	ldd	r24, Z+4	; 0x04
    26ee:	68 2f       	mov	r22, r24
    26f0:	c9 01       	movw	r24, r18
    26f2:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <_ZN10asyncruino18hardware_uart_impl5writeEc>

000026f6 <.Loc.647>:
					auto m_handle = m_waitor.value.handle;
    26f6:	8d 81       	ldd	r24, Y+5	; 0x05
    26f8:	9e 81       	ldd	r25, Y+6	; 0x06
    26fa:	fc 01       	movw	r30, r24
    26fc:	81 85       	ldd	r24, Z+9	; 0x09
    26fe:	92 85       	ldd	r25, Z+10	; 0x0a
    2700:	9a 83       	std	Y+2, r25	; 0x02
    2702:	89 83       	std	Y+1, r24	; 0x01

00002704 <.Loc.648>:
					m_waitor.reset();
    2704:	8d 81       	ldd	r24, Y+5	; 0x05
    2706:	9e 81       	ldd	r25, Y+6	; 0x06
    2708:	08 96       	adiw	r24, 0x08	; 8
    270a:	0e 94 d5 1b 	call	0x37aa	; 0x37aa <_ZN10asyncruino8optionalINS_17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE9coro_dataEE5resetEv>

0000270e <.Loc.649>:
					this->_get_sheduler().push_task(m_handle);
    270e:	0e 94 93 1b 	call	0x3726	; 0x3726 <_ZN10asyncruino15sheduler_getterINS_9schedulerEE13_get_shedulerEv>

00002712 <.Loc.650>:
    2712:	9c 01       	movw	r18, r24
    2714:	89 81       	ldd	r24, Y+1	; 0x01
    2716:	9a 81       	ldd	r25, Y+2	; 0x02
    2718:	bc 01       	movw	r22, r24
    271a:	c9 01       	movw	r24, r18
    271c:	0e 94 9c 1b 	call	0x3738	; 0x3738 <_ZN10asyncruino14scheduler_implINS_13default_guardELj32EE9push_taskENSt7__n486116coroutine_handleIvEE>

00002720 <.Loc.651>:
					break;
    2720:	43 c0       	rjmp	.+134    	; 0x27a8 <.L270>

00002722 <.L272>:
                    m_writer->write(*m_buf);
    2722:	8d 81       	ldd	r24, Y+5	; 0x05
    2724:	9e 81       	ldd	r25, Y+6	; 0x06
    2726:	fc 01       	movw	r30, r24
    2728:	20 81       	ld	r18, Z
    272a:	31 81       	ldd	r19, Z+1	; 0x01

0000272c <.Loc.653>:
    272c:	8d 81       	ldd	r24, Y+5	; 0x05
    272e:	9e 81       	ldd	r25, Y+6	; 0x06
    2730:	fc 01       	movw	r30, r24
    2732:	85 81       	ldd	r24, Z+5	; 0x05
    2734:	96 81       	ldd	r25, Z+6	; 0x06

00002736 <.Loc.654>:
    2736:	fc 01       	movw	r30, r24
    2738:	80 81       	ld	r24, Z
    273a:	68 2f       	mov	r22, r24
    273c:	c9 01       	movw	r24, r18
    273e:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <_ZN10asyncruino18hardware_uart_impl5writeEc>

00002742 <.Loc.655>:
                    remain_bytes--;
    2742:	8d 81       	ldd	r24, Y+5	; 0x05
    2744:	9e 81       	ldd	r25, Y+6	; 0x06
    2746:	fc 01       	movw	r30, r24
    2748:	87 81       	ldd	r24, Z+7	; 0x07
    274a:	2f ef       	ldi	r18, 0xFF	; 255
    274c:	28 0f       	add	r18, r24
    274e:	8d 81       	ldd	r24, Y+5	; 0x05
    2750:	9e 81       	ldd	r25, Y+6	; 0x06
    2752:	fc 01       	movw	r30, r24
    2754:	27 83       	std	Z+7, r18	; 0x07

00002756 <.Loc.656>:
                    if(!remain_bytes){
    2756:	8d 81       	ldd	r24, Y+5	; 0x05
    2758:	9e 81       	ldd	r25, Y+6	; 0x06
    275a:	fc 01       	movw	r30, r24
    275c:	87 81       	ldd	r24, Z+7	; 0x07

0000275e <.Loc.657>:
    275e:	88 23       	and	r24, r24
    2760:	a9 f4       	brne	.+42     	; 0x278c <.L275>

00002762 <.LBB95>:
                        auto m_handle = m_waitor.value.handle;
    2762:	8d 81       	ldd	r24, Y+5	; 0x05
    2764:	9e 81       	ldd	r25, Y+6	; 0x06
    2766:	fc 01       	movw	r30, r24
    2768:	81 85       	ldd	r24, Z+9	; 0x09
    276a:	92 85       	ldd	r25, Z+10	; 0x0a
    276c:	9c 83       	std	Y+4, r25	; 0x04
    276e:	8b 83       	std	Y+3, r24	; 0x03

00002770 <.Loc.659>:
                        m_waitor.reset();
    2770:	8d 81       	ldd	r24, Y+5	; 0x05
    2772:	9e 81       	ldd	r25, Y+6	; 0x06
    2774:	08 96       	adiw	r24, 0x08	; 8
    2776:	0e 94 d5 1b 	call	0x37aa	; 0x37aa <_ZN10asyncruino8optionalINS_17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE9coro_dataEE5resetEv>

0000277a <.Loc.660>:
                        this->_get_sheduler().push_task(m_handle);
    277a:	0e 94 93 1b 	call	0x3726	; 0x3726 <_ZN10asyncruino15sheduler_getterINS_9schedulerEE13_get_shedulerEv>

0000277e <.Loc.661>:
    277e:	9c 01       	movw	r18, r24
    2780:	8b 81       	ldd	r24, Y+3	; 0x03
    2782:	9c 81       	ldd	r25, Y+4	; 0x04
    2784:	bc 01       	movw	r22, r24
    2786:	c9 01       	movw	r24, r18
    2788:	0e 94 9c 1b 	call	0x3738	; 0x3738 <_ZN10asyncruino14scheduler_implINS_13default_guardELj32EE9push_taskENSt7__n486116coroutine_handleIvEE>

0000278c <.L275>:
                    ++m_buf;
    278c:	8d 81       	ldd	r24, Y+5	; 0x05
    278e:	9e 81       	ldd	r25, Y+6	; 0x06
    2790:	fc 01       	movw	r30, r24
    2792:	85 81       	ldd	r24, Z+5	; 0x05
    2794:	96 81       	ldd	r25, Z+6	; 0x06

00002796 <.Loc.663>:
    2796:	9c 01       	movw	r18, r24
    2798:	2f 5f       	subi	r18, 0xFF	; 255
    279a:	3f 4f       	sbci	r19, 0xFF	; 255
    279c:	8d 81       	ldd	r24, Y+5	; 0x05
    279e:	9e 81       	ldd	r25, Y+6	; 0x06
    27a0:	fc 01       	movw	r30, r24
    27a2:	36 83       	std	Z+6, r19	; 0x06
    27a4:	25 83       	std	Z+5, r18	; 0x05

000027a6 <.Loc.664>:
	...

000027a8 <.L270>:
        }
    27a8:	00 00       	nop
    27aa:	0f 90       	pop	r0
    27ac:	0f 90       	pop	r0
    27ae:	0f 90       	pop	r0
    27b0:	0f 90       	pop	r0
    27b2:	0f 90       	pop	r0
    27b4:	0f 90       	pop	r0
    27b6:	df 91       	pop	r29
    27b8:	cf 91       	pop	r28
    27ba:	08 95       	ret

000027bc <_ZN10asyncruino18timer_counter_implINS_9schedulerENS_13default_guardEmNS_17timer_dim_counterIyfLi0EEEhLj1EEC1ILi0EEERS1_fNS_13time_prefix_tIXT_EEE>:
        timer_counter_impl(
    27bc:	0f 93       	push	r16
    27be:	1f 93       	push	r17
    27c0:	cf 93       	push	r28
    27c2:	df 93       	push	r29
    27c4:	cd b7       	in	r28, 0x3d	; 61
    27c6:	de b7       	in	r29, 0x3e	; 62
    27c8:	29 97       	sbiw	r28, 0x09	; 9
    27ca:	0f b6       	in	r0, 0x3f	; 63
    27cc:	f8 94       	cli
    27ce:	de bf       	out	0x3e, r29	; 62
    27d0:	0f be       	out	0x3f, r0	; 63
    27d2:	cd bf       	out	0x3d, r28	; 61
    27d4:	9a 83       	std	Y+2, r25	; 0x02
    27d6:	89 83       	std	Y+1, r24	; 0x01
    27d8:	7c 83       	std	Y+4, r23	; 0x04
    27da:	6b 83       	std	Y+3, r22	; 0x03
    27dc:	2d 83       	std	Y+5, r18	; 0x05
    27de:	3e 83       	std	Y+6, r19	; 0x06
    27e0:	4f 83       	std	Y+7, r20	; 0x07
    27e2:	58 87       	std	Y+8, r21	; 0x08
    27e4:	09 87       	std	Y+9, r16	; 0x09

000027e6 <.Loc.667>:
            m_counter(xsec_per_tick,_pr){
    27e6:	89 81       	ldd	r24, Y+1	; 0x01
    27e8:	9a 81       	ldd	r25, Y+2	; 0x02
    27ea:	2b 81       	ldd	r18, Y+3	; 0x03
    27ec:	3c 81       	ldd	r19, Y+4	; 0x04
    27ee:	b9 01       	movw	r22, r18
    27f0:	0e 94 e6 1b 	call	0x37cc	; 0x37cc <_ZN10asyncruino10timer_implINS_9schedulerENS_13default_guardEmhLh1EEC1ERS1_>

000027f4 <.Loc.668>:
    27f4:	89 81       	ldd	r24, Y+1	; 0x01
    27f6:	9a 81       	ldd	r25, Y+2	; 0x02
    27f8:	fc 01       	movw	r30, r24
    27fa:	38 96       	adiw	r30, 0x08	; 8
    27fc:	8d 81       	ldd	r24, Y+5	; 0x05
    27fe:	9e 81       	ldd	r25, Y+6	; 0x06
    2800:	af 81       	ldd	r26, Y+7	; 0x07
    2802:	b8 85       	ldd	r27, Y+8	; 0x08
    2804:	21 2f       	mov	r18, r17
    2806:	ac 01       	movw	r20, r24
    2808:	bd 01       	movw	r22, r26
    280a:	cf 01       	movw	r24, r30
    280c:	0e 94 1d 1c 	call	0x383a	; 0x383a <_ZN10asyncruino17timer_dim_counterIyfLi0EEC1ILi0EEEfNS_13time_prefix_tIXT_EEE>

00002810 <.Loc.669>:
        }
    2810:	00 00       	nop
    2812:	29 96       	adiw	r28, 0x09	; 9
    2814:	0f b6       	in	r0, 0x3f	; 63
    2816:	f8 94       	cli
    2818:	de bf       	out	0x3e, r29	; 62
    281a:	0f be       	out	0x3f, r0	; 63
    281c:	cd bf       	out	0x3d, r28	; 61
    281e:	df 91       	pop	r29
    2820:	cf 91       	pop	r28
    2822:	1f 91       	pop	r17
    2824:	0f 91       	pop	r16
    2826:	08 95       	ret

00002828 <_ZN10asyncruino16timer_0_hw__impl20prefix_sec_per_ticksIfLi0EEET_NS_13time_prefix_tIXT0_EEEm>:

            return (pow_10*f_cpu)/( ((uint32_t)1) << (prescal_degs[deg_item]+8)  );
        }

        template <typename ret_type,int _pref>
        inline static ret_type prefix_sec_per_ticks(time_prefix_t<_pref>,uint32_t _ARUINO_F_CPU_IN){
    2828:	cf 93       	push	r28
    282a:	df 93       	push	r29
    282c:	cd b7       	in	r28, 0x3d	; 61
    282e:	de b7       	in	r29, 0x3e	; 62
    2830:	6f 97       	sbiw	r28, 0x1f	; 31
    2832:	0f b6       	in	r0, 0x3f	; 63
    2834:	f8 94       	cli
    2836:	de bf       	out	0x3e, r29	; 62
    2838:	0f be       	out	0x3f, r0	; 63
    283a:	cd bf       	out	0x3d, r28	; 61
    283c:	8f 83       	std	Y+7, r24	; 0x07
    283e:	48 87       	std	Y+8, r20	; 0x08
    2840:	59 87       	std	Y+9, r21	; 0x09
    2842:	6a 87       	std	Y+10, r22	; 0x0a
    2844:	7b 87       	std	Y+11, r23	; 0x0b

00002846 <.Loc.671>:
            constexpr int8_t base_diff = (int8_t)time_prefix::s - (int8_t)_pref;
    2846:	19 82       	std	Y+1, r1	; 0x01

00002848 <.Loc.672>:
            constexpr ret_type pow_10 = pow(10.0,base_diff);
    2848:	80 e0       	ldi	r24, 0x00	; 0
    284a:	90 e0       	ldi	r25, 0x00	; 0
    284c:	a0 e8       	ldi	r26, 0x80	; 128
    284e:	bf e3       	ldi	r27, 0x3F	; 63
    2850:	8a 83       	std	Y+2, r24	; 0x02
    2852:	9b 83       	std	Y+3, r25	; 0x03
    2854:	ac 83       	std	Y+4, r26	; 0x04
    2856:	bd 83       	std	Y+5, r27	; 0x05

00002858 <.Loc.673>:
			uint8_t deg_item = (TCCR0B&0b0000111) - 1; 
    2858:	85 e4       	ldi	r24, 0x45	; 69
    285a:	90 e0       	ldi	r25, 0x00	; 0
    285c:	fc 01       	movw	r30, r24
    285e:	80 81       	ld	r24, Z
    2860:	87 70       	andi	r24, 0x07	; 7

00002862 <.Loc.674>:
    2862:	81 50       	subi	r24, 0x01	; 1
    2864:	8e 83       	std	Y+6, r24	; 0x06

00002866 <.Loc.675>:
            return (pow_10 * ( ((uint32_t)1) << (prescal_degs[deg_item]+8)))/f_cpu;
    2866:	8e 81       	ldd	r24, Y+6	; 0x06
    2868:	88 2f       	mov	r24, r24
    286a:	90 e0       	ldi	r25, 0x00	; 0

0000286c <.Loc.676>:
    286c:	82 5b       	subi	r24, 0xB2	; 178
    286e:	9e 4f       	sbci	r25, 0xFE	; 254
    2870:	fc 01       	movw	r30, r24
    2872:	80 81       	ld	r24, Z
    2874:	88 2f       	mov	r24, r24
    2876:	90 e0       	ldi	r25, 0x00	; 0

00002878 <.Loc.677>:
    2878:	9c 01       	movw	r18, r24
    287a:	28 5f       	subi	r18, 0xF8	; 248
    287c:	3f 4f       	sbci	r19, 0xFF	; 255

0000287e <.Loc.678>:
    287e:	81 e0       	ldi	r24, 0x01	; 1
    2880:	90 e0       	ldi	r25, 0x00	; 0
    2882:	a0 e0       	ldi	r26, 0x00	; 0
    2884:	b0 e0       	ldi	r27, 0x00	; 0
    2886:	ac 01       	movw	r20, r24
    2888:	bd 01       	movw	r22, r26
    288a:	04 c0       	rjmp	.+8      	; 0x2894 <.L2^B1>

0000288c <.L1^B5>:
    288c:	44 0f       	add	r20, r20
    288e:	55 1f       	adc	r21, r21
    2890:	66 1f       	adc	r22, r22
    2892:	77 1f       	adc	r23, r23

00002894 <.L2^B1>:
    2894:	2a 95       	dec	r18
    2896:	d2 f7       	brpl	.-12     	; 0x288c <.L1^B5>
    2898:	4c 87       	std	Y+12, r20	; 0x0c
    289a:	5d 87       	std	Y+13, r21	; 0x0d
    289c:	6e 87       	std	Y+14, r22	; 0x0e
    289e:	7f 87       	std	Y+15, r23	; 0x0f

000028a0 <.Loc.679>:
    28a0:	6c 85       	ldd	r22, Y+12	; 0x0c
    28a2:	7d 85       	ldd	r23, Y+13	; 0x0d
    28a4:	8e 85       	ldd	r24, Y+14	; 0x0e
    28a6:	9f 85       	ldd	r25, Y+15	; 0x0f
    28a8:	0e 94 e3 20 	call	0x41c6	; 0x41c6 <__floatunsisf>
    28ac:	68 8b       	std	Y+16, r22	; 0x10
    28ae:	79 8b       	std	Y+17, r23	; 0x11
    28b0:	8a 8b       	std	Y+18, r24	; 0x12
    28b2:	9b 8b       	std	Y+19, r25	; 0x13
    28b4:	68 85       	ldd	r22, Y+8	; 0x08
    28b6:	79 85       	ldd	r23, Y+9	; 0x09
    28b8:	8a 85       	ldd	r24, Y+10	; 0x0a
    28ba:	9b 85       	ldd	r25, Y+11	; 0x0b
    28bc:	0e 94 e3 20 	call	0x41c6	; 0x41c6 <__floatunsisf>
    28c0:	6c 8b       	std	Y+20, r22	; 0x14
    28c2:	7d 8b       	std	Y+21, r23	; 0x15
    28c4:	8e 8b       	std	Y+22, r24	; 0x16
    28c6:	9f 8b       	std	Y+23, r25	; 0x17

000028c8 <.Loc.680>:
    28c8:	2c 89       	ldd	r18, Y+20	; 0x14
    28ca:	3d 89       	ldd	r19, Y+21	; 0x15
    28cc:	4e 89       	ldd	r20, Y+22	; 0x16
    28ce:	5f 89       	ldd	r21, Y+23	; 0x17
    28d0:	68 89       	ldd	r22, Y+16	; 0x10
    28d2:	79 89       	ldd	r23, Y+17	; 0x11
    28d4:	8a 89       	ldd	r24, Y+18	; 0x12
    28d6:	9b 89       	ldd	r25, Y+19	; 0x13
    28d8:	0e 94 06 20 	call	0x400c	; 0x400c <__divsf3>
    28dc:	6c 8f       	std	Y+28, r22	; 0x1c
    28de:	7d 8f       	std	Y+29, r23	; 0x1d
    28e0:	8e 8f       	std	Y+30, r24	; 0x1e
    28e2:	9f 8f       	std	Y+31, r25	; 0x1f
    28e4:	8c 8d       	ldd	r24, Y+28	; 0x1c
    28e6:	9d 8d       	ldd	r25, Y+29	; 0x1d
    28e8:	ae 8d       	ldd	r26, Y+30	; 0x1e
    28ea:	bf 8d       	ldd	r27, Y+31	; 0x1f
    28ec:	88 8f       	std	Y+24, r24	; 0x18
    28ee:	99 8f       	std	Y+25, r25	; 0x19
    28f0:	aa 8f       	std	Y+26, r26	; 0x1a
    28f2:	bb 8f       	std	Y+27, r27	; 0x1b

000028f4 <.Loc.681>:
        }
    28f4:	68 8d       	ldd	r22, Y+24	; 0x18
    28f6:	79 8d       	ldd	r23, Y+25	; 0x19
    28f8:	8a 8d       	ldd	r24, Y+26	; 0x1a
    28fa:	9b 8d       	ldd	r25, Y+27	; 0x1b
    28fc:	6f 96       	adiw	r28, 0x1f	; 31
    28fe:	0f b6       	in	r0, 0x3f	; 63
    2900:	f8 94       	cli
    2902:	de bf       	out	0x3e, r29	; 62
    2904:	0f be       	out	0x3f, r0	; 63
    2906:	cd bf       	out	0x3d, r28	; 61
    2908:	df 91       	pop	r29
    290a:	cf 91       	pop	r28
    290c:	08 95       	ret

0000290e <_ZN10asyncruino18timer_counter_implINS_9schedulerENS_13default_guardEmNS_17timer_dim_counterIyfLi0EEEhLj1EE9set_speedILi0EEEvfNS_13time_prefix_tIXT_EEE>:
        void set_speed(typename counter_t::dividor_type xsec_per_tick,
    290e:	cf 93       	push	r28
    2910:	df 93       	push	r29
    2912:	00 d0       	rcall	.+0      	; 0x2914 <L0^A>

00002914 <L0^A>:
    2914:	00 d0       	rcall	.+0      	; 0x2916 <L0^A>

00002916 <L0^A>:
    2916:	00 d0       	rcall	.+0      	; 0x2918 <L0^A>

00002918 <L0^A>:
    2918:	0f 92       	push	r0
    291a:	cd b7       	in	r28, 0x3d	; 61
    291c:	de b7       	in	r29, 0x3e	; 62
    291e:	9a 83       	std	Y+2, r25	; 0x02
    2920:	89 83       	std	Y+1, r24	; 0x01
    2922:	4b 83       	std	Y+3, r20	; 0x03
    2924:	5c 83       	std	Y+4, r21	; 0x04
    2926:	6d 83       	std	Y+5, r22	; 0x05
    2928:	7e 83       	std	Y+6, r23	; 0x06
    292a:	2f 83       	std	Y+7, r18	; 0x07

0000292c <.Loc.683>:
            m_counter.set_speed(xsec_per_tick,_pr);
    292c:	89 81       	ldd	r24, Y+1	; 0x01
    292e:	9a 81       	ldd	r25, Y+2	; 0x02
    2930:	fc 01       	movw	r30, r24
    2932:	38 96       	adiw	r30, 0x08	; 8
    2934:	8b 81       	ldd	r24, Y+3	; 0x03
    2936:	9c 81       	ldd	r25, Y+4	; 0x04
    2938:	ad 81       	ldd	r26, Y+5	; 0x05
    293a:	be 81       	ldd	r27, Y+6	; 0x06
    293c:	23 2f       	mov	r18, r19
    293e:	ac 01       	movw	r20, r24
    2940:	bd 01       	movw	r22, r26
    2942:	cf 01       	movw	r24, r30
    2944:	0e 94 54 1c 	call	0x38a8	; 0x38a8 <_ZN10asyncruino17timer_dim_counterIyfLi0EE9set_speedILi0EEEvfNS_13time_prefix_tIXT_EEE>

00002948 <.Loc.684>:
        }
    2948:	00 00       	nop
    294a:	27 96       	adiw	r28, 0x07	; 7
    294c:	0f b6       	in	r0, 0x3f	; 63
    294e:	f8 94       	cli
    2950:	de bf       	out	0x3e, r29	; 62
    2952:	0f be       	out	0x3f, r0	; 63
    2954:	cd bf       	out	0x3d, r28	; 61
    2956:	df 91       	pop	r29
    2958:	cf 91       	pop	r28
    295a:	08 95       	ret

0000295c <_ZN10asyncruino18timer_counter_implINS_9schedulerENS_13default_guardEmNS_17timer_dim_counterIyfLi0EEEhLj1EE9interruptEv>:
        void interrupt(){
    295c:	8f 92       	push	r8
    295e:	9f 92       	push	r9
    2960:	af 92       	push	r10
    2962:	bf 92       	push	r11
    2964:	cf 92       	push	r12
    2966:	df 92       	push	r13
    2968:	ef 92       	push	r14
    296a:	ff 92       	push	r15
    296c:	cf 93       	push	r28
    296e:	df 93       	push	r29
    2970:	00 d0       	rcall	.+0      	; 0x2972 <L0^A>

00002972 <L0^A>:
    2972:	cd b7       	in	r28, 0x3d	; 61
    2974:	de b7       	in	r29, 0x3e	; 62
    2976:	9a 83       	std	Y+2, r25	; 0x02
    2978:	89 83       	std	Y+1, r24	; 0x01

0000297a <.Loc.686>:
            m_counter.value++;
    297a:	89 81       	ldd	r24, Y+1	; 0x01
    297c:	9a 81       	ldd	r25, Y+2	; 0x02
    297e:	fc 01       	movw	r30, r24
    2980:	80 84       	ldd	r8, Z+8	; 0x08
    2982:	fc 01       	movw	r30, r24
    2984:	91 84       	ldd	r9, Z+9	; 0x09
    2986:	fc 01       	movw	r30, r24
    2988:	a2 84       	ldd	r10, Z+10	; 0x0a
    298a:	fc 01       	movw	r30, r24
    298c:	b3 84       	ldd	r11, Z+11	; 0x0b
    298e:	fc 01       	movw	r30, r24
    2990:	c4 84       	ldd	r12, Z+12	; 0x0c
    2992:	fc 01       	movw	r30, r24
    2994:	d5 84       	ldd	r13, Z+13	; 0x0d
    2996:	fc 01       	movw	r30, r24
    2998:	e6 84       	ldd	r14, Z+14	; 0x0e
    299a:	fc 01       	movw	r30, r24
    299c:	f7 84       	ldd	r15, Z+15	; 0x0f

0000299e <.Loc.687>:
    299e:	28 2d       	mov	r18, r8
    29a0:	39 2d       	mov	r19, r9
    29a2:	4a 2d       	mov	r20, r10
    29a4:	5b 2d       	mov	r21, r11
    29a6:	6c 2d       	mov	r22, r12
    29a8:	7d 2d       	mov	r23, r13
    29aa:	8e 2d       	mov	r24, r14
    29ac:	9f 2d       	mov	r25, r15
    29ae:	a1 e0       	ldi	r26, 0x01	; 1
    29b0:	0e 94 3f 22 	call	0x447e	; 0x447e <__adddi3_s8>
    29b4:	82 2e       	mov	r8, r18
    29b6:	93 2e       	mov	r9, r19
    29b8:	a4 2e       	mov	r10, r20
    29ba:	b5 2e       	mov	r11, r21
    29bc:	c6 2e       	mov	r12, r22
    29be:	d7 2e       	mov	r13, r23
    29c0:	e8 2e       	mov	r14, r24
    29c2:	f9 2e       	mov	r15, r25
    29c4:	89 81       	ldd	r24, Y+1	; 0x01
    29c6:	9a 81       	ldd	r25, Y+2	; 0x02
    29c8:	fc 01       	movw	r30, r24
    29ca:	80 86       	std	Z+8, r8	; 0x08
    29cc:	fc 01       	movw	r30, r24
    29ce:	91 86       	std	Z+9, r9	; 0x09
    29d0:	fc 01       	movw	r30, r24
    29d2:	a2 86       	std	Z+10, r10	; 0x0a
    29d4:	fc 01       	movw	r30, r24
    29d6:	b3 86       	std	Z+11, r11	; 0x0b
    29d8:	fc 01       	movw	r30, r24
    29da:	c4 86       	std	Z+12, r12	; 0x0c
    29dc:	fc 01       	movw	r30, r24
    29de:	d5 86       	std	Z+13, r13	; 0x0d
    29e0:	fc 01       	movw	r30, r24
    29e2:	e6 86       	std	Z+14, r14	; 0x0e
    29e4:	fc 01       	movw	r30, r24
    29e6:	f7 86       	std	Z+15, r15	; 0x0f

000029e8 <.Loc.688>:
            this->timer_base_t::interrupt();
    29e8:	89 81       	ldd	r24, Y+1	; 0x01
    29ea:	9a 81       	ldd	r25, Y+2	; 0x02
    29ec:	0e 94 91 1c 	call	0x3922	; 0x3922 <_ZN10asyncruino10timer_implINS_9schedulerENS_13default_guardEmhLh1EE9interruptEv>

000029f0 <.Loc.689>:
        }
    29f0:	00 00       	nop
    29f2:	0f 90       	pop	r0
    29f4:	0f 90       	pop	r0
    29f6:	df 91       	pop	r29
    29f8:	cf 91       	pop	r28
    29fa:	ff 90       	pop	r15
    29fc:	ef 90       	pop	r14
    29fe:	df 90       	pop	r13
    2a00:	cf 90       	pop	r12
    2a02:	bf 90       	pop	r11
    2a04:	af 90       	pop	r10
    2a06:	9f 90       	pop	r9
    2a08:	8f 90       	pop	r8
    2a0a:	08 95       	ret

00002a0c <_Z9write_intImEhT_Pch>:
uint8_t write_int(T x,char * out,uint8_t max_len = 20){
    2a0c:	0f 93       	push	r16
    2a0e:	1f 93       	push	r17
    2a10:	cf 93       	push	r28
    2a12:	df 93       	push	r29
    2a14:	cd b7       	in	r28, 0x3d	; 61
    2a16:	de b7       	in	r29, 0x3e	; 62
    2a18:	ae 97       	sbiw	r28, 0x2e	; 46
    2a1a:	0f b6       	in	r0, 0x3f	; 63
    2a1c:	f8 94       	cli
    2a1e:	de bf       	out	0x3e, r29	; 62
    2a20:	0f be       	out	0x3f, r0	; 63
    2a22:	cd bf       	out	0x3d, r28	; 61
    2a24:	6c 8f       	std	Y+28, r22	; 0x1c
    2a26:	7d 8f       	std	Y+29, r23	; 0x1d
    2a28:	8e 8f       	std	Y+30, r24	; 0x1e
    2a2a:	9f 8f       	std	Y+31, r25	; 0x1f
    2a2c:	59 a3       	std	Y+33, r21	; 0x21
    2a2e:	48 a3       	std	Y+32, r20	; 0x20
    2a30:	2a a3       	std	Y+34, r18	; 0x22

00002a32 <.Loc.691>:
	uint8_t len = 0;
    2a32:	19 82       	std	Y+1, r1	; 0x01

00002a34 <.Loc.692>:
	if(x == 0){
    2a34:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2a36:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2a38:	ae 8d       	ldd	r26, Y+30	; 0x1e
    2a3a:	bf 8d       	ldd	r27, Y+31	; 0x1f
    2a3c:	00 97       	sbiw	r24, 0x00	; 0
    2a3e:	a1 05       	cpc	r26, r1
    2a40:	b1 05       	cpc	r27, r1
    2a42:	39 f4       	brne	.+14     	; 0x2a52 <.L283>

00002a44 <.Loc.693>:
		*out = '0';
    2a44:	88 a1       	ldd	r24, Y+32	; 0x20
    2a46:	99 a1       	ldd	r25, Y+33	; 0x21
    2a48:	20 e3       	ldi	r18, 0x30	; 48
    2a4a:	dc 01       	movw	r26, r24
    2a4c:	2c 93       	st	X, r18

00002a4e <.Loc.694>:
		return 1;
    2a4e:	81 e0       	ldi	r24, 0x01	; 1
    2a50:	82 c0       	rjmp	.+260    	; 0x2b56 <.L290>

00002a52 <.L283>:
	uint8_t i = 0;
    2a52:	1a 82       	std	Y+2, r1	; 0x02

00002a54 <.Loc.696>:
	while(x && i<max_len){
    2a54:	4d c0       	rjmp	.+154    	; 0x2af0 <.L285>

00002a56 <.L287>:
		auto dig = x%10;
    2a56:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2a58:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2a5a:	ae 8d       	ldd	r26, Y+30	; 0x1e
    2a5c:	bf 8d       	ldd	r27, Y+31	; 0x1f
    2a5e:	8b a3       	std	Y+35, r24	; 0x23
    2a60:	9c a3       	std	Y+36, r25	; 0x24
    2a62:	ad a3       	std	Y+37, r26	; 0x25
    2a64:	be a3       	std	Y+38, r27	; 0x26
    2a66:	0a e0       	ldi	r16, 0x0A	; 10
    2a68:	10 e0       	ldi	r17, 0x00	; 0
    2a6a:	20 e0       	ldi	r18, 0x00	; 0
    2a6c:	30 e0       	ldi	r19, 0x00	; 0
    2a6e:	6b a1       	ldd	r22, Y+35	; 0x23
    2a70:	7c a1       	ldd	r23, Y+36	; 0x24
    2a72:	8d a1       	ldd	r24, Y+37	; 0x25
    2a74:	9e a1       	ldd	r25, Y+38	; 0x26
    2a76:	a9 01       	movw	r20, r18
    2a78:	98 01       	movw	r18, r16
    2a7a:	0e 94 17 22 	call	0x442e	; 0x442e <__udivmodsi4>
    2a7e:	6f a3       	std	Y+39, r22	; 0x27
    2a80:	78 a7       	std	Y+40, r23	; 0x28
    2a82:	89 a7       	std	Y+41, r24	; 0x29
    2a84:	9a a7       	std	Y+42, r25	; 0x2a
    2a86:	8f a1       	ldd	r24, Y+39	; 0x27
    2a88:	98 a5       	ldd	r25, Y+40	; 0x28
    2a8a:	a9 a5       	ldd	r26, Y+41	; 0x29
    2a8c:	ba a5       	ldd	r27, Y+42	; 0x2a
    2a8e:	8c 83       	std	Y+4, r24	; 0x04
    2a90:	9d 83       	std	Y+5, r25	; 0x05
    2a92:	ae 83       	std	Y+6, r26	; 0x06
    2a94:	bf 83       	std	Y+7, r27	; 0x07

00002a96 <.Loc.698>:
		x /= 10;
    2a96:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2a98:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2a9a:	ae 8d       	ldd	r26, Y+30	; 0x1e
    2a9c:	bf 8d       	ldd	r27, Y+31	; 0x1f
    2a9e:	8b a7       	std	Y+43, r24	; 0x2b
    2aa0:	9c a7       	std	Y+44, r25	; 0x2c
    2aa2:	ad a7       	std	Y+45, r26	; 0x2d
    2aa4:	be a7       	std	Y+46, r27	; 0x2e
    2aa6:	0a e0       	ldi	r16, 0x0A	; 10
    2aa8:	10 e0       	ldi	r17, 0x00	; 0
    2aaa:	20 e0       	ldi	r18, 0x00	; 0
    2aac:	30 e0       	ldi	r19, 0x00	; 0
    2aae:	6b a5       	ldd	r22, Y+43	; 0x2b
    2ab0:	7c a5       	ldd	r23, Y+44	; 0x2c
    2ab2:	8d a5       	ldd	r24, Y+45	; 0x2d
    2ab4:	9e a5       	ldd	r25, Y+46	; 0x2e
    2ab6:	a9 01       	movw	r20, r18
    2ab8:	98 01       	movw	r18, r16
    2aba:	0e 94 17 22 	call	0x442e	; 0x442e <__udivmodsi4>
    2abe:	da 01       	movw	r26, r20
    2ac0:	c9 01       	movw	r24, r18
    2ac2:	8c 8f       	std	Y+28, r24	; 0x1c
    2ac4:	9d 8f       	std	Y+29, r25	; 0x1d
    2ac6:	ae 8f       	std	Y+30, r26	; 0x1e
    2ac8:	bf 8f       	std	Y+31, r27	; 0x1f

00002aca <.Loc.699>:
		m_buf[i] = 	dig + '0';
    2aca:	2c 81       	ldd	r18, Y+4	; 0x04

00002acc <.Loc.700>:
    2acc:	8a 81       	ldd	r24, Y+2	; 0x02
    2ace:	88 2f       	mov	r24, r24
    2ad0:	90 e0       	ldi	r25, 0x00	; 0

00002ad2 <.Loc.701>:
    2ad2:	40 e3       	ldi	r20, 0x30	; 48
    2ad4:	42 0f       	add	r20, r18

00002ad6 <.Loc.702>:
    2ad6:	9e 01       	movw	r18, r28
    2ad8:	28 5f       	subi	r18, 0xF8	; 248
    2ada:	3f 4f       	sbci	r19, 0xFF	; 255
    2adc:	82 0f       	add	r24, r18
    2ade:	93 1f       	adc	r25, r19
    2ae0:	dc 01       	movw	r26, r24
    2ae2:	4c 93       	st	X, r20

00002ae4 <.Loc.703>:
		++i;
    2ae4:	8a 81       	ldd	r24, Y+2	; 0x02
    2ae6:	8f 5f       	subi	r24, 0xFF	; 255
    2ae8:	8a 83       	std	Y+2, r24	; 0x02

00002aea <.Loc.704>:
		len++;
    2aea:	89 81       	ldd	r24, Y+1	; 0x01
    2aec:	8f 5f       	subi	r24, 0xFF	; 255
    2aee:	89 83       	std	Y+1, r24	; 0x01

00002af0 <.L285>:
	while(x && i<max_len){
    2af0:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2af2:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2af4:	ae 8d       	ldd	r26, Y+30	; 0x1e
    2af6:	bf 8d       	ldd	r27, Y+31	; 0x1f
    2af8:	00 97       	sbiw	r24, 0x00	; 0
    2afa:	a1 05       	cpc	r26, r1
    2afc:	b1 05       	cpc	r27, r1
    2afe:	29 f0       	breq	.+10     	; 0x2b0a <.L286>

00002b00 <.Loc.706>:
    2b00:	9a 81       	ldd	r25, Y+2	; 0x02
    2b02:	8a a1       	ldd	r24, Y+34	; 0x22
    2b04:	98 17       	cp	r25, r24
    2b06:	08 f4       	brcc	.+2      	; 0x2b0a <.L286>

00002b08 <L0^A>:
    2b08:	a6 cf       	rjmp	.-180    	; 0x2a56 <.L287>

00002b0a <.L286>:
	for(uint8_t i=1;i<=len;++i){
    2b0a:	81 e0       	ldi	r24, 0x01	; 1
    2b0c:	8b 83       	std	Y+3, r24	; 0x03

00002b0e <.Loc.708>:
    2b0e:	1d c0       	rjmp	.+58     	; 0x2b4a <.L288>

00002b10 <.L289>:
		*out = m_buf[len-i];
    2b10:	89 81       	ldd	r24, Y+1	; 0x01
    2b12:	28 2f       	mov	r18, r24
    2b14:	30 e0       	ldi	r19, 0x00	; 0

00002b16 <.Loc.710>:
    2b16:	8b 81       	ldd	r24, Y+3	; 0x03
    2b18:	88 2f       	mov	r24, r24
    2b1a:	90 e0       	ldi	r25, 0x00	; 0

00002b1c <.Loc.711>:
    2b1c:	f9 01       	movw	r30, r18
    2b1e:	e8 1b       	sub	r30, r24
    2b20:	f9 0b       	sbc	r31, r25
    2b22:	cf 01       	movw	r24, r30

00002b24 <.Loc.712>:
    2b24:	9e 01       	movw	r18, r28
    2b26:	28 5f       	subi	r18, 0xF8	; 248
    2b28:	3f 4f       	sbci	r19, 0xFF	; 255
    2b2a:	82 0f       	add	r24, r18
    2b2c:	93 1f       	adc	r25, r19
    2b2e:	dc 01       	movw	r26, r24
    2b30:	2c 91       	ld	r18, X

00002b32 <.Loc.713>:
    2b32:	88 a1       	ldd	r24, Y+32	; 0x20
    2b34:	99 a1       	ldd	r25, Y+33	; 0x21
    2b36:	fc 01       	movw	r30, r24
    2b38:	20 83       	st	Z, r18

00002b3a <.Loc.714>:
		out++;
    2b3a:	88 a1       	ldd	r24, Y+32	; 0x20
    2b3c:	99 a1       	ldd	r25, Y+33	; 0x21
    2b3e:	01 96       	adiw	r24, 0x01	; 1
    2b40:	99 a3       	std	Y+33, r25	; 0x21
    2b42:	88 a3       	std	Y+32, r24	; 0x20

00002b44 <.Loc.715>:
	for(uint8_t i=1;i<=len;++i){
    2b44:	8b 81       	ldd	r24, Y+3	; 0x03
    2b46:	8f 5f       	subi	r24, 0xFF	; 255
    2b48:	8b 83       	std	Y+3, r24	; 0x03

00002b4a <.L288>:
    2b4a:	9b 81       	ldd	r25, Y+3	; 0x03
    2b4c:	89 81       	ldd	r24, Y+1	; 0x01
    2b4e:	98 17       	cp	r25, r24
    2b50:	f9 f2       	breq	.-66     	; 0x2b10 <.L289>
    2b52:	f0 f2       	brcs	.-68     	; 0x2b10 <.L289>

00002b54 <.LBE98>:
	return len;
    2b54:	89 81       	ldd	r24, Y+1	; 0x01

00002b56 <.L290>:
}
    2b56:	ae 96       	adiw	r28, 0x2e	; 46
    2b58:	0f b6       	in	r0, 0x3f	; 63
    2b5a:	f8 94       	cli
    2b5c:	de bf       	out	0x3e, r29	; 62
    2b5e:	0f be       	out	0x3f, r0	; 63
    2b60:	cd bf       	out	0x3d, r28	; 61
    2b62:	df 91       	pop	r29
    2b64:	cf 91       	pop	r28
    2b66:	1f 91       	pop	r17
    2b68:	0f 91       	pop	r16
    2b6a:	08 95       	ret

00002b6c <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE19write_bytes_awaitor11await_readyEv>:
            inline bool await_ready(){
    2b6c:	cf 93       	push	r28
    2b6e:	df 93       	push	r29
    2b70:	00 d0       	rcall	.+0      	; 0x2b72 <L0^A>

00002b72 <L0^A>:
    2b72:	cd b7       	in	r28, 0x3d	; 61
    2b74:	de b7       	in	r29, 0x3e	; 62
    2b76:	9a 83       	std	Y+2, r25	; 0x02
    2b78:	89 83       	std	Y+1, r24	; 0x01

00002b7a <.Loc.720>:
                return success;
    2b7a:	89 81       	ldd	r24, Y+1	; 0x01
    2b7c:	9a 81       	ldd	r25, Y+2	; 0x02
    2b7e:	fc 01       	movw	r30, r24
    2b80:	85 81       	ldd	r24, Z+5	; 0x05

00002b82 <.Loc.721>:
            }
    2b82:	0f 90       	pop	r0
    2b84:	0f 90       	pop	r0
    2b86:	df 91       	pop	r29
    2b88:	cf 91       	pop	r28
    2b8a:	08 95       	ret

00002b8c <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE19write_bytes_awaitor13await_suspendENSt7__n486116coroutine_handleIvEE>:
            inline void await_suspend(std::coroutine_handle<> h){
    2b8c:	cf 93       	push	r28
    2b8e:	df 93       	push	r29
    2b90:	00 d0       	rcall	.+0      	; 0x2b92 <L0^A>

00002b92 <L0^A>:
    2b92:	00 d0       	rcall	.+0      	; 0x2b94 <L0^A>

00002b94 <L0^A>:
    2b94:	00 d0       	rcall	.+0      	; 0x2b96 <L0^A>

00002b96 <L0^A>:
    2b96:	0f 92       	push	r0
    2b98:	cd b7       	in	r28, 0x3d	; 61
    2b9a:	de b7       	in	r29, 0x3e	; 62
    2b9c:	9d 83       	std	Y+5, r25	; 0x05
    2b9e:	8c 83       	std	Y+4, r24	; 0x04
    2ba0:	7f 83       	std	Y+7, r23	; 0x07
    2ba2:	6e 83       	std	Y+6, r22	; 0x06

00002ba4 <.Loc.723>:
                m_input->m_waitor = {coro_data::WRITE_BYTES,h};
    2ba4:	81 e0       	ldi	r24, 0x01	; 1
    2ba6:	89 83       	std	Y+1, r24	; 0x01
    2ba8:	8e 81       	ldd	r24, Y+6	; 0x06
    2baa:	9f 81       	ldd	r25, Y+7	; 0x07
    2bac:	9b 83       	std	Y+3, r25	; 0x03
    2bae:	8a 83       	std	Y+2, r24	; 0x02

00002bb0 <.Loc.724>:
    2bb0:	8c 81       	ldd	r24, Y+4	; 0x04
    2bb2:	9d 81       	ldd	r25, Y+5	; 0x05
    2bb4:	fc 01       	movw	r30, r24
    2bb6:	80 81       	ld	r24, Z
    2bb8:	91 81       	ldd	r25, Z+1	; 0x01

00002bba <.Loc.725>:
    2bba:	08 96       	adiw	r24, 0x08	; 8
    2bbc:	9e 01       	movw	r18, r28
    2bbe:	2f 5f       	subi	r18, 0xFF	; 255
    2bc0:	3f 4f       	sbci	r19, 0xFF	; 255
    2bc2:	b9 01       	movw	r22, r18
    2bc4:	0e 94 3f 1d 	call	0x3a7e	; 0x3a7e <_ZN10asyncruino8optionalINS_17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE9coro_dataEEaSERKS6_>

00002bc8 <.Loc.726>:
                m_input->m_buf = bytes;
    2bc8:	8c 81       	ldd	r24, Y+4	; 0x04
    2bca:	9d 81       	ldd	r25, Y+5	; 0x05
    2bcc:	fc 01       	movw	r30, r24
    2bce:	80 81       	ld	r24, Z
    2bd0:	91 81       	ldd	r25, Z+1	; 0x01

00002bd2 <.Loc.727>:
    2bd2:	2c 81       	ldd	r18, Y+4	; 0x04
    2bd4:	3d 81       	ldd	r19, Y+5	; 0x05
    2bd6:	f9 01       	movw	r30, r18
    2bd8:	22 81       	ldd	r18, Z+2	; 0x02
    2bda:	33 81       	ldd	r19, Z+3	; 0x03

00002bdc <.Loc.728>:
    2bdc:	fc 01       	movw	r30, r24
    2bde:	36 83       	std	Z+6, r19	; 0x06
    2be0:	25 83       	std	Z+5, r18	; 0x05

00002be2 <.Loc.729>:
                m_input->remain_bytes = remain_bytes;
    2be2:	8c 81       	ldd	r24, Y+4	; 0x04
    2be4:	9d 81       	ldd	r25, Y+5	; 0x05
    2be6:	fc 01       	movw	r30, r24
    2be8:	80 81       	ld	r24, Z
    2bea:	91 81       	ldd	r25, Z+1	; 0x01

00002bec <.Loc.730>:
    2bec:	2c 81       	ldd	r18, Y+4	; 0x04
    2bee:	3d 81       	ldd	r19, Y+5	; 0x05
    2bf0:	f9 01       	movw	r30, r18
    2bf2:	24 81       	ldd	r18, Z+4	; 0x04

00002bf4 <.Loc.731>:
    2bf4:	fc 01       	movw	r30, r24
    2bf6:	27 83       	std	Z+7, r18	; 0x07

00002bf8 <.Loc.732>:
                m_input->m_guard.unlock();
    2bf8:	8c 81       	ldd	r24, Y+4	; 0x04
    2bfa:	9d 81       	ldd	r25, Y+5	; 0x05
    2bfc:	fc 01       	movw	r30, r24
    2bfe:	80 81       	ld	r24, Z
    2c00:	91 81       	ldd	r25, Z+1	; 0x01

00002c02 <.Loc.733>:
    2c02:	02 96       	adiw	r24, 0x02	; 2
    2c04:	0e 94 45 01 	call	0x28a	; 0x28a <_ZN10asyncruino13default_guard6unlockEv>

00002c08 <.Loc.734>:
            }
    2c08:	00 00       	nop
    2c0a:	27 96       	adiw	r28, 0x07	; 7
    2c0c:	0f b6       	in	r0, 0x3f	; 63
    2c0e:	f8 94       	cli
    2c10:	de bf       	out	0x3e, r29	; 62
    2c12:	0f be       	out	0x3f, r0	; 63
    2c14:	cd bf       	out	0x3d, r28	; 61
    2c16:	df 91       	pop	r29
    2c18:	cf 91       	pop	r28
    2c1a:	08 95       	ret

00002c1c <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE19write_bytes_awaitor12await_resumeEv>:
            void await_resume(){
    2c1c:	cf 93       	push	r28
    2c1e:	df 93       	push	r29
    2c20:	00 d0       	rcall	.+0      	; 0x2c22 <L0^A>

00002c22 <L0^A>:
    2c22:	cd b7       	in	r28, 0x3d	; 61
    2c24:	de b7       	in	r29, 0x3e	; 62
    2c26:	9a 83       	std	Y+2, r25	; 0x02
    2c28:	89 83       	std	Y+1, r24	; 0x01

00002c2a <.Loc.736>:
                if(success){
    2c2a:	89 81       	ldd	r24, Y+1	; 0x01
    2c2c:	9a 81       	ldd	r25, Y+2	; 0x02
    2c2e:	fc 01       	movw	r30, r24
    2c30:	85 81       	ldd	r24, Z+5	; 0x05

00002c32 <.Loc.737>:
    2c32:	88 23       	and	r24, r24
    2c34:	41 f0       	breq	.+16     	; 0x2c46 <.L296>

00002c36 <.Loc.738>:
                    m_input->m_guard.unlock();
    2c36:	89 81       	ldd	r24, Y+1	; 0x01
    2c38:	9a 81       	ldd	r25, Y+2	; 0x02
    2c3a:	fc 01       	movw	r30, r24
    2c3c:	80 81       	ld	r24, Z
    2c3e:	91 81       	ldd	r25, Z+1	; 0x01

00002c40 <.Loc.739>:
    2c40:	02 96       	adiw	r24, 0x02	; 2
    2c42:	0e 94 45 01 	call	0x28a	; 0x28a <_ZN10asyncruino13default_guard6unlockEv>

00002c46 <.L296>:
            };
    2c46:	00 00       	nop
    2c48:	0f 90       	pop	r0
    2c4a:	0f 90       	pop	r0
    2c4c:	df 91       	pop	r29
    2c4e:	cf 91       	pop	r28
    2c50:	08 95       	ret

00002c52 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE18write_byte_awaitor11await_readyEv>:
            inline bool await_ready(){
    2c52:	cf 93       	push	r28
    2c54:	df 93       	push	r29
    2c56:	00 d0       	rcall	.+0      	; 0x2c58 <L0^A>

00002c58 <L0^A>:
    2c58:	cd b7       	in	r28, 0x3d	; 61
    2c5a:	de b7       	in	r29, 0x3e	; 62
    2c5c:	9a 83       	std	Y+2, r25	; 0x02
    2c5e:	89 83       	std	Y+1, r24	; 0x01

00002c60 <.Loc.742>:
                return success;
    2c60:	89 81       	ldd	r24, Y+1	; 0x01
    2c62:	9a 81       	ldd	r25, Y+2	; 0x02
    2c64:	fc 01       	movw	r30, r24
    2c66:	83 81       	ldd	r24, Z+3	; 0x03

00002c68 <.Loc.743>:
            }
    2c68:	0f 90       	pop	r0
    2c6a:	0f 90       	pop	r0
    2c6c:	df 91       	pop	r29
    2c6e:	cf 91       	pop	r28
    2c70:	08 95       	ret

00002c72 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE18write_byte_awaitor13await_suspendENSt7__n486116coroutine_handleIvEE>:
            inline void await_suspend(std::coroutine_handle<> h){
    2c72:	cf 93       	push	r28
    2c74:	df 93       	push	r29
    2c76:	00 d0       	rcall	.+0      	; 0x2c78 <L0^A>

00002c78 <L0^A>:
    2c78:	00 d0       	rcall	.+0      	; 0x2c7a <L0^A>

00002c7a <L0^A>:
    2c7a:	00 d0       	rcall	.+0      	; 0x2c7c <L0^A>

00002c7c <L0^A>:
    2c7c:	0f 92       	push	r0
    2c7e:	cd b7       	in	r28, 0x3d	; 61
    2c80:	de b7       	in	r29, 0x3e	; 62
    2c82:	9d 83       	std	Y+5, r25	; 0x05
    2c84:	8c 83       	std	Y+4, r24	; 0x04
    2c86:	7f 83       	std	Y+7, r23	; 0x07
    2c88:	6e 83       	std	Y+6, r22	; 0x06

00002c8a <.Loc.745>:
                m_input->m_waitor = {coro_data::WRITE_BYTE,h};
    2c8a:	19 82       	std	Y+1, r1	; 0x01
    2c8c:	8e 81       	ldd	r24, Y+6	; 0x06
    2c8e:	9f 81       	ldd	r25, Y+7	; 0x07
    2c90:	9b 83       	std	Y+3, r25	; 0x03
    2c92:	8a 83       	std	Y+2, r24	; 0x02

00002c94 <.Loc.746>:
    2c94:	8c 81       	ldd	r24, Y+4	; 0x04
    2c96:	9d 81       	ldd	r25, Y+5	; 0x05
    2c98:	fc 01       	movw	r30, r24
    2c9a:	80 81       	ld	r24, Z
    2c9c:	91 81       	ldd	r25, Z+1	; 0x01

00002c9e <.Loc.747>:
    2c9e:	08 96       	adiw	r24, 0x08	; 8
    2ca0:	9e 01       	movw	r18, r28
    2ca2:	2f 5f       	subi	r18, 0xFF	; 255
    2ca4:	3f 4f       	sbci	r19, 0xFF	; 255
    2ca6:	b9 01       	movw	r22, r18
    2ca8:	0e 94 3f 1d 	call	0x3a7e	; 0x3a7e <_ZN10asyncruino8optionalINS_17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE9coro_dataEEaSERKS6_>

00002cac <.Loc.748>:
                m_input->m_byte = byte;
    2cac:	8c 81       	ldd	r24, Y+4	; 0x04
    2cae:	9d 81       	ldd	r25, Y+5	; 0x05
    2cb0:	fc 01       	movw	r30, r24
    2cb2:	80 81       	ld	r24, Z
    2cb4:	91 81       	ldd	r25, Z+1	; 0x01

00002cb6 <.Loc.749>:
    2cb6:	2c 81       	ldd	r18, Y+4	; 0x04
    2cb8:	3d 81       	ldd	r19, Y+5	; 0x05
    2cba:	f9 01       	movw	r30, r18
    2cbc:	22 81       	ldd	r18, Z+2	; 0x02

00002cbe <.Loc.750>:
    2cbe:	fc 01       	movw	r30, r24
    2cc0:	24 83       	std	Z+4, r18	; 0x04

00002cc2 <.Loc.751>:
                m_input->m_guard.unlock();
    2cc2:	8c 81       	ldd	r24, Y+4	; 0x04
    2cc4:	9d 81       	ldd	r25, Y+5	; 0x05
    2cc6:	fc 01       	movw	r30, r24
    2cc8:	80 81       	ld	r24, Z
    2cca:	91 81       	ldd	r25, Z+1	; 0x01

00002ccc <.Loc.752>:
    2ccc:	02 96       	adiw	r24, 0x02	; 2
    2cce:	0e 94 45 01 	call	0x28a	; 0x28a <_ZN10asyncruino13default_guard6unlockEv>

00002cd2 <.Loc.753>:
            }
    2cd2:	00 00       	nop
    2cd4:	27 96       	adiw	r28, 0x07	; 7
    2cd6:	0f b6       	in	r0, 0x3f	; 63
    2cd8:	f8 94       	cli
    2cda:	de bf       	out	0x3e, r29	; 62
    2cdc:	0f be       	out	0x3f, r0	; 63
    2cde:	cd bf       	out	0x3d, r28	; 61
    2ce0:	df 91       	pop	r29
    2ce2:	cf 91       	pop	r28
    2ce4:	08 95       	ret

00002ce6 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE18write_byte_awaitor12await_resumeEv>:
            void await_resume(){
    2ce6:	cf 93       	push	r28
    2ce8:	df 93       	push	r29
    2cea:	00 d0       	rcall	.+0      	; 0x2cec <L0^A>

00002cec <L0^A>:
    2cec:	cd b7       	in	r28, 0x3d	; 61
    2cee:	de b7       	in	r29, 0x3e	; 62
    2cf0:	9a 83       	std	Y+2, r25	; 0x02
    2cf2:	89 83       	std	Y+1, r24	; 0x01

00002cf4 <.Loc.755>:
                if(success){
    2cf4:	89 81       	ldd	r24, Y+1	; 0x01
    2cf6:	9a 81       	ldd	r25, Y+2	; 0x02
    2cf8:	fc 01       	movw	r30, r24
    2cfa:	83 81       	ldd	r24, Z+3	; 0x03

00002cfc <.Loc.756>:
    2cfc:	88 23       	and	r24, r24
    2cfe:	41 f0       	breq	.+16     	; 0x2d10 <.L302>

00002d00 <.Loc.757>:
                    m_input->m_guard.unlock();
    2d00:	89 81       	ldd	r24, Y+1	; 0x01
    2d02:	9a 81       	ldd	r25, Y+2	; 0x02
    2d04:	fc 01       	movw	r30, r24
    2d06:	80 81       	ld	r24, Z
    2d08:	91 81       	ldd	r25, Z+1	; 0x01

00002d0a <.Loc.758>:
    2d0a:	02 96       	adiw	r24, 0x02	; 2
    2d0c:	0e 94 45 01 	call	0x28a	; 0x28a <_ZN10asyncruino13default_guard6unlockEv>

00002d10 <.L302>:
            };
    2d10:	00 00       	nop
    2d12:	0f 90       	pop	r0
    2d14:	0f 90       	pop	r0
    2d16:	df 91       	pop	r29
    2d18:	cf 91       	pop	r28
    2d1a:	08 95       	ret

00002d1c <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE17read_byte_awaitor11await_readyEv>:
            inline bool await_ready(){
    2d1c:	cf 93       	push	r28
    2d1e:	df 93       	push	r29
    2d20:	00 d0       	rcall	.+0      	; 0x2d22 <L0^A>

00002d22 <L0^A>:
    2d22:	cd b7       	in	r28, 0x3d	; 61
    2d24:	de b7       	in	r29, 0x3e	; 62
    2d26:	9a 83       	std	Y+2, r25	; 0x02
    2d28:	89 83       	std	Y+1, r24	; 0x01

00002d2a <.Loc.761>:
                return is_ready;
    2d2a:	89 81       	ldd	r24, Y+1	; 0x01
    2d2c:	9a 81       	ldd	r25, Y+2	; 0x02
    2d2e:	fc 01       	movw	r30, r24
    2d30:	82 81       	ldd	r24, Z+2	; 0x02

00002d32 <.Loc.762>:
            }
    2d32:	0f 90       	pop	r0
    2d34:	0f 90       	pop	r0
    2d36:	df 91       	pop	r29
    2d38:	cf 91       	pop	r28
    2d3a:	08 95       	ret

00002d3c <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE17read_byte_awaitor13await_suspendENSt7__n486116coroutine_handleIvEE>:
            void await_suspend(std::coroutine_handle<> h){
    2d3c:	cf 93       	push	r28
    2d3e:	df 93       	push	r29
    2d40:	00 d0       	rcall	.+0      	; 0x2d42 <L0^A>

00002d42 <L0^A>:
    2d42:	00 d0       	rcall	.+0      	; 0x2d44 <L0^A>

00002d44 <L0^A>:
    2d44:	00 d0       	rcall	.+0      	; 0x2d46 <L0^A>

00002d46 <L0^A>:
    2d46:	0f 92       	push	r0
    2d48:	cd b7       	in	r28, 0x3d	; 61
    2d4a:	de b7       	in	r29, 0x3e	; 62
    2d4c:	9d 83       	std	Y+5, r25	; 0x05
    2d4e:	8c 83       	std	Y+4, r24	; 0x04
    2d50:	7f 83       	std	Y+7, r23	; 0x07
    2d52:	6e 83       	std	Y+6, r22	; 0x06

00002d54 <.Loc.764>:
                m_input->m_waitor = {coro_data::READ_BYTE,h};
    2d54:	19 82       	std	Y+1, r1	; 0x01
    2d56:	8e 81       	ldd	r24, Y+6	; 0x06
    2d58:	9f 81       	ldd	r25, Y+7	; 0x07
    2d5a:	9b 83       	std	Y+3, r25	; 0x03
    2d5c:	8a 83       	std	Y+2, r24	; 0x02

00002d5e <.Loc.765>:
    2d5e:	8c 81       	ldd	r24, Y+4	; 0x04
    2d60:	9d 81       	ldd	r25, Y+5	; 0x05
    2d62:	fc 01       	movw	r30, r24
    2d64:	80 81       	ld	r24, Z
    2d66:	91 81       	ldd	r25, Z+1	; 0x01

00002d68 <.Loc.766>:
    2d68:	8a 96       	adiw	r24, 0x2a	; 42
    2d6a:	9e 01       	movw	r18, r28
    2d6c:	2f 5f       	subi	r18, 0xFF	; 255
    2d6e:	3f 4f       	sbci	r19, 0xFF	; 255
    2d70:	b9 01       	movw	r22, r18
    2d72:	0e 94 63 1d 	call	0x3ac6	; 0x3ac6 <_ZN10asyncruino8optionalINS_16async_input_implINS_9schedulerENS_13default_guardEhLh32EE9coro_dataEEaSERKS5_>

00002d76 <.Loc.767>:
                m_input->m_guard.unlock();
    2d76:	8c 81       	ldd	r24, Y+4	; 0x04
    2d78:	9d 81       	ldd	r25, Y+5	; 0x05
    2d7a:	fc 01       	movw	r30, r24
    2d7c:	80 81       	ld	r24, Z
    2d7e:	91 81       	ldd	r25, Z+1	; 0x01

00002d80 <.Loc.768>:
    2d80:	88 96       	adiw	r24, 0x28	; 40
    2d82:	0e 94 45 01 	call	0x28a	; 0x28a <_ZN10asyncruino13default_guard6unlockEv>

00002d86 <.Loc.769>:
            }
    2d86:	00 00       	nop
    2d88:	27 96       	adiw	r28, 0x07	; 7
    2d8a:	0f b6       	in	r0, 0x3f	; 63
    2d8c:	f8 94       	cli
    2d8e:	de bf       	out	0x3e, r29	; 62
    2d90:	0f be       	out	0x3f, r0	; 63
    2d92:	cd bf       	out	0x3d, r28	; 61
    2d94:	df 91       	pop	r29
    2d96:	cf 91       	pop	r28
    2d98:	08 95       	ret

00002d9a <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE17read_byte_awaitor12await_resumeEv>:
		    char await_resume(){
    2d9a:	cf 93       	push	r28
    2d9c:	df 93       	push	r29
    2d9e:	00 d0       	rcall	.+0      	; 0x2da0 <L0^A>

00002da0 <L0^A>:
    2da0:	0f 92       	push	r0
    2da2:	cd b7       	in	r28, 0x3d	; 61
    2da4:	de b7       	in	r29, 0x3e	; 62
    2da6:	9b 83       	std	Y+3, r25	; 0x03
    2da8:	8a 83       	std	Y+2, r24	; 0x02

00002daa <.Loc.771>:
                if(is_ready){
    2daa:	8a 81       	ldd	r24, Y+2	; 0x02
    2dac:	9b 81       	ldd	r25, Y+3	; 0x03
    2dae:	fc 01       	movw	r30, r24
    2db0:	82 81       	ldd	r24, Z+2	; 0x02

00002db2 <.Loc.772>:
    2db2:	88 23       	and	r24, r24
    2db4:	69 f0       	breq	.+26     	; 0x2dd0 <.L307>

00002db6 <.Loc.773>:
                    m_input->m_guard.unlock();
    2db6:	8a 81       	ldd	r24, Y+2	; 0x02
    2db8:	9b 81       	ldd	r25, Y+3	; 0x03
    2dba:	fc 01       	movw	r30, r24
    2dbc:	80 81       	ld	r24, Z
    2dbe:	91 81       	ldd	r25, Z+1	; 0x01

00002dc0 <.Loc.774>:
    2dc0:	88 96       	adiw	r24, 0x28	; 40
    2dc2:	0e 94 45 01 	call	0x28a	; 0x28a <_ZN10asyncruino13default_guard6unlockEv>

00002dc6 <.Loc.775>:
                    return ready_char;
    2dc6:	8a 81       	ldd	r24, Y+2	; 0x02
    2dc8:	9b 81       	ldd	r25, Y+3	; 0x03
    2dca:	fc 01       	movw	r30, r24
    2dcc:	83 81       	ldd	r24, Z+3	; 0x03
    2dce:	1d c0       	rjmp	.+58     	; 0x2e0a <.L308>

00002dd0 <.L307>:
                    m_input->m_guard.lock();
    2dd0:	8a 81       	ldd	r24, Y+2	; 0x02
    2dd2:	9b 81       	ldd	r25, Y+3	; 0x03
    2dd4:	fc 01       	movw	r30, r24
    2dd6:	80 81       	ld	r24, Z
    2dd8:	91 81       	ldd	r25, Z+1	; 0x01

00002dda <.Loc.777>:
    2dda:	88 96       	adiw	r24, 0x28	; 40
    2ddc:	0e 94 1e 01 	call	0x23c	; 0x23c <_ZN10asyncruino13default_guard4lockEv>

00002de0 <.Loc.778>:
                    m_input->m_buf.read(c);
    2de0:	8a 81       	ldd	r24, Y+2	; 0x02
    2de2:	9b 81       	ldd	r25, Y+3	; 0x03
    2de4:	fc 01       	movw	r30, r24
    2de6:	80 81       	ld	r24, Z
    2de8:	91 81       	ldd	r25, Z+1	; 0x01

00002dea <.Loc.779>:
    2dea:	9c 01       	movw	r18, r24
    2dec:	ce 01       	movw	r24, r28
    2dee:	01 96       	adiw	r24, 0x01	; 1
    2df0:	bc 01       	movw	r22, r24
    2df2:	c9 01       	movw	r24, r18
    2df4:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <_ZN10asyncruino4pipeIchLh32EE4readERc>

00002df8 <.Loc.780>:
                    m_input->m_guard.unlock();
    2df8:	8a 81       	ldd	r24, Y+2	; 0x02
    2dfa:	9b 81       	ldd	r25, Y+3	; 0x03
    2dfc:	fc 01       	movw	r30, r24
    2dfe:	80 81       	ld	r24, Z
    2e00:	91 81       	ldd	r25, Z+1	; 0x01

00002e02 <.Loc.781>:
    2e02:	88 96       	adiw	r24, 0x28	; 40
    2e04:	0e 94 45 01 	call	0x28a	; 0x28a <_ZN10asyncruino13default_guard6unlockEv>

00002e08 <.Loc.782>:
                    return c;
    2e08:	89 81       	ldd	r24, Y+1	; 0x01

00002e0a <.L308>:
            }
    2e0a:	0f 90       	pop	r0
    2e0c:	0f 90       	pop	r0
    2e0e:	0f 90       	pop	r0
    2e10:	df 91       	pop	r29
    2e12:	cf 91       	pop	r28
    2e14:	08 95       	ret

00002e16 <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE24read_bytes_until_awaitorILh1EE11await_readyEv>:
            inline bool await_ready(){
    2e16:	cf 93       	push	r28
    2e18:	df 93       	push	r29
    2e1a:	00 d0       	rcall	.+0      	; 0x2e1c <L0^A>

00002e1c <L0^A>:
    2e1c:	cd b7       	in	r28, 0x3d	; 61
    2e1e:	de b7       	in	r29, 0x3e	; 62
    2e20:	9a 83       	std	Y+2, r25	; 0x02
    2e22:	89 83       	std	Y+1, r24	; 0x01

00002e24 <.Loc.785>:
                return aw_ready;
    2e24:	89 81       	ldd	r24, Y+1	; 0x01
    2e26:	9a 81       	ldd	r25, Y+2	; 0x02
    2e28:	fc 01       	movw	r30, r24
    2e2a:	81 85       	ldd	r24, Z+9	; 0x09

00002e2c <.Loc.786>:
            }
    2e2c:	0f 90       	pop	r0
    2e2e:	0f 90       	pop	r0
    2e30:	df 91       	pop	r29
    2e32:	cf 91       	pop	r28
    2e34:	08 95       	ret

00002e36 <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE24read_bytes_until_awaitorILh1EE13await_suspendENSt7__n486116coroutine_handleIvEE>:
            inline void await_suspend(std::coroutine_handle<> h){
    2e36:	cf 93       	push	r28
    2e38:	df 93       	push	r29
    2e3a:	00 d0       	rcall	.+0      	; 0x2e3c <L0^A>

00002e3c <L0^A>:
    2e3c:	00 d0       	rcall	.+0      	; 0x2e3e <L0^A>

00002e3e <L0^A>:
    2e3e:	00 d0       	rcall	.+0      	; 0x2e40 <L0^A>

00002e40 <L0^A>:
    2e40:	0f 92       	push	r0
    2e42:	cd b7       	in	r28, 0x3d	; 61
    2e44:	de b7       	in	r29, 0x3e	; 62
    2e46:	9d 83       	std	Y+5, r25	; 0x05
    2e48:	8c 83       	std	Y+4, r24	; 0x04
    2e4a:	7f 83       	std	Y+7, r23	; 0x07
    2e4c:	6e 83       	std	Y+6, r22	; 0x06

00002e4e <.Loc.788>:
                    m_input->m_waitor = {coro_data::READ_BYTES_UNTIL_1,h};
    2e4e:	82 e0       	ldi	r24, 0x02	; 2
    2e50:	89 83       	std	Y+1, r24	; 0x01
    2e52:	8e 81       	ldd	r24, Y+6	; 0x06
    2e54:	9f 81       	ldd	r25, Y+7	; 0x07
    2e56:	9b 83       	std	Y+3, r25	; 0x03
    2e58:	8a 83       	std	Y+2, r24	; 0x02

00002e5a <.Loc.789>:
    2e5a:	8c 81       	ldd	r24, Y+4	; 0x04
    2e5c:	9d 81       	ldd	r25, Y+5	; 0x05
    2e5e:	fc 01       	movw	r30, r24
    2e60:	80 81       	ld	r24, Z
    2e62:	91 81       	ldd	r25, Z+1	; 0x01

00002e64 <.Loc.790>:
    2e64:	8a 96       	adiw	r24, 0x2a	; 42
    2e66:	9e 01       	movw	r18, r28
    2e68:	2f 5f       	subi	r18, 0xFF	; 255
    2e6a:	3f 4f       	sbci	r19, 0xFF	; 255
    2e6c:	b9 01       	movw	r22, r18
    2e6e:	0e 94 63 1d 	call	0x3ac6	; 0x3ac6 <_ZN10asyncruino8optionalINS_16async_input_implINS_9schedulerENS_13default_guardEhLh32EE9coro_dataEEaSERKS5_>

00002e72 <.Loc.791>:
                    m_input->control_seq[0] = c0;
    2e72:	8c 81       	ldd	r24, Y+4	; 0x04
    2e74:	9d 81       	ldd	r25, Y+5	; 0x05
    2e76:	fc 01       	movw	r30, r24
    2e78:	80 81       	ld	r24, Z
    2e7a:	91 81       	ldd	r25, Z+1	; 0x01

00002e7c <.Loc.792>:
    2e7c:	2c 81       	ldd	r18, Y+4	; 0x04
    2e7e:	3d 81       	ldd	r19, Y+5	; 0x05
    2e80:	f9 01       	movw	r30, r18
    2e82:	26 81       	ldd	r18, Z+6	; 0x06

00002e84 <.Loc.793>:
    2e84:	fc 01       	movw	r30, r24
    2e86:	25 a3       	std	Z+37, r18	; 0x25

00002e88 <.Loc.794>:
                    m_input->match_length = 0;
    2e88:	8c 81       	ldd	r24, Y+4	; 0x04
    2e8a:	9d 81       	ldd	r25, Y+5	; 0x05
    2e8c:	fc 01       	movw	r30, r24
    2e8e:	80 81       	ld	r24, Z
    2e90:	91 81       	ldd	r25, Z+1	; 0x01

00002e92 <.Loc.795>:
    2e92:	fc 01       	movw	r30, r24
    2e94:	17 a2       	std	Z+39, r1	; 0x27

00002e96 <.Loc.796>:
                m_input->buffer_out = dest;
    2e96:	8c 81       	ldd	r24, Y+4	; 0x04
    2e98:	9d 81       	ldd	r25, Y+5	; 0x05
    2e9a:	fc 01       	movw	r30, r24
    2e9c:	80 81       	ld	r24, Z
    2e9e:	91 81       	ldd	r25, Z+1	; 0x01

00002ea0 <.Loc.797>:
    2ea0:	2c 81       	ldd	r18, Y+4	; 0x04
    2ea2:	3d 81       	ldd	r19, Y+5	; 0x05
    2ea4:	f9 01       	movw	r30, r18
    2ea6:	24 81       	ldd	r18, Z+4	; 0x04
    2ea8:	35 81       	ldd	r19, Z+5	; 0x05

00002eaa <.Loc.798>:
    2eaa:	fc 01       	movw	r30, r24
    2eac:	33 a3       	std	Z+35, r19	; 0x23
    2eae:	22 a3       	std	Z+34, r18	; 0x22

00002eb0 <.Loc.799>:
                m_input->remain_space = bytes_to_read;
    2eb0:	8c 81       	ldd	r24, Y+4	; 0x04
    2eb2:	9d 81       	ldd	r25, Y+5	; 0x05
    2eb4:	fc 01       	movw	r30, r24
    2eb6:	80 81       	ld	r24, Z
    2eb8:	91 81       	ldd	r25, Z+1	; 0x01

00002eba <.Loc.800>:
    2eba:	2c 81       	ldd	r18, Y+4	; 0x04
    2ebc:	3d 81       	ldd	r19, Y+5	; 0x05
    2ebe:	f9 01       	movw	r30, r18
    2ec0:	22 81       	ldd	r18, Z+2	; 0x02

00002ec2 <.Loc.801>:
    2ec2:	fc 01       	movw	r30, r24
    2ec4:	24 a3       	std	Z+36, r18	; 0x24

00002ec6 <.Loc.802>:
                m_input->m_guard.unlock();
    2ec6:	8c 81       	ldd	r24, Y+4	; 0x04
    2ec8:	9d 81       	ldd	r25, Y+5	; 0x05
    2eca:	fc 01       	movw	r30, r24
    2ecc:	80 81       	ld	r24, Z
    2ece:	91 81       	ldd	r25, Z+1	; 0x01

00002ed0 <.Loc.803>:
    2ed0:	88 96       	adiw	r24, 0x28	; 40
    2ed2:	0e 94 45 01 	call	0x28a	; 0x28a <_ZN10asyncruino13default_guard6unlockEv>

00002ed6 <.Loc.804>:
            }
    2ed6:	00 00       	nop
    2ed8:	27 96       	adiw	r28, 0x07	; 7
    2eda:	0f b6       	in	r0, 0x3f	; 63
    2edc:	f8 94       	cli
    2ede:	de bf       	out	0x3e, r29	; 62
    2ee0:	0f be       	out	0x3f, r0	; 63
    2ee2:	cd bf       	out	0x3d, r28	; 61
    2ee4:	df 91       	pop	r29
    2ee6:	cf 91       	pop	r28
    2ee8:	08 95       	ret

00002eea <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE24read_bytes_until_awaitorILh1EE12await_resumeEv>:
            inline size_type await_resume(){
    2eea:	cf 93       	push	r28
    2eec:	df 93       	push	r29
    2eee:	00 d0       	rcall	.+0      	; 0x2ef0 <L0^A>

00002ef0 <L0^A>:
    2ef0:	cd b7       	in	r28, 0x3d	; 61
    2ef2:	de b7       	in	r29, 0x3e	; 62
    2ef4:	9a 83       	std	Y+2, r25	; 0x02
    2ef6:	89 83       	std	Y+1, r24	; 0x01

00002ef8 <.Loc.806>:
                if(aw_ready){
    2ef8:	89 81       	ldd	r24, Y+1	; 0x01
    2efa:	9a 81       	ldd	r25, Y+2	; 0x02
    2efc:	fc 01       	movw	r30, r24
    2efe:	81 85       	ldd	r24, Z+9	; 0x09

00002f00 <.Loc.807>:
    2f00:	88 23       	and	r24, r24
    2f02:	69 f0       	breq	.+26     	; 0x2f1e <.L313>

00002f04 <.Loc.808>:
                    m_input->m_guard.unlock();
    2f04:	89 81       	ldd	r24, Y+1	; 0x01
    2f06:	9a 81       	ldd	r25, Y+2	; 0x02
    2f08:	fc 01       	movw	r30, r24
    2f0a:	80 81       	ld	r24, Z
    2f0c:	91 81       	ldd	r25, Z+1	; 0x01

00002f0e <.Loc.809>:
    2f0e:	88 96       	adiw	r24, 0x28	; 40
    2f10:	0e 94 45 01 	call	0x28a	; 0x28a <_ZN10asyncruino13default_guard6unlockEv>

00002f14 <.Loc.810>:
                    return already_read;
    2f14:	89 81       	ldd	r24, Y+1	; 0x01
    2f16:	9a 81       	ldd	r25, Y+2	; 0x02
    2f18:	fc 01       	movw	r30, r24
    2f1a:	83 81       	ldd	r24, Z+3	; 0x03
    2f1c:	13 c0       	rjmp	.+38     	; 0x2f44 <.L314>

00002f1e <.L313>:
                return already_read + (bytes_to_read-m_input->remain_space);
    2f1e:	89 81       	ldd	r24, Y+1	; 0x01
    2f20:	9a 81       	ldd	r25, Y+2	; 0x02
    2f22:	fc 01       	movw	r30, r24
    2f24:	23 81       	ldd	r18, Z+3	; 0x03

00002f26 <.Loc.812>:
    2f26:	89 81       	ldd	r24, Y+1	; 0x01
    2f28:	9a 81       	ldd	r25, Y+2	; 0x02
    2f2a:	fc 01       	movw	r30, r24
    2f2c:	32 81       	ldd	r19, Z+2	; 0x02

00002f2e <.Loc.813>:
    2f2e:	89 81       	ldd	r24, Y+1	; 0x01
    2f30:	9a 81       	ldd	r25, Y+2	; 0x02
    2f32:	fc 01       	movw	r30, r24
    2f34:	80 81       	ld	r24, Z
    2f36:	91 81       	ldd	r25, Z+1	; 0x01

00002f38 <.Loc.814>:
    2f38:	fc 01       	movw	r30, r24
    2f3a:	84 a1       	ldd	r24, Z+36	; 0x24

00002f3c <.Loc.815>:
    2f3c:	f3 2f       	mov	r31, r19
    2f3e:	f8 1b       	sub	r31, r24
    2f40:	8f 2f       	mov	r24, r31

00002f42 <.Loc.816>:
    2f42:	82 0f       	add	r24, r18

00002f44 <.L314>:
            }
    2f44:	0f 90       	pop	r0
    2f46:	0f 90       	pop	r0
    2f48:	df 91       	pop	r29
    2f4a:	cf 91       	pop	r28
    2f4c:	08 95       	ret

00002f4e <_ZNSt7__n486116coroutine_handleIN10asyncruino4task12promise_typeEE12from_addressEPv>:
    constexpr static coroutine_handle from_address(void* __a)
    2f4e:	cf 93       	push	r28
    2f50:	df 93       	push	r29
    2f52:	00 d0       	rcall	.+0      	; 0x2f54 <L0^A>

00002f54 <L0^A>:
    2f54:	00 d0       	rcall	.+0      	; 0x2f56 <L0^A>

00002f56 <L0^A>:
    2f56:	cd b7       	in	r28, 0x3d	; 61
    2f58:	de b7       	in	r29, 0x3e	; 62
    2f5a:	9c 83       	std	Y+4, r25	; 0x04
    2f5c:	8b 83       	std	Y+3, r24	; 0x03

00002f5e <.Loc.819>:
      coroutine_handle __self;
    2f5e:	1a 82       	std	Y+2, r1	; 0x02
    2f60:	19 82       	std	Y+1, r1	; 0x01

00002f62 <.Loc.820>:
      __self._M_fr_ptr = __a;
    2f62:	8b 81       	ldd	r24, Y+3	; 0x03
    2f64:	9c 81       	ldd	r25, Y+4	; 0x04
    2f66:	9a 83       	std	Y+2, r25	; 0x02
    2f68:	89 83       	std	Y+1, r24	; 0x01

00002f6a <.Loc.821>:
      return __self;
    2f6a:	89 81       	ldd	r24, Y+1	; 0x01
    2f6c:	9a 81       	ldd	r25, Y+2	; 0x02

00002f6e <.Loc.822>:
    }
    2f6e:	0f 90       	pop	r0
    2f70:	0f 90       	pop	r0
    2f72:	0f 90       	pop	r0
    2f74:	0f 90       	pop	r0
    2f76:	df 91       	pop	r29
    2f78:	cf 91       	pop	r28
    2f7a:	08 95       	ret

00002f7c <_ZNK10asyncruino17timer_dim_counterIyfLi0EE12to_counter_tIjLin3EEEyT_NS_13time_prefix_tIXT0_EEE>:
            constexpr int8_t base_diff = (int8_t)other_base - (int8_t)base;
            constexpr dividor_t pow_10 = pow(10.0,base_diff);
            return _value*tick_per_prefix_sec*pow_10;
        }
        template <typename T,int other_base>
        inline  counter_t to_counter_t(T _value,time_prefix_t<other_base>) const{
    2f7c:	8f 92       	push	r8
    2f7e:	9f 92       	push	r9
    2f80:	af 92       	push	r10
    2f82:	bf 92       	push	r11
    2f84:	cf 92       	push	r12
    2f86:	df 92       	push	r13
    2f88:	ef 92       	push	r14
    2f8a:	ff 92       	push	r15
    2f8c:	cf 93       	push	r28
    2f8e:	df 93       	push	r29
    2f90:	cd b7       	in	r28, 0x3d	; 61
    2f92:	de b7       	in	r29, 0x3e	; 62
    2f94:	2d 97       	sbiw	r28, 0x0d	; 13
    2f96:	0f b6       	in	r0, 0x3f	; 63
    2f98:	f8 94       	cli
    2f9a:	de bf       	out	0x3e, r29	; 62
    2f9c:	0f be       	out	0x3f, r0	; 63
    2f9e:	cd bf       	out	0x3d, r28	; 61
    2fa0:	9a 83       	std	Y+2, r25	; 0x02
    2fa2:	89 83       	std	Y+1, r24	; 0x01
    2fa4:	7c 83       	std	Y+4, r23	; 0x04
    2fa6:	6b 83       	std	Y+3, r22	; 0x03
    2fa8:	4d 83       	std	Y+5, r20	; 0x05

00002faa <.Loc.824>:
            return to_counter_t<other_base>(_value);
    2faa:	2b 81       	ldd	r18, Y+3	; 0x03
    2fac:	3c 81       	ldd	r19, Y+4	; 0x04
    2fae:	89 81       	ldd	r24, Y+1	; 0x01
    2fb0:	9a 81       	ldd	r25, Y+2	; 0x02
    2fb2:	b9 01       	movw	r22, r18
    2fb4:	0e 94 d0 1d 	call	0x3ba0	; 0x3ba0 <_ZNK10asyncruino17timer_dim_counterIyfLi0EE12to_counter_tILan3EjEEyT0_>
    2fb8:	2e 83       	std	Y+6, r18	; 0x06
    2fba:	3f 83       	std	Y+7, r19	; 0x07
    2fbc:	48 87       	std	Y+8, r20	; 0x08
    2fbe:	59 87       	std	Y+9, r21	; 0x09
    2fc0:	6a 87       	std	Y+10, r22	; 0x0a
    2fc2:	7b 87       	std	Y+11, r23	; 0x0b
    2fc4:	8c 87       	std	Y+12, r24	; 0x0c
    2fc6:	9d 87       	std	Y+13, r25	; 0x0d

00002fc8 <.Loc.825>:
    2fc8:	8e 80       	ldd	r8, Y+6	; 0x06
    2fca:	9f 80       	ldd	r9, Y+7	; 0x07
    2fcc:	a8 84       	ldd	r10, Y+8	; 0x08
    2fce:	b9 84       	ldd	r11, Y+9	; 0x09
    2fd0:	ca 84       	ldd	r12, Y+10	; 0x0a
    2fd2:	db 84       	ldd	r13, Y+11	; 0x0b
    2fd4:	ec 84       	ldd	r14, Y+12	; 0x0c
    2fd6:	fd 84       	ldd	r15, Y+13	; 0x0d

00002fd8 <.Loc.826>:
        }
    2fd8:	28 2d       	mov	r18, r8
    2fda:	39 2d       	mov	r19, r9
    2fdc:	4a 2d       	mov	r20, r10
    2fde:	5b 2d       	mov	r21, r11
    2fe0:	6c 2d       	mov	r22, r12
    2fe2:	7d 2d       	mov	r23, r13
    2fe4:	8e 2d       	mov	r24, r14
    2fe6:	9f 2d       	mov	r25, r15
    2fe8:	2d 96       	adiw	r28, 0x0d	; 13
    2fea:	0f b6       	in	r0, 0x3f	; 63
    2fec:	f8 94       	cli
    2fee:	de bf       	out	0x3e, r29	; 62
    2ff0:	0f be       	out	0x3f, r0	; 63
    2ff2:	cd bf       	out	0x3d, r28	; 61
    2ff4:	df 91       	pop	r29
    2ff6:	cf 91       	pop	r28
    2ff8:	ff 90       	pop	r15
    2ffa:	ef 90       	pop	r14
    2ffc:	df 90       	pop	r13
    2ffe:	cf 90       	pop	r12
    3000:	bf 90       	pop	r11
    3002:	af 90       	pop	r10
    3004:	9f 90       	pop	r9
    3006:	8f 90       	pop	r8
    3008:	08 95       	ret

0000300a <_ZN10asyncruino10timer_implINS_9schedulerENS_13default_guardEmhLh1EE5DelayEm>:
        inline Delay_awaitor Delay(time_t wait_ticks){
    300a:	8f 92       	push	r8
    300c:	9f 92       	push	r9
    300e:	af 92       	push	r10
    3010:	bf 92       	push	r11
    3012:	cf 92       	push	r12
    3014:	df 92       	push	r13
    3016:	ef 92       	push	r14
    3018:	ff 92       	push	r15
    301a:	cf 93       	push	r28
    301c:	df 93       	push	r29
    301e:	cd b7       	in	r28, 0x3d	; 61
    3020:	de b7       	in	r29, 0x3e	; 62
    3022:	6a 97       	sbiw	r28, 0x1a	; 26
    3024:	0f b6       	in	r0, 0x3f	; 63
    3026:	f8 94       	cli
    3028:	de bf       	out	0x3e, r29	; 62
    302a:	0f be       	out	0x3f, r0	; 63
    302c:	cd bf       	out	0x3d, r28	; 61
    302e:	9e 87       	std	Y+14, r25	; 0x0e
    3030:	8d 87       	std	Y+13, r24	; 0x0d
    3032:	4f 87       	std	Y+15, r20	; 0x0f
    3034:	58 8b       	std	Y+16, r21	; 0x10
    3036:	69 8b       	std	Y+17, r22	; 0x11
    3038:	7a 8b       	std	Y+18, r23	; 0x12

0000303a <.Loc.828>:
            wait_ticks = (wait_ticks ==0 ? 1 :wait_ticks);
    303a:	8f 85       	ldd	r24, Y+15	; 0x0f
    303c:	98 89       	ldd	r25, Y+16	; 0x10
    303e:	a9 89       	ldd	r26, Y+17	; 0x11
    3040:	ba 89       	ldd	r27, Y+18	; 0x12
    3042:	00 97       	sbiw	r24, 0x00	; 0
    3044:	a1 05       	cpc	r26, r1
    3046:	b1 05       	cpc	r27, r1
    3048:	29 f0       	breq	.+10     	; 0x3054 <.L320>

0000304a <.Loc.829>:
    304a:	8f 85       	ldd	r24, Y+15	; 0x0f
    304c:	98 89       	ldd	r25, Y+16	; 0x10
    304e:	a9 89       	ldd	r26, Y+17	; 0x11
    3050:	ba 89       	ldd	r27, Y+18	; 0x12
    3052:	04 c0       	rjmp	.+8      	; 0x305c <.L321>

00003054 <.L320>:
    3054:	81 e0       	ldi	r24, 0x01	; 1
    3056:	90 e0       	ldi	r25, 0x00	; 0
    3058:	a0 e0       	ldi	r26, 0x00	; 0
    305a:	b0 e0       	ldi	r27, 0x00	; 0

0000305c <.L321>:
    305c:	8f 87       	std	Y+15, r24	; 0x0f
    305e:	98 8b       	std	Y+16, r25	; 0x10
    3060:	a9 8b       	std	Y+17, r26	; 0x11
    3062:	ba 8b       	std	Y+18, r27	; 0x12

00003064 <.Loc.832>:
            return Delay_awaitor(wait_ticks,*this);
    3064:	2d 85       	ldd	r18, Y+13	; 0x0d
    3066:	3e 85       	ldd	r19, Y+14	; 0x0e
    3068:	8f 85       	ldd	r24, Y+15	; 0x0f
    306a:	98 89       	ldd	r25, Y+16	; 0x10
    306c:	a9 89       	ldd	r26, Y+17	; 0x11
    306e:	ba 89       	ldd	r27, Y+18	; 0x12
    3070:	ac 01       	movw	r20, r24
    3072:	bd 01       	movw	r22, r26
    3074:	ce 01       	movw	r24, r28
    3076:	01 96       	adiw	r24, 0x01	; 1
    3078:	0e 94 63 1e 	call	0x3cc6	; 0x3cc6 <_ZN10asyncruino10timer_implINS_9schedulerENS_13default_guardEmhLh1EE13Delay_awaitorC1EmRS3_>

0000307c <.Loc.833>:
    307c:	26 e0       	ldi	r18, 0x06	; 6
    307e:	ce 01       	movw	r24, r28
    3080:	01 96       	adiw	r24, 0x01	; 1
    3082:	fc 01       	movw	r30, r24
    3084:	de 01       	movw	r26, r28
    3086:	17 96       	adiw	r26, 0x07	; 7

00003088 <.L^B4>:
    3088:	01 90       	ld	r0, Z+
    308a:	0d 92       	st	X+, r0
    308c:	2a 95       	dec	r18
    308e:	e1 f7       	brne	.-8      	; 0x3088 <.L^B4>
    3090:	50 e0       	ldi	r21, 0x00	; 0
    3092:	5f 81       	ldd	r21, Y+7	; 0x07
    3094:	40 e0       	ldi	r20, 0x00	; 0
    3096:	48 85       	ldd	r20, Y+8	; 0x08
    3098:	30 e0       	ldi	r19, 0x00	; 0
    309a:	39 85       	ldd	r19, Y+9	; 0x09
    309c:	20 e0       	ldi	r18, 0x00	; 0
    309e:	2a 85       	ldd	r18, Y+10	; 0x0a
    30a0:	90 e0       	ldi	r25, 0x00	; 0
    30a2:	9b 85       	ldd	r25, Y+11	; 0x0b
    30a4:	80 e0       	ldi	r24, 0x00	; 0
    30a6:	8c 85       	ldd	r24, Y+12	; 0x0c
    30a8:	5b 8b       	std	Y+19, r21	; 0x13
    30aa:	4c 8b       	std	Y+20, r20	; 0x14
    30ac:	3d 8b       	std	Y+21, r19	; 0x15
    30ae:	2e 8b       	std	Y+22, r18	; 0x16
    30b0:	9f 8b       	std	Y+23, r25	; 0x17
    30b2:	88 8f       	std	Y+24, r24	; 0x18
    30b4:	8b 88       	ldd	r8, Y+19	; 0x13
    30b6:	9c 88       	ldd	r9, Y+20	; 0x14
    30b8:	ad 88       	ldd	r10, Y+21	; 0x15
    30ba:	be 88       	ldd	r11, Y+22	; 0x16
    30bc:	cf 88       	ldd	r12, Y+23	; 0x17
    30be:	d8 8c       	ldd	r13, Y+24	; 0x18
    30c0:	e9 8c       	ldd	r14, Y+25	; 0x19
    30c2:	fa 8c       	ldd	r15, Y+26	; 0x1a

000030c4 <.Loc.834>:
        } 
    30c4:	28 2d       	mov	r18, r8
    30c6:	39 2d       	mov	r19, r9
    30c8:	4a 2d       	mov	r20, r10
    30ca:	5b 2d       	mov	r21, r11
    30cc:	6c 2d       	mov	r22, r12
    30ce:	7d 2d       	mov	r23, r13
    30d0:	8e 2d       	mov	r24, r14
    30d2:	9f 2d       	mov	r25, r15
    30d4:	6a 96       	adiw	r28, 0x1a	; 26
    30d6:	0f b6       	in	r0, 0x3f	; 63
    30d8:	f8 94       	cli
    30da:	de bf       	out	0x3e, r29	; 62
    30dc:	0f be       	out	0x3f, r0	; 63
    30de:	cd bf       	out	0x3d, r28	; 61
    30e0:	df 91       	pop	r29
    30e2:	cf 91       	pop	r28
    30e4:	ff 90       	pop	r15
    30e6:	ef 90       	pop	r14
    30e8:	df 90       	pop	r13
    30ea:	cf 90       	pop	r12
    30ec:	bf 90       	pop	r11
    30ee:	af 90       	pop	r10
    30f0:	9f 90       	pop	r9
    30f2:	8f 90       	pop	r8
    30f4:	08 95       	ret

000030f6 <_ZN10asyncruino10timer_implINS_9schedulerENS_13default_guardEmhLh1EE13Delay_awaitor11await_readyEv>:
            inline bool await_ready(){
    30f6:	cf 93       	push	r28
    30f8:	df 93       	push	r29
    30fa:	00 d0       	rcall	.+0      	; 0x30fc <L0^A>

000030fc <L0^A>:
    30fc:	cd b7       	in	r28, 0x3d	; 61
    30fe:	de b7       	in	r29, 0x3e	; 62
    3100:	9a 83       	std	Y+2, r25	; 0x02
    3102:	89 83       	std	Y+1, r24	; 0x01

00003104 <.Loc.836>:
                return wait_ticks == 0;
    3104:	89 81       	ldd	r24, Y+1	; 0x01
    3106:	9a 81       	ldd	r25, Y+2	; 0x02
    3108:	fc 01       	movw	r30, r24
    310a:	80 81       	ld	r24, Z
    310c:	91 81       	ldd	r25, Z+1	; 0x01
    310e:	a2 81       	ldd	r26, Z+2	; 0x02
    3110:	b3 81       	ldd	r27, Z+3	; 0x03

00003112 <.Loc.837>:
    3112:	21 e0       	ldi	r18, 0x01	; 1
    3114:	00 97       	sbiw	r24, 0x00	; 0
    3116:	a1 05       	cpc	r26, r1
    3118:	b1 05       	cpc	r27, r1
    311a:	09 f0       	breq	.+2      	; 0x311e <.L325>
    311c:	20 e0       	ldi	r18, 0x00	; 0

0000311e <.L325>:
    311e:	82 2f       	mov	r24, r18

00003120 <.Loc.839>:
            }
    3120:	0f 90       	pop	r0
    3122:	0f 90       	pop	r0
    3124:	df 91       	pop	r29
    3126:	cf 91       	pop	r28
    3128:	08 95       	ret

0000312a <_ZN10asyncruino10timer_implINS_9schedulerENS_13default_guardEmhLh1EE13Delay_awaitor13await_suspendENSt7__n486116coroutine_handleIvEE>:
            inline void await_suspend(std::coroutine_handle<> h){
    312a:	cf 93       	push	r28
    312c:	df 93       	push	r29
    312e:	00 d0       	rcall	.+0      	; 0x3130 <L0^A>

00003130 <L0^A>:
    3130:	00 d0       	rcall	.+0      	; 0x3132 <L0^A>

00003132 <L0^A>:
    3132:	00 d0       	rcall	.+0      	; 0x3134 <L0^A>

00003134 <L0^A>:
    3134:	cd b7       	in	r28, 0x3d	; 61
    3136:	de b7       	in	r29, 0x3e	; 62
    3138:	9a 83       	std	Y+2, r25	; 0x02
    313a:	89 83       	std	Y+1, r24	; 0x01
    313c:	7c 83       	std	Y+4, r23	; 0x04
    313e:	6b 83       	std	Y+3, r22	; 0x03

00003140 <.Loc.841>:
                m_timer->push_listener(h,wait_ticks);
    3140:	89 81       	ldd	r24, Y+1	; 0x01
    3142:	9a 81       	ldd	r25, Y+2	; 0x02
    3144:	dc 01       	movw	r26, r24
    3146:	14 96       	adiw	r26, 0x04	; 4
    3148:	0d 90       	ld	r0, X+
    314a:	bc 91       	ld	r27, X
    314c:	a0 2d       	mov	r26, r0
    314e:	be 83       	std	Y+6, r27	; 0x06
    3150:	ad 83       	std	Y+5, r26	; 0x05

00003152 <.Loc.842>:
    3152:	89 81       	ldd	r24, Y+1	; 0x01
    3154:	9a 81       	ldd	r25, Y+2	; 0x02
    3156:	fc 01       	movw	r30, r24
    3158:	80 81       	ld	r24, Z
    315a:	91 81       	ldd	r25, Z+1	; 0x01
    315c:	a2 81       	ldd	r26, Z+2	; 0x02
    315e:	b3 81       	ldd	r27, Z+3	; 0x03
    3160:	6b 81       	ldd	r22, Y+3	; 0x03
    3162:	7c 81       	ldd	r23, Y+4	; 0x04
    3164:	9c 01       	movw	r18, r24
    3166:	ad 01       	movw	r20, r26
    3168:	8d 81       	ldd	r24, Y+5	; 0x05
    316a:	9e 81       	ldd	r25, Y+6	; 0x06
    316c:	0e 94 91 1e 	call	0x3d22	; 0x3d22 <_ZN10asyncruino10timer_implINS_9schedulerENS_13default_guardEmhLh1EE13push_listenerENSt7__n486116coroutine_handleIvEEm>

00003170 <.Loc.843>:
            }
    3170:	00 00       	nop
    3172:	0f 90       	pop	r0
    3174:	0f 90       	pop	r0
    3176:	0f 90       	pop	r0
    3178:	0f 90       	pop	r0
    317a:	0f 90       	pop	r0
    317c:	0f 90       	pop	r0
    317e:	df 91       	pop	r29
    3180:	cf 91       	pop	r28
    3182:	08 95       	ret

00003184 <_ZN10asyncruino10timer_implINS_9schedulerENS_13default_guardEmhLh1EE13Delay_awaitor12await_resumeEv>:
            inline void await_resume(){}
    3184:	cf 93       	push	r28
    3186:	df 93       	push	r29
    3188:	00 d0       	rcall	.+0      	; 0x318a <L0^A>

0000318a <L0^A>:
    318a:	cd b7       	in	r28, 0x3d	; 61
    318c:	de b7       	in	r29, 0x3e	; 62
    318e:	9a 83       	std	Y+2, r25	; 0x02
    3190:	89 83       	std	Y+1, r24	; 0x01

00003192 <.Loc.845>:
    3192:	00 00       	nop
    3194:	0f 90       	pop	r0
    3196:	0f 90       	pop	r0
    3198:	df 91       	pop	r29
    319a:	cf 91       	pop	r28
    319c:	08 95       	ret

0000319e <_ZN10asyncruino4pipeINSt7__n486116coroutine_handleIvEEjLj32EEC1Ev>:

	T _data[reserved_size];
	size_type _start;
	size_type _size;
	public:
	inline pipe():
    319e:	cf 93       	push	r28
    31a0:	df 93       	push	r29
    31a2:	00 d0       	rcall	.+0      	; 0x31a4 <L0^A>

000031a4 <L0^A>:
    31a4:	cd b7       	in	r28, 0x3d	; 61
    31a6:	de b7       	in	r29, 0x3e	; 62
    31a8:	9a 83       	std	Y+2, r25	; 0x02
    31aa:	89 83       	std	Y+1, r24	; 0x01

000031ac <.Loc.847>:
		_start(0),_size(0){
    31ac:	89 81       	ldd	r24, Y+1	; 0x01
    31ae:	9a 81       	ldd	r25, Y+2	; 0x02
    31b0:	20 e4       	ldi	r18, 0x40	; 64
    31b2:	fc 01       	movw	r30, r24
    31b4:	32 2f       	mov	r19, r18

000031b6 <.L^B5>:
    31b6:	11 92       	st	Z+, r1
    31b8:	3a 95       	dec	r19
    31ba:	e9 f7       	brne	.-6      	; 0x31b6 <.L^B5>

000031bc <.Loc.848>:
    31bc:	89 81       	ldd	r24, Y+1	; 0x01
    31be:	9a 81       	ldd	r25, Y+2	; 0x02
    31c0:	80 5c       	subi	r24, 0xC0	; 192
    31c2:	9f 4f       	sbci	r25, 0xFF	; 255
    31c4:	fc 01       	movw	r30, r24
    31c6:	11 82       	std	Z+1, r1	; 0x01
    31c8:	10 82       	st	Z, r1

000031ca <.Loc.849>:
    31ca:	89 81       	ldd	r24, Y+1	; 0x01
    31cc:	9a 81       	ldd	r25, Y+2	; 0x02
    31ce:	8e 5b       	subi	r24, 0xBE	; 190
    31d0:	9f 4f       	sbci	r25, 0xFF	; 255
    31d2:	fc 01       	movw	r30, r24
    31d4:	11 82       	std	Z+1, r1	; 0x01
    31d6:	10 82       	st	Z, r1

000031d8 <.Loc.850>:
			//static_assert(is_deg_2<reserved_size>::value,"pipe size should be degree of 2");
		}
    31d8:	00 00       	nop
    31da:	0f 90       	pop	r0
    31dc:	0f 90       	pop	r0
    31de:	df 91       	pop	r29
    31e0:	cf 91       	pop	r28
    31e2:	08 95       	ret

000031e4 <_ZNK10asyncruino4pipeINSt7__n486116coroutine_handleIvEEjLj32EE5emptyEv>:
	
	/**
	\return if the queue is empty
	*/
	inline  bool empty()const {return !_size;}
    31e4:	cf 93       	push	r28
    31e6:	df 93       	push	r29
    31e8:	00 d0       	rcall	.+0      	; 0x31ea <L0^A>

000031ea <L0^A>:
    31ea:	cd b7       	in	r28, 0x3d	; 61
    31ec:	de b7       	in	r29, 0x3e	; 62
    31ee:	9a 83       	std	Y+2, r25	; 0x02
    31f0:	89 83       	std	Y+1, r24	; 0x01

000031f2 <.Loc.852>:
    31f2:	89 81       	ldd	r24, Y+1	; 0x01
    31f4:	9a 81       	ldd	r25, Y+2	; 0x02
    31f6:	8e 5b       	subi	r24, 0xBE	; 190
    31f8:	9f 4f       	sbci	r25, 0xFF	; 255
    31fa:	fc 01       	movw	r30, r24
    31fc:	80 81       	ld	r24, Z
    31fe:	91 81       	ldd	r25, Z+1	; 0x01
    3200:	21 e0       	ldi	r18, 0x01	; 1
    3202:	00 97       	sbiw	r24, 0x00	; 0
    3204:	09 f0       	breq	.+2      	; 0x3208 <.L331>
    3206:	20 e0       	ldi	r18, 0x00	; 0

00003208 <.L331>:
    3208:	82 2f       	mov	r24, r18

0000320a <.Loc.854>:
    320a:	0f 90       	pop	r0
    320c:	0f 90       	pop	r0
    320e:	df 91       	pop	r29
    3210:	cf 91       	pop	r28
    3212:	08 95       	ret

00003214 <_ZN10asyncruino4pipeINSt7__n486116coroutine_handleIvEEjLj32EE4readERS3_>:
		T * m_ptr = _data + (_start+_size)%reserved;
		*m_ptr = value;
		_size++;
		return true;
	}
	inline bool read(T & value){
    3214:	cf 93       	push	r28
    3216:	df 93       	push	r29
    3218:	00 d0       	rcall	.+0      	; 0x321a <L0^A>

0000321a <L0^A>:
    321a:	00 d0       	rcall	.+0      	; 0x321c <L0^A>

0000321c <L0^A>:
    321c:	cd b7       	in	r28, 0x3d	; 61
    321e:	de b7       	in	r29, 0x3e	; 62
    3220:	9a 83       	std	Y+2, r25	; 0x02
    3222:	89 83       	std	Y+1, r24	; 0x01
    3224:	7c 83       	std	Y+4, r23	; 0x04
    3226:	6b 83       	std	Y+3, r22	; 0x03

00003228 <.Loc.856>:
		if(_size){
    3228:	89 81       	ldd	r24, Y+1	; 0x01
    322a:	9a 81       	ldd	r25, Y+2	; 0x02
    322c:	8e 5b       	subi	r24, 0xBE	; 190
    322e:	9f 4f       	sbci	r25, 0xFF	; 255
    3230:	fc 01       	movw	r30, r24
    3232:	80 81       	ld	r24, Z
    3234:	91 81       	ldd	r25, Z+1	; 0x01

00003236 <.Loc.857>:
    3236:	00 97       	sbiw	r24, 0x00	; 0
    3238:	09 f4       	brne	.+2      	; 0x323c <.Loc.858>

0000323a <L0^A>:
    323a:	4b c0       	rjmp	.+150    	; 0x32d2 <.L333>

0000323c <.Loc.858>:
			value = _data[_start];
    323c:	89 81       	ldd	r24, Y+1	; 0x01
    323e:	9a 81       	ldd	r25, Y+2	; 0x02
    3240:	80 5c       	subi	r24, 0xC0	; 192
    3242:	9f 4f       	sbci	r25, 0xFF	; 255
    3244:	fc 01       	movw	r30, r24
    3246:	20 81       	ld	r18, Z
    3248:	31 81       	ldd	r19, Z+1	; 0x01

0000324a <.Loc.859>:
    324a:	8b 81       	ldd	r24, Y+3	; 0x03
    324c:	9c 81       	ldd	r25, Y+4	; 0x04
    324e:	49 81       	ldd	r20, Y+1	; 0x01
    3250:	5a 81       	ldd	r21, Y+2	; 0x02
    3252:	22 0f       	add	r18, r18
    3254:	33 1f       	adc	r19, r19
    3256:	24 0f       	add	r18, r20
    3258:	35 1f       	adc	r19, r21
    325a:	f9 01       	movw	r30, r18
    325c:	20 81       	ld	r18, Z
    325e:	31 81       	ldd	r19, Z+1	; 0x01
    3260:	fc 01       	movw	r30, r24
    3262:	31 83       	std	Z+1, r19	; 0x01
    3264:	20 83       	st	Z, r18

00003266 <.Loc.860>:
			_start++;
    3266:	89 81       	ldd	r24, Y+1	; 0x01
    3268:	9a 81       	ldd	r25, Y+2	; 0x02
    326a:	80 5c       	subi	r24, 0xC0	; 192
    326c:	9f 4f       	sbci	r25, 0xFF	; 255
    326e:	fc 01       	movw	r30, r24
    3270:	80 81       	ld	r24, Z
    3272:	91 81       	ldd	r25, Z+1	; 0x01
    3274:	9c 01       	movw	r18, r24
    3276:	2f 5f       	subi	r18, 0xFF	; 255
    3278:	3f 4f       	sbci	r19, 0xFF	; 255
    327a:	89 81       	ldd	r24, Y+1	; 0x01
    327c:	9a 81       	ldd	r25, Y+2	; 0x02
    327e:	80 5c       	subi	r24, 0xC0	; 192
    3280:	9f 4f       	sbci	r25, 0xFF	; 255
    3282:	fc 01       	movw	r30, r24
    3284:	31 83       	std	Z+1, r19	; 0x01
    3286:	20 83       	st	Z, r18

00003288 <.Loc.861>:
			if(_start >= reserved){
    3288:	89 81       	ldd	r24, Y+1	; 0x01
    328a:	9a 81       	ldd	r25, Y+2	; 0x02
    328c:	80 5c       	subi	r24, 0xC0	; 192
    328e:	9f 4f       	sbci	r25, 0xFF	; 255
    3290:	fc 01       	movw	r30, r24
    3292:	80 81       	ld	r24, Z
    3294:	91 81       	ldd	r25, Z+1	; 0x01

00003296 <.Loc.862>:
    3296:	8f 31       	cpi	r24, 0x1F	; 31
    3298:	91 05       	cpc	r25, r1
    329a:	41 f0       	breq	.+16     	; 0x32ac <.L334>
    329c:	38 f0       	brcs	.+14     	; 0x32ac <.L334>

0000329e <.Loc.863>:
				_start = 0;
    329e:	89 81       	ldd	r24, Y+1	; 0x01
    32a0:	9a 81       	ldd	r25, Y+2	; 0x02
    32a2:	80 5c       	subi	r24, 0xC0	; 192
    32a4:	9f 4f       	sbci	r25, 0xFF	; 255
    32a6:	fc 01       	movw	r30, r24
    32a8:	11 82       	std	Z+1, r1	; 0x01
    32aa:	10 82       	st	Z, r1

000032ac <.L334>:
			}
			_size--;
    32ac:	89 81       	ldd	r24, Y+1	; 0x01
    32ae:	9a 81       	ldd	r25, Y+2	; 0x02
    32b0:	8e 5b       	subi	r24, 0xBE	; 190
    32b2:	9f 4f       	sbci	r25, 0xFF	; 255
    32b4:	fc 01       	movw	r30, r24
    32b6:	80 81       	ld	r24, Z
    32b8:	91 81       	ldd	r25, Z+1	; 0x01
    32ba:	9c 01       	movw	r18, r24
    32bc:	21 50       	subi	r18, 0x01	; 1
    32be:	31 09       	sbc	r19, r1
    32c0:	89 81       	ldd	r24, Y+1	; 0x01
    32c2:	9a 81       	ldd	r25, Y+2	; 0x02
    32c4:	8e 5b       	subi	r24, 0xBE	; 190
    32c6:	9f 4f       	sbci	r25, 0xFF	; 255
    32c8:	fc 01       	movw	r30, r24
    32ca:	31 83       	std	Z+1, r19	; 0x01
    32cc:	20 83       	st	Z, r18

000032ce <.Loc.865>:
			return true;
    32ce:	81 e0       	ldi	r24, 0x01	; 1
    32d0:	01 c0       	rjmp	.+2      	; 0x32d4 <.L335>

000032d2 <.L333>:
		}
		return false;
    32d2:	80 e0       	ldi	r24, 0x00	; 0

000032d4 <.L335>:
	}
    32d4:	0f 90       	pop	r0
    32d6:	0f 90       	pop	r0
    32d8:	0f 90       	pop	r0
    32da:	0f 90       	pop	r0
    32dc:	df 91       	pop	r29
    32de:	cf 91       	pop	r28
    32e0:	08 95       	ret

000032e2 <_ZN10asyncruino15sheduler_getterINS_9schedulerEEC1ERS1_>:
    };

    template <StaticScheduler sched_t>
    struct sheduler_getter<sched_t>{
        inline static sched_t & _get_sheduler(){return sched_t::instance();}
        sheduler_getter(sched_t & _shed){}
    32e2:	cf 93       	push	r28
    32e4:	df 93       	push	r29
    32e6:	00 d0       	rcall	.+0      	; 0x32e8 <L0^A>

000032e8 <L0^A>:
    32e8:	00 d0       	rcall	.+0      	; 0x32ea <L0^A>

000032ea <L0^A>:
    32ea:	cd b7       	in	r28, 0x3d	; 61
    32ec:	de b7       	in	r29, 0x3e	; 62
    32ee:	9a 83       	std	Y+2, r25	; 0x02
    32f0:	89 83       	std	Y+1, r24	; 0x01
    32f2:	7c 83       	std	Y+4, r23	; 0x04
    32f4:	6b 83       	std	Y+3, r22	; 0x03

000032f6 <.Loc.869>:
    32f6:	00 00       	nop
    32f8:	0f 90       	pop	r0
    32fa:	0f 90       	pop	r0
    32fc:	0f 90       	pop	r0
    32fe:	0f 90       	pop	r0
    3300:	df 91       	pop	r29
    3302:	cf 91       	pop	r28
    3304:	08 95       	ret

00003306 <_ZN10asyncruino4pipeIchLh32EEC1Ev>:
	inline pipe():
    3306:	cf 93       	push	r28
    3308:	df 93       	push	r29
    330a:	00 d0       	rcall	.+0      	; 0x330c <L0^A>

0000330c <L0^A>:
    330c:	cd b7       	in	r28, 0x3d	; 61
    330e:	de b7       	in	r29, 0x3e	; 62
    3310:	9a 83       	std	Y+2, r25	; 0x02
    3312:	89 83       	std	Y+1, r24	; 0x01

00003314 <.Loc.871>:
		_start(0),_size(0){
    3314:	89 81       	ldd	r24, Y+1	; 0x01
    3316:	9a 81       	ldd	r25, Y+2	; 0x02
    3318:	fc 01       	movw	r30, r24
    331a:	10 a2       	std	Z+32, r1	; 0x20

0000331c <.Loc.872>:
    331c:	89 81       	ldd	r24, Y+1	; 0x01
    331e:	9a 81       	ldd	r25, Y+2	; 0x02
    3320:	fc 01       	movw	r30, r24
    3322:	11 a2       	std	Z+33, r1	; 0x21

00003324 <.Loc.873>:
		}
    3324:	00 00       	nop
    3326:	0f 90       	pop	r0
    3328:	0f 90       	pop	r0
    332a:	df 91       	pop	r29
    332c:	cf 91       	pop	r28
    332e:	08 95       	ret

00003330 <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE9coro_dataC1Ev>:
        struct coro_data{
    3330:	cf 93       	push	r28
    3332:	df 93       	push	r29
    3334:	00 d0       	rcall	.+0      	; 0x3336 <L0^A>

00003336 <L0^A>:
    3336:	cd b7       	in	r28, 0x3d	; 61
    3338:	de b7       	in	r29, 0x3e	; 62
    333a:	9a 83       	std	Y+2, r25	; 0x02
    333c:	89 83       	std	Y+1, r24	; 0x01

0000333e <.Loc.875>:
    333e:	89 81       	ldd	r24, Y+1	; 0x01
    3340:	9a 81       	ldd	r25, Y+2	; 0x02
    3342:	01 96       	adiw	r24, 0x01	; 1
    3344:	0e 94 7b 00 	call	0xf6	; 0xf6 <_ZNSt7__n486116coroutine_handleIvEC1Ev>
    3348:	00 00       	nop
    334a:	0f 90       	pop	r0
    334c:	0f 90       	pop	r0
    334e:	df 91       	pop	r29
    3350:	cf 91       	pop	r28
    3352:	08 95       	ret

00003354 <_ZN10asyncruino8optionalINS_16async_input_implINS_9schedulerENS_13default_guardEhLh32EE9coro_dataEEC1Ev>:

    template <typename T>
    struct optional{
        T value;
        bool valid;
        inline optional():valid(false){}
    3354:	cf 93       	push	r28
    3356:	df 93       	push	r29
    3358:	00 d0       	rcall	.+0      	; 0x335a <L0^A>

0000335a <L0^A>:
    335a:	cd b7       	in	r28, 0x3d	; 61
    335c:	de b7       	in	r29, 0x3e	; 62
    335e:	9a 83       	std	Y+2, r25	; 0x02
    3360:	89 83       	std	Y+1, r24	; 0x01

00003362 <.Loc.877>:
    3362:	89 81       	ldd	r24, Y+1	; 0x01
    3364:	9a 81       	ldd	r25, Y+2	; 0x02
    3366:	0e 94 98 19 	call	0x3330	; 0x3330 <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE9coro_dataC1Ev>

0000336a <.Loc.878>:
    336a:	89 81       	ldd	r24, Y+1	; 0x01
    336c:	9a 81       	ldd	r25, Y+2	; 0x02
    336e:	fc 01       	movw	r30, r24
    3370:	13 82       	std	Z+3, r1	; 0x03

00003372 <.Loc.879>:
    3372:	00 00       	nop
    3374:	0f 90       	pop	r0
    3376:	0f 90       	pop	r0
    3378:	df 91       	pop	r29
    337a:	cf 91       	pop	r28
    337c:	08 95       	ret

0000337e <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE9coro_dataC1Ev>:
        struct coro_data{
    337e:	cf 93       	push	r28
    3380:	df 93       	push	r29
    3382:	00 d0       	rcall	.+0      	; 0x3384 <L0^A>

00003384 <L0^A>:
    3384:	cd b7       	in	r28, 0x3d	; 61
    3386:	de b7       	in	r29, 0x3e	; 62
    3388:	9a 83       	std	Y+2, r25	; 0x02
    338a:	89 83       	std	Y+1, r24	; 0x01

0000338c <.Loc.881>:
    338c:	89 81       	ldd	r24, Y+1	; 0x01
    338e:	9a 81       	ldd	r25, Y+2	; 0x02
    3390:	01 96       	adiw	r24, 0x01	; 1
    3392:	0e 94 7b 00 	call	0xf6	; 0xf6 <_ZNSt7__n486116coroutine_handleIvEC1Ev>
    3396:	00 00       	nop
    3398:	0f 90       	pop	r0
    339a:	0f 90       	pop	r0
    339c:	df 91       	pop	r29
    339e:	cf 91       	pop	r28
    33a0:	08 95       	ret

000033a2 <_ZN10asyncruino8optionalINS_17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE9coro_dataEEC1Ev>:
    33a2:	cf 93       	push	r28
    33a4:	df 93       	push	r29
    33a6:	00 d0       	rcall	.+0      	; 0x33a8 <L0^A>

000033a8 <L0^A>:
    33a8:	cd b7       	in	r28, 0x3d	; 61
    33aa:	de b7       	in	r29, 0x3e	; 62
    33ac:	9a 83       	std	Y+2, r25	; 0x02
    33ae:	89 83       	std	Y+1, r24	; 0x01

000033b0 <.Loc.883>:
    33b0:	89 81       	ldd	r24, Y+1	; 0x01
    33b2:	9a 81       	ldd	r25, Y+2	; 0x02
    33b4:	0e 94 bf 19 	call	0x337e	; 0x337e <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE9coro_dataC1Ev>

000033b8 <.Loc.884>:
    33b8:	89 81       	ldd	r24, Y+1	; 0x01
    33ba:	9a 81       	ldd	r25, Y+2	; 0x02
    33bc:	fc 01       	movw	r30, r24
    33be:	13 82       	std	Z+3, r1	; 0x03

000033c0 <.Loc.885>:
    33c0:	00 00       	nop
    33c2:	0f 90       	pop	r0
    33c4:	0f 90       	pop	r0
    33c6:	df 91       	pop	r29
    33c8:	cf 91       	pop	r28
    33ca:	08 95       	ret

000033cc <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE17read_byte_awaitorC1ERS3_>:
            inline read_byte_awaitor(async_input_impl &_input_impl):
    33cc:	cf 93       	push	r28
    33ce:	df 93       	push	r29
    33d0:	00 d0       	rcall	.+0      	; 0x33d2 <L0^A>

000033d2 <L0^A>:
    33d2:	00 d0       	rcall	.+0      	; 0x33d4 <L0^A>

000033d4 <L0^A>:
    33d4:	cd b7       	in	r28, 0x3d	; 61
    33d6:	de b7       	in	r29, 0x3e	; 62
    33d8:	9a 83       	std	Y+2, r25	; 0x02
    33da:	89 83       	std	Y+1, r24	; 0x01
    33dc:	7c 83       	std	Y+4, r23	; 0x04
    33de:	6b 83       	std	Y+3, r22	; 0x03

000033e0 <.Loc.887>:
                m_input(&_input_impl){
    33e0:	89 81       	ldd	r24, Y+1	; 0x01
    33e2:	9a 81       	ldd	r25, Y+2	; 0x02
    33e4:	2b 81       	ldd	r18, Y+3	; 0x03
    33e6:	3c 81       	ldd	r19, Y+4	; 0x04
    33e8:	fc 01       	movw	r30, r24
    33ea:	31 83       	std	Z+1, r19	; 0x01
    33ec:	20 83       	st	Z, r18

000033ee <.Loc.888>:
                m_input->m_guard.lock();
    33ee:	89 81       	ldd	r24, Y+1	; 0x01
    33f0:	9a 81       	ldd	r25, Y+2	; 0x02
    33f2:	fc 01       	movw	r30, r24
    33f4:	80 81       	ld	r24, Z
    33f6:	91 81       	ldd	r25, Z+1	; 0x01

000033f8 <.Loc.889>:
    33f8:	88 96       	adiw	r24, 0x28	; 40
    33fa:	0e 94 1e 01 	call	0x23c	; 0x23c <_ZN10asyncruino13default_guard4lockEv>

000033fe <.Loc.890>:
                is_ready = m_input->read_from_buf_byte(ready_char);
    33fe:	89 81       	ldd	r24, Y+1	; 0x01
    3400:	9a 81       	ldd	r25, Y+2	; 0x02
    3402:	fc 01       	movw	r30, r24
    3404:	20 81       	ld	r18, Z
    3406:	31 81       	ldd	r19, Z+1	; 0x01

00003408 <.Loc.891>:
    3408:	89 81       	ldd	r24, Y+1	; 0x01
    340a:	9a 81       	ldd	r25, Y+2	; 0x02
    340c:	03 96       	adiw	r24, 0x03	; 3

0000340e <.Loc.892>:
    340e:	bc 01       	movw	r22, r24
    3410:	c9 01       	movw	r24, r18
    3412:	0e 94 00 1f 	call	0x3e00	; 0x3e00 <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE18read_from_buf_byteERc>
    3416:	28 2f       	mov	r18, r24

00003418 <.Loc.893>:
    3418:	89 81       	ldd	r24, Y+1	; 0x01
    341a:	9a 81       	ldd	r25, Y+2	; 0x02
    341c:	fc 01       	movw	r30, r24
    341e:	22 83       	std	Z+2, r18	; 0x02

00003420 <.Loc.894>:
            }
    3420:	00 00       	nop
    3422:	0f 90       	pop	r0
    3424:	0f 90       	pop	r0
    3426:	0f 90       	pop	r0
    3428:	0f 90       	pop	r0
    342a:	df 91       	pop	r29
    342c:	cf 91       	pop	r28
    342e:	08 95       	ret

00003430 <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE24read_bytes_until_awaitorILh1EEC1ERS3_PchPKc>:
            inline read_bytes_until_awaitor(
    3430:	0f 93       	push	r16
    3432:	1f 93       	push	r17
    3434:	cf 93       	push	r28
    3436:	df 93       	push	r29
    3438:	cd b7       	in	r28, 0x3d	; 61
    343a:	de b7       	in	r29, 0x3e	; 62
    343c:	2b 97       	sbiw	r28, 0x0b	; 11
    343e:	0f b6       	in	r0, 0x3f	; 63
    3440:	f8 94       	cli
    3442:	de bf       	out	0x3e, r29	; 62
    3444:	0f be       	out	0x3f, r0	; 63
    3446:	cd bf       	out	0x3d, r28	; 61
    3448:	9c 83       	std	Y+4, r25	; 0x04
    344a:	8b 83       	std	Y+3, r24	; 0x03
    344c:	7e 83       	std	Y+6, r23	; 0x06
    344e:	6d 83       	std	Y+5, r22	; 0x05
    3450:	58 87       	std	Y+8, r21	; 0x08
    3452:	4f 83       	std	Y+7, r20	; 0x07
    3454:	29 87       	std	Y+9, r18	; 0x09
    3456:	1b 87       	std	Y+11, r17	; 0x0b
    3458:	0a 87       	std	Y+10, r16	; 0x0a

0000345a <.Loc.896>:
            m_input(&_input_impl){
    345a:	8b 81       	ldd	r24, Y+3	; 0x03
    345c:	9c 81       	ldd	r25, Y+4	; 0x04
    345e:	2d 81       	ldd	r18, Y+5	; 0x05
    3460:	3e 81       	ldd	r19, Y+6	; 0x06
    3462:	dc 01       	movw	r26, r24
    3464:	2d 93       	st	X+, r18
    3466:	3c 93       	st	X, r19

00003468 <.Loc.897>:
                m_input->m_guard.lock();
    3468:	8b 81       	ldd	r24, Y+3	; 0x03
    346a:	9c 81       	ldd	r25, Y+4	; 0x04
    346c:	fc 01       	movw	r30, r24
    346e:	80 81       	ld	r24, Z
    3470:	91 81       	ldd	r25, Z+1	; 0x01

00003472 <.Loc.898>:
    3472:	88 96       	adiw	r24, 0x28	; 40
    3474:	0e 94 1e 01 	call	0x23c	; 0x23c <_ZN10asyncruino13default_guard4lockEv>

00003478 <.LBB111>:
                    c0 = seq[0];
    3478:	8a 85       	ldd	r24, Y+10	; 0x0a
    347a:	9b 85       	ldd	r25, Y+11	; 0x0b
    347c:	dc 01       	movw	r26, r24
    347e:	2c 91       	ld	r18, X

00003480 <.Loc.900>:
    3480:	8b 81       	ldd	r24, Y+3	; 0x03
    3482:	9c 81       	ldd	r25, Y+4	; 0x04
    3484:	fc 01       	movw	r30, r24
    3486:	26 83       	std	Z+6, r18	; 0x06

00003488 <.Loc.901>:
                    read_until_1_ret_t res_1 = m_input->read_from_buf_until_1_bytes(m_dest,c0,m_bytes_to_read);
    3488:	8b 81       	ldd	r24, Y+3	; 0x03
    348a:	9c 81       	ldd	r25, Y+4	; 0x04
    348c:	dc 01       	movw	r26, r24
    348e:	ed 91       	ld	r30, X+
    3490:	fc 91       	ld	r31, X

00003492 <.Loc.902>:
    3492:	8b 81       	ldd	r24, Y+3	; 0x03
    3494:	9c 81       	ldd	r25, Y+4	; 0x04
    3496:	dc 01       	movw	r26, r24
    3498:	16 96       	adiw	r26, 0x06	; 6
    349a:	3c 91       	ld	r19, X
    349c:	8f 81       	ldd	r24, Y+7	; 0x07
    349e:	98 85       	ldd	r25, Y+8	; 0x08
    34a0:	29 85       	ldd	r18, Y+9	; 0x09
    34a2:	43 2f       	mov	r20, r19
    34a4:	bc 01       	movw	r22, r24
    34a6:	cf 01       	movw	r24, r30
    34a8:	0e 94 18 1f 	call	0x3e30	; 0x3e30 <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE27read_from_buf_until_1_bytesEPcch>
    34ac:	9a 83       	std	Y+2, r25	; 0x02
    34ae:	89 83       	std	Y+1, r24	; 0x01

000034b0 <.Loc.903>:
                    already_read = res_1.read_bytes;
    34b0:	29 81       	ldd	r18, Y+1	; 0x01

000034b2 <.Loc.904>:
    34b2:	8b 81       	ldd	r24, Y+3	; 0x03
    34b4:	9c 81       	ldd	r25, Y+4	; 0x04
    34b6:	fc 01       	movw	r30, r24
    34b8:	23 83       	std	Z+3, r18	; 0x03

000034ba <.Loc.905>:
                    aw_ready = res_1.success;
    34ba:	2a 81       	ldd	r18, Y+2	; 0x02

000034bc <.Loc.906>:
    34bc:	8b 81       	ldd	r24, Y+3	; 0x03
    34be:	9c 81       	ldd	r25, Y+4	; 0x04
    34c0:	dc 01       	movw	r26, r24
    34c2:	19 96       	adiw	r26, 0x09	; 9
    34c4:	2c 93       	st	X, r18

000034c6 <.LBE111>:
                bytes_to_read =m_bytes_to_read - already_read;
    34c6:	8b 81       	ldd	r24, Y+3	; 0x03
    34c8:	9c 81       	ldd	r25, Y+4	; 0x04
    34ca:	fc 01       	movw	r30, r24
    34cc:	83 81       	ldd	r24, Z+3	; 0x03

000034ce <.Loc.908>:
    34ce:	99 85       	ldd	r25, Y+9	; 0x09
    34d0:	29 2f       	mov	r18, r25
    34d2:	28 1b       	sub	r18, r24

000034d4 <.Loc.909>:
    34d4:	8b 81       	ldd	r24, Y+3	; 0x03
    34d6:	9c 81       	ldd	r25, Y+4	; 0x04
    34d8:	dc 01       	movw	r26, r24
    34da:	12 96       	adiw	r26, 0x02	; 2
    34dc:	2c 93       	st	X, r18

000034de <.Loc.910>:
                dest = m_dest + already_read;
    34de:	8b 81       	ldd	r24, Y+3	; 0x03
    34e0:	9c 81       	ldd	r25, Y+4	; 0x04
    34e2:	fc 01       	movw	r30, r24
    34e4:	83 81       	ldd	r24, Z+3	; 0x03
    34e6:	88 2f       	mov	r24, r24
    34e8:	90 e0       	ldi	r25, 0x00	; 0

000034ea <.Loc.911>:
    34ea:	2f 81       	ldd	r18, Y+7	; 0x07
    34ec:	38 85       	ldd	r19, Y+8	; 0x08
    34ee:	28 0f       	add	r18, r24
    34f0:	39 1f       	adc	r19, r25

000034f2 <.Loc.912>:
    34f2:	8b 81       	ldd	r24, Y+3	; 0x03
    34f4:	9c 81       	ldd	r25, Y+4	; 0x04
    34f6:	dc 01       	movw	r26, r24
    34f8:	15 96       	adiw	r26, 0x05	; 5
    34fa:	3c 93       	st	X, r19
    34fc:	2e 93       	st	-X, r18
    34fe:	14 97       	sbiw	r26, 0x04	; 4

00003500 <.Loc.913>:
            }
    3500:	00 00       	nop
    3502:	2b 96       	adiw	r28, 0x0b	; 11
    3504:	0f b6       	in	r0, 0x3f	; 63
    3506:	f8 94       	cli
    3508:	de bf       	out	0x3e, r29	; 62
    350a:	0f be       	out	0x3f, r0	; 63
    350c:	cd bf       	out	0x3d, r28	; 61
    350e:	df 91       	pop	r29
    3510:	cf 91       	pop	r28
    3512:	1f 91       	pop	r17
    3514:	0f 91       	pop	r16
    3516:	08 95       	ret

00003518 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE18write_byte_awaitorC1ERS4_c>:
            inline write_byte_awaitor(async_output_impl & _input_impl,char byte):m_input(&_input_impl),byte(byte){
    3518:	cf 93       	push	r28
    351a:	df 93       	push	r29
    351c:	00 d0       	rcall	.+0      	; 0x351e <L0^A>

0000351e <L0^A>:
    351e:	00 d0       	rcall	.+0      	; 0x3520 <L0^A>

00003520 <L0^A>:
    3520:	0f 92       	push	r0
    3522:	cd b7       	in	r28, 0x3d	; 61
    3524:	de b7       	in	r29, 0x3e	; 62
    3526:	9a 83       	std	Y+2, r25	; 0x02
    3528:	89 83       	std	Y+1, r24	; 0x01
    352a:	7c 83       	std	Y+4, r23	; 0x04
    352c:	6b 83       	std	Y+3, r22	; 0x03
    352e:	4d 83       	std	Y+5, r20	; 0x05

00003530 <.Loc.915>:
    3530:	89 81       	ldd	r24, Y+1	; 0x01
    3532:	9a 81       	ldd	r25, Y+2	; 0x02
    3534:	2b 81       	ldd	r18, Y+3	; 0x03
    3536:	3c 81       	ldd	r19, Y+4	; 0x04
    3538:	fc 01       	movw	r30, r24
    353a:	31 83       	std	Z+1, r19	; 0x01
    353c:	20 83       	st	Z, r18

0000353e <.Loc.916>:
    353e:	89 81       	ldd	r24, Y+1	; 0x01
    3540:	9a 81       	ldd	r25, Y+2	; 0x02
    3542:	2d 81       	ldd	r18, Y+5	; 0x05
    3544:	fc 01       	movw	r30, r24
    3546:	22 83       	std	Z+2, r18	; 0x02

00003548 <.Loc.917>:
                m_input->m_guard.lock();
    3548:	89 81       	ldd	r24, Y+1	; 0x01
    354a:	9a 81       	ldd	r25, Y+2	; 0x02
    354c:	fc 01       	movw	r30, r24
    354e:	80 81       	ld	r24, Z
    3550:	91 81       	ldd	r25, Z+1	; 0x01

00003552 <.Loc.918>:
    3552:	02 96       	adiw	r24, 0x02	; 2
    3554:	0e 94 1e 01 	call	0x23c	; 0x23c <_ZN10asyncruino13default_guard4lockEv>

00003558 <.Loc.919>:
                if(m_input->m_writer->write_if_ready(byte)){
    3558:	89 81       	ldd	r24, Y+1	; 0x01
    355a:	9a 81       	ldd	r25, Y+2	; 0x02
    355c:	fc 01       	movw	r30, r24
    355e:	80 81       	ld	r24, Z
    3560:	91 81       	ldd	r25, Z+1	; 0x01

00003562 <.Loc.920>:
    3562:	fc 01       	movw	r30, r24
    3564:	80 81       	ld	r24, Z
    3566:	91 81       	ldd	r25, Z+1	; 0x01

00003568 <.Loc.921>:
    3568:	6d 81       	ldd	r22, Y+5	; 0x05
    356a:	0e 94 af 01 	call	0x35e	; 0x35e <_ZN10asyncruino18hardware_uart_impl14write_if_readyEc>

0000356e <.Loc.922>:
    356e:	88 23       	and	r24, r24
    3570:	31 f0       	breq	.+12     	; 0x357e <.L345>

00003572 <.Loc.923>:
                    success = true;
    3572:	89 81       	ldd	r24, Y+1	; 0x01
    3574:	9a 81       	ldd	r25, Y+2	; 0x02
    3576:	21 e0       	ldi	r18, 0x01	; 1
    3578:	fc 01       	movw	r30, r24
    357a:	23 83       	std	Z+3, r18	; 0x03

0000357c <.Loc.924>:
            }
    357c:	04 c0       	rjmp	.+8      	; 0x3586 <.L347>

0000357e <.L345>:
                    success = false;
    357e:	89 81       	ldd	r24, Y+1	; 0x01
    3580:	9a 81       	ldd	r25, Y+2	; 0x02
    3582:	fc 01       	movw	r30, r24
    3584:	13 82       	std	Z+3, r1	; 0x03

00003586 <.L347>:
            }
    3586:	00 00       	nop
    3588:	0f 90       	pop	r0
    358a:	0f 90       	pop	r0
    358c:	0f 90       	pop	r0
    358e:	0f 90       	pop	r0
    3590:	0f 90       	pop	r0
    3592:	df 91       	pop	r29
    3594:	cf 91       	pop	r28
    3596:	08 95       	ret

00003598 <_ZN10asyncruino17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE19write_bytes_awaitorC1ERS4_PKch>:
            inline write_bytes_awaitor(
    3598:	cf 93       	push	r28
    359a:	df 93       	push	r29
    359c:	00 d0       	rcall	.+0      	; 0x359e <L0^A>

0000359e <L0^A>:
    359e:	00 d0       	rcall	.+0      	; 0x35a0 <L0^A>

000035a0 <L0^A>:
    35a0:	00 d0       	rcall	.+0      	; 0x35a2 <L0^A>

000035a2 <L0^A>:
    35a2:	0f 92       	push	r0
    35a4:	cd b7       	in	r28, 0x3d	; 61
    35a6:	de b7       	in	r29, 0x3e	; 62
    35a8:	9a 83       	std	Y+2, r25	; 0x02
    35aa:	89 83       	std	Y+1, r24	; 0x01
    35ac:	7c 83       	std	Y+4, r23	; 0x04
    35ae:	6b 83       	std	Y+3, r22	; 0x03
    35b0:	5e 83       	std	Y+6, r21	; 0x06
    35b2:	4d 83       	std	Y+5, r20	; 0x05
    35b4:	2f 83       	std	Y+7, r18	; 0x07

000035b6 <.Loc.928>:
                async_output_impl & _input_impl,char const *m_bytes,size_type n_bytes):m_input(&_input_impl){
    35b6:	89 81       	ldd	r24, Y+1	; 0x01
    35b8:	9a 81       	ldd	r25, Y+2	; 0x02
    35ba:	2b 81       	ldd	r18, Y+3	; 0x03
    35bc:	3c 81       	ldd	r19, Y+4	; 0x04
    35be:	fc 01       	movw	r30, r24
    35c0:	31 83       	std	Z+1, r19	; 0x01
    35c2:	20 83       	st	Z, r18

000035c4 <.Loc.929>:
                m_input->m_guard.lock();
    35c4:	89 81       	ldd	r24, Y+1	; 0x01
    35c6:	9a 81       	ldd	r25, Y+2	; 0x02
    35c8:	fc 01       	movw	r30, r24
    35ca:	80 81       	ld	r24, Z
    35cc:	91 81       	ldd	r25, Z+1	; 0x01

000035ce <.Loc.930>:
    35ce:	02 96       	adiw	r24, 0x02	; 2
    35d0:	0e 94 1e 01 	call	0x23c	; 0x23c <_ZN10asyncruino13default_guard4lockEv>

000035d4 <.Loc.931>:
                while(n_bytes && m_input->m_writer->write_if_ready(*m_bytes)){
    35d4:	08 c0       	rjmp	.+16     	; 0x35e6 <.L349>

000035d6 <.L352>:
                    n_bytes--;
    35d6:	8f 81       	ldd	r24, Y+7	; 0x07
    35d8:	81 50       	subi	r24, 0x01	; 1
    35da:	8f 83       	std	Y+7, r24	; 0x07

000035dc <.Loc.933>:
                    m_bytes++;
    35dc:	8d 81       	ldd	r24, Y+5	; 0x05
    35de:	9e 81       	ldd	r25, Y+6	; 0x06
    35e0:	01 96       	adiw	r24, 0x01	; 1
    35e2:	9e 83       	std	Y+6, r25	; 0x06
    35e4:	8d 83       	std	Y+5, r24	; 0x05

000035e6 <.L349>:
                while(n_bytes && m_input->m_writer->write_if_ready(*m_bytes)){
    35e6:	8f 81       	ldd	r24, Y+7	; 0x07
    35e8:	88 23       	and	r24, r24
    35ea:	a1 f0       	breq	.+40     	; 0x3614 <.L350>

000035ec <.Loc.935>:
    35ec:	89 81       	ldd	r24, Y+1	; 0x01
    35ee:	9a 81       	ldd	r25, Y+2	; 0x02
    35f0:	fc 01       	movw	r30, r24
    35f2:	80 81       	ld	r24, Z
    35f4:	91 81       	ldd	r25, Z+1	; 0x01

000035f6 <.Loc.936>:
    35f6:	fc 01       	movw	r30, r24
    35f8:	20 81       	ld	r18, Z
    35fa:	31 81       	ldd	r19, Z+1	; 0x01

000035fc <.Loc.937>:
    35fc:	8d 81       	ldd	r24, Y+5	; 0x05
    35fe:	9e 81       	ldd	r25, Y+6	; 0x06
    3600:	fc 01       	movw	r30, r24
    3602:	80 81       	ld	r24, Z
    3604:	68 2f       	mov	r22, r24
    3606:	c9 01       	movw	r24, r18
    3608:	0e 94 af 01 	call	0x35e	; 0x35e <_ZN10asyncruino18hardware_uart_impl14write_if_readyEc>

0000360c <.Loc.938>:
    360c:	88 23       	and	r24, r24
    360e:	11 f0       	breq	.+4      	; 0x3614 <.L350>

00003610 <.Loc.939>:
    3610:	81 e0       	ldi	r24, 0x01	; 1
    3612:	01 c0       	rjmp	.+2      	; 0x3616 <.L351>

00003614 <.L350>:
    3614:	80 e0       	ldi	r24, 0x00	; 0

00003616 <.L351>:
    3616:	88 23       	and	r24, r24
    3618:	f1 f6       	brne	.-68     	; 0x35d6 <.L352>

0000361a <.Loc.942>:
                if(n_bytes){
    361a:	8f 81       	ldd	r24, Y+7	; 0x07
    361c:	88 23       	and	r24, r24
    361e:	89 f0       	breq	.+34     	; 0x3642 <.L353>

00003620 <.Loc.943>:
                    remain_bytes = n_bytes;
    3620:	89 81       	ldd	r24, Y+1	; 0x01
    3622:	9a 81       	ldd	r25, Y+2	; 0x02
    3624:	2f 81       	ldd	r18, Y+7	; 0x07
    3626:	fc 01       	movw	r30, r24
    3628:	24 83       	std	Z+4, r18	; 0x04

0000362a <.Loc.944>:
                    bytes = m_bytes;
    362a:	89 81       	ldd	r24, Y+1	; 0x01
    362c:	9a 81       	ldd	r25, Y+2	; 0x02
    362e:	2d 81       	ldd	r18, Y+5	; 0x05
    3630:	3e 81       	ldd	r19, Y+6	; 0x06
    3632:	fc 01       	movw	r30, r24
    3634:	33 83       	std	Z+3, r19	; 0x03
    3636:	22 83       	std	Z+2, r18	; 0x02

00003638 <.Loc.945>:
                    success = false;
    3638:	89 81       	ldd	r24, Y+1	; 0x01
    363a:	9a 81       	ldd	r25, Y+2	; 0x02
    363c:	fc 01       	movw	r30, r24
    363e:	15 82       	std	Z+5, r1	; 0x05

00003640 <.Loc.946>:
            }
    3640:	05 c0       	rjmp	.+10     	; 0x364c <.L355>

00003642 <.L353>:
                    success = true;
    3642:	89 81       	ldd	r24, Y+1	; 0x01
    3644:	9a 81       	ldd	r25, Y+2	; 0x02
    3646:	21 e0       	ldi	r18, 0x01	; 1
    3648:	fc 01       	movw	r30, r24
    364a:	25 83       	std	Z+5, r18	; 0x05

0000364c <.L355>:
            }
    364c:	00 00       	nop
    364e:	27 96       	adiw	r28, 0x07	; 7
    3650:	0f b6       	in	r0, 0x3f	; 63
    3652:	f8 94       	cli
    3654:	de bf       	out	0x3e, r29	; 62
    3656:	0f be       	out	0x3f, r0	; 63
    3658:	cd bf       	out	0x3d, r28	; 61
    365a:	df 91       	pop	r29
    365c:	cf 91       	pop	r28
    365e:	08 95       	ret

00003660 <_ZNK10asyncruino8optionalINS_16async_input_implINS_9schedulerENS_13default_guardEhLh32EE9coro_dataEEcvbEv>:
            value = n_value;
            valid = true;
            return *this;
        }
        inline void reset(){valid = false;}
        inline operator bool()const{return valid;}
    3660:	cf 93       	push	r28
    3662:	df 93       	push	r29
    3664:	00 d0       	rcall	.+0      	; 0x3666 <L0^A>

00003666 <L0^A>:
    3666:	cd b7       	in	r28, 0x3d	; 61
    3668:	de b7       	in	r29, 0x3e	; 62
    366a:	9a 83       	std	Y+2, r25	; 0x02
    366c:	89 83       	std	Y+1, r24	; 0x01

0000366e <.Loc.950>:
    366e:	89 81       	ldd	r24, Y+1	; 0x01
    3670:	9a 81       	ldd	r25, Y+2	; 0x02
    3672:	fc 01       	movw	r30, r24
    3674:	83 81       	ldd	r24, Z+3	; 0x03

00003676 <.Loc.951>:
    3676:	0f 90       	pop	r0
    3678:	0f 90       	pop	r0
    367a:	df 91       	pop	r29
    367c:	cf 91       	pop	r28
    367e:	08 95       	ret

00003680 <_ZN10asyncruino4pipeIchLh32EE5writeERKc>:
	inline bool write(const T & value){
    3680:	cf 93       	push	r28
    3682:	df 93       	push	r29
    3684:	00 d0       	rcall	.+0      	; 0x3686 <L0^A>

00003686 <L0^A>:
    3686:	00 d0       	rcall	.+0      	; 0x3688 <L0^A>

00003688 <L0^A>:
    3688:	00 d0       	rcall	.+0      	; 0x368a <L0^A>

0000368a <L0^A>:
    368a:	cd b7       	in	r28, 0x3d	; 61
    368c:	de b7       	in	r29, 0x3e	; 62
    368e:	9c 83       	std	Y+4, r25	; 0x04
    3690:	8b 83       	std	Y+3, r24	; 0x03
    3692:	7e 83       	std	Y+6, r23	; 0x06
    3694:	6d 83       	std	Y+5, r22	; 0x05

00003696 <.Loc.953>:
		if(_size == reserved){
    3696:	8b 81       	ldd	r24, Y+3	; 0x03
    3698:	9c 81       	ldd	r25, Y+4	; 0x04
    369a:	fc 01       	movw	r30, r24
    369c:	81 a1       	ldd	r24, Z+33	; 0x21

0000369e <.Loc.954>:
    369e:	80 32       	cpi	r24, 0x20	; 32
    36a0:	11 f4       	brne	.+4      	; 0x36a6 <.L359>

000036a2 <.Loc.955>:
			return false;
    36a2:	80 e0       	ldi	r24, 0x00	; 0
    36a4:	26 c0       	rjmp	.+76     	; 0x36f2 <.L360>

000036a6 <.L359>:
		T * m_ptr = _data + (_start+_size)%reserved;
    36a6:	2b 81       	ldd	r18, Y+3	; 0x03
    36a8:	3c 81       	ldd	r19, Y+4	; 0x04

000036aa <.Loc.957>:
    36aa:	8b 81       	ldd	r24, Y+3	; 0x03
    36ac:	9c 81       	ldd	r25, Y+4	; 0x04
    36ae:	fc 01       	movw	r30, r24
    36b0:	40 a1       	ldd	r20, Z+32	; 0x20

000036b2 <.Loc.958>:
    36b2:	8b 81       	ldd	r24, Y+3	; 0x03
    36b4:	9c 81       	ldd	r25, Y+4	; 0x04
    36b6:	fc 01       	movw	r30, r24
    36b8:	81 a1       	ldd	r24, Z+33	; 0x21

000036ba <.Loc.959>:
    36ba:	84 0f       	add	r24, r20
    36bc:	88 2f       	mov	r24, r24
    36be:	90 e0       	ldi	r25, 0x00	; 0
    36c0:	8f 71       	andi	r24, 0x1F	; 31
    36c2:	99 27       	eor	r25, r25

000036c4 <.Loc.960>:
    36c4:	82 0f       	add	r24, r18
    36c6:	93 1f       	adc	r25, r19
    36c8:	9a 83       	std	Y+2, r25	; 0x02
    36ca:	89 83       	std	Y+1, r24	; 0x01

000036cc <.Loc.961>:
		*m_ptr = value;
    36cc:	8d 81       	ldd	r24, Y+5	; 0x05
    36ce:	9e 81       	ldd	r25, Y+6	; 0x06
    36d0:	fc 01       	movw	r30, r24
    36d2:	20 81       	ld	r18, Z
    36d4:	89 81       	ldd	r24, Y+1	; 0x01
    36d6:	9a 81       	ldd	r25, Y+2	; 0x02
    36d8:	fc 01       	movw	r30, r24
    36da:	20 83       	st	Z, r18

000036dc <.Loc.962>:
		_size++;
    36dc:	8b 81       	ldd	r24, Y+3	; 0x03
    36de:	9c 81       	ldd	r25, Y+4	; 0x04
    36e0:	fc 01       	movw	r30, r24
    36e2:	81 a1       	ldd	r24, Z+33	; 0x21
    36e4:	21 e0       	ldi	r18, 0x01	; 1
    36e6:	28 0f       	add	r18, r24
    36e8:	8b 81       	ldd	r24, Y+3	; 0x03
    36ea:	9c 81       	ldd	r25, Y+4	; 0x04
    36ec:	fc 01       	movw	r30, r24
    36ee:	21 a3       	std	Z+33, r18	; 0x21

000036f0 <.Loc.963>:
		return true;
    36f0:	81 e0       	ldi	r24, 0x01	; 1

000036f2 <.L360>:
	}
    36f2:	0f 90       	pop	r0
    36f4:	0f 90       	pop	r0
    36f6:	0f 90       	pop	r0
    36f8:	0f 90       	pop	r0
    36fa:	0f 90       	pop	r0
    36fc:	0f 90       	pop	r0
    36fe:	df 91       	pop	r29
    3700:	cf 91       	pop	r28
    3702:	08 95       	ret

00003704 <_ZN10asyncruino8optionalINS_16async_input_implINS_9schedulerENS_13default_guardEhLh32EE9coro_dataEE5resetEv>:
        inline void reset(){valid = false;}
    3704:	cf 93       	push	r28
    3706:	df 93       	push	r29
    3708:	00 d0       	rcall	.+0      	; 0x370a <L0^A>

0000370a <L0^A>:
    370a:	cd b7       	in	r28, 0x3d	; 61
    370c:	de b7       	in	r29, 0x3e	; 62
    370e:	9a 83       	std	Y+2, r25	; 0x02
    3710:	89 83       	std	Y+1, r24	; 0x01

00003712 <.Loc.966>:
    3712:	89 81       	ldd	r24, Y+1	; 0x01
    3714:	9a 81       	ldd	r25, Y+2	; 0x02
    3716:	fc 01       	movw	r30, r24
    3718:	13 82       	std	Z+3, r1	; 0x03

0000371a <.Loc.967>:
    371a:	00 00       	nop
    371c:	0f 90       	pop	r0
    371e:	0f 90       	pop	r0
    3720:	df 91       	pop	r29
    3722:	cf 91       	pop	r28
    3724:	08 95       	ret

00003726 <_ZN10asyncruino15sheduler_getterINS_9schedulerEE13_get_shedulerEv>:
        inline static sched_t & _get_sheduler(){return sched_t::instance();}
    3726:	cf 93       	push	r28
    3728:	df 93       	push	r29
    372a:	cd b7       	in	r28, 0x3d	; 61
    372c:	de b7       	in	r29, 0x3e	; 62

0000372e <.Loc.969>:
    372e:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <_ZN10asyncruino9scheduler8instanceEv>

00003732 <.Loc.970>:
    3732:	df 91       	pop	r29
    3734:	cf 91       	pop	r28
    3736:	08 95       	ret

00003738 <_ZN10asyncruino14scheduler_implINS_13default_guardELj32EE9push_taskENSt7__n486116coroutine_handleIvEE>:
        inline bool push_task(std::coroutine_handle<> new_handle){
    3738:	cf 93       	push	r28
    373a:	df 93       	push	r29
    373c:	00 d0       	rcall	.+0      	; 0x373e <L0^A>

0000373e <L0^A>:
    373e:	00 d0       	rcall	.+0      	; 0x3740 <L0^A>

00003740 <L0^A>:
    3740:	0f 92       	push	r0
    3742:	cd b7       	in	r28, 0x3d	; 61
    3744:	de b7       	in	r29, 0x3e	; 62
    3746:	9b 83       	std	Y+3, r25	; 0x03
    3748:	8a 83       	std	Y+2, r24	; 0x02
    374a:	7d 83       	std	Y+5, r23	; 0x05
    374c:	6c 83       	std	Y+4, r22	; 0x04

0000374e <.Loc.972>:
            m_pipe_guard.lock();
    374e:	8a 81       	ldd	r24, Y+2	; 0x02
    3750:	9b 81       	ldd	r25, Y+3	; 0x03
    3752:	8c 5b       	subi	r24, 0xBC	; 188
    3754:	9f 4f       	sbci	r25, 0xFF	; 255
    3756:	0e 94 1e 01 	call	0x23c	; 0x23c <_ZN10asyncruino13default_guard4lockEv>

0000375a <.Loc.973>:
            bool ret = m_handles.write(new_handle);
    375a:	8a 81       	ldd	r24, Y+2	; 0x02
    375c:	9b 81       	ldd	r25, Y+3	; 0x03
    375e:	9e 01       	movw	r18, r28
    3760:	2c 5f       	subi	r18, 0xFC	; 252
    3762:	3f 4f       	sbci	r19, 0xFF	; 255
    3764:	b9 01       	movw	r22, r18
    3766:	0e 94 64 1f 	call	0x3ec8	; 0x3ec8 <_ZN10asyncruino4pipeINSt7__n486116coroutine_handleIvEEjLj32EE5writeERKS3_>
    376a:	89 83       	std	Y+1, r24	; 0x01

0000376c <.Loc.974>:
            m_pipe_guard.unlock();
    376c:	8a 81       	ldd	r24, Y+2	; 0x02
    376e:	9b 81       	ldd	r25, Y+3	; 0x03
    3770:	8c 5b       	subi	r24, 0xBC	; 188
    3772:	9f 4f       	sbci	r25, 0xFF	; 255
    3774:	0e 94 45 01 	call	0x28a	; 0x28a <_ZN10asyncruino13default_guard6unlockEv>

00003778 <.Loc.975>:
            return ret;
    3778:	89 81       	ldd	r24, Y+1	; 0x01

0000377a <.Loc.976>:
        }
    377a:	0f 90       	pop	r0
    377c:	0f 90       	pop	r0
    377e:	0f 90       	pop	r0
    3780:	0f 90       	pop	r0
    3782:	0f 90       	pop	r0
    3784:	df 91       	pop	r29
    3786:	cf 91       	pop	r28
    3788:	08 95       	ret

0000378a <_ZNK10asyncruino8optionalINS_17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE9coro_dataEEcvbEv>:
        inline operator bool()const{return valid;}
    378a:	cf 93       	push	r28
    378c:	df 93       	push	r29
    378e:	00 d0       	rcall	.+0      	; 0x3790 <L0^A>

00003790 <L0^A>:
    3790:	cd b7       	in	r28, 0x3d	; 61
    3792:	de b7       	in	r29, 0x3e	; 62
    3794:	9a 83       	std	Y+2, r25	; 0x02
    3796:	89 83       	std	Y+1, r24	; 0x01

00003798 <.Loc.978>:
    3798:	89 81       	ldd	r24, Y+1	; 0x01
    379a:	9a 81       	ldd	r25, Y+2	; 0x02
    379c:	fc 01       	movw	r30, r24
    379e:	83 81       	ldd	r24, Z+3	; 0x03

000037a0 <.Loc.979>:
    37a0:	0f 90       	pop	r0
    37a2:	0f 90       	pop	r0
    37a4:	df 91       	pop	r29
    37a6:	cf 91       	pop	r28
    37a8:	08 95       	ret

000037aa <_ZN10asyncruino8optionalINS_17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE9coro_dataEE5resetEv>:
        inline void reset(){valid = false;}
    37aa:	cf 93       	push	r28
    37ac:	df 93       	push	r29
    37ae:	00 d0       	rcall	.+0      	; 0x37b0 <L0^A>

000037b0 <L0^A>:
    37b0:	cd b7       	in	r28, 0x3d	; 61
    37b2:	de b7       	in	r29, 0x3e	; 62
    37b4:	9a 83       	std	Y+2, r25	; 0x02
    37b6:	89 83       	std	Y+1, r24	; 0x01

000037b8 <.Loc.981>:
    37b8:	89 81       	ldd	r24, Y+1	; 0x01
    37ba:	9a 81       	ldd	r25, Y+2	; 0x02
    37bc:	fc 01       	movw	r30, r24
    37be:	13 82       	std	Z+3, r1	; 0x03

000037c0 <.Loc.982>:
    37c0:	00 00       	nop
    37c2:	0f 90       	pop	r0
    37c4:	0f 90       	pop	r0
    37c6:	df 91       	pop	r29
    37c8:	cf 91       	pop	r28
    37ca:	08 95       	ret

000037cc <_ZN10asyncruino10timer_implINS_9schedulerENS_13default_guardEmhLh1EEC1ERS1_>:
        timer_impl(scheduler_t & m_scheduler):sheduler_getter<scheduler_t>(m_scheduler){
    37cc:	ef 92       	push	r14
    37ce:	ff 92       	push	r15
    37d0:	0f 93       	push	r16
    37d2:	1f 93       	push	r17
    37d4:	cf 93       	push	r28
    37d6:	df 93       	push	r29
    37d8:	00 d0       	rcall	.+0      	; 0x37da <L0^A>

000037da <L0^A>:
    37da:	00 d0       	rcall	.+0      	; 0x37dc <L0^A>

000037dc <L0^A>:
    37dc:	cd b7       	in	r28, 0x3d	; 61
    37de:	de b7       	in	r29, 0x3e	; 62
    37e0:	9a 83       	std	Y+2, r25	; 0x02
    37e2:	89 83       	std	Y+1, r24	; 0x01
    37e4:	7c 83       	std	Y+4, r23	; 0x04
    37e6:	6b 83       	std	Y+3, r22	; 0x03

000037e8 <.Loc.984>:
    37e8:	2b 81       	ldd	r18, Y+3	; 0x03
    37ea:	3c 81       	ldd	r19, Y+4	; 0x04
    37ec:	89 81       	ldd	r24, Y+1	; 0x01
    37ee:	9a 81       	ldd	r25, Y+2	; 0x02
    37f0:	b9 01       	movw	r22, r18
    37f2:	0e 94 71 19 	call	0x32e2	; 0x32e2 <_ZN10asyncruino15sheduler_getterINS_9schedulerEEC1ERS1_>
    37f6:	89 81       	ldd	r24, Y+1	; 0x01
    37f8:	9a 81       	ldd	r25, Y+2	; 0x02
    37fa:	0e 94 0d 01 	call	0x21a	; 0x21a <_ZN10asyncruino13default_guardC1Ev>
    37fe:	89 81       	ldd	r24, Y+1	; 0x01
    3800:	9a 81       	ldd	r25, Y+2	; 0x02
    3802:	02 96       	adiw	r24, 0x02	; 2
    3804:	00 e0       	ldi	r16, 0x00	; 0
    3806:	10 e0       	ldi	r17, 0x00	; 0
    3808:	7c 01       	movw	r14, r24
    380a:	08 c0       	rjmp	.+16     	; 0x381c <.L370>

0000380c <.L371>:
    380c:	c7 01       	movw	r24, r14
    380e:	0e 94 ba 1f 	call	0x3f74	; 0x3f74 <_ZN10asyncruino10timer_implINS_9schedulerENS_13default_guardEmhLh1EE10timer_infoC1Ev>
    3812:	01 50       	subi	r16, 0x01	; 1
    3814:	11 09       	sbc	r17, r1
    3816:	86 e0       	ldi	r24, 0x06	; 6
    3818:	e8 0e       	add	r14, r24
    381a:	f1 1c       	adc	r15, r1

0000381c <.L370>:
    381c:	11 23       	and	r17, r17
    381e:	b4 f7       	brge	.-20     	; 0x380c <.L371>

00003820 <.Loc.987>:
        }
    3820:	00 00       	nop
    3822:	00 00       	nop
    3824:	0f 90       	pop	r0
    3826:	0f 90       	pop	r0
    3828:	0f 90       	pop	r0
    382a:	0f 90       	pop	r0
    382c:	df 91       	pop	r29
    382e:	cf 91       	pop	r28
    3830:	1f 91       	pop	r17
    3832:	0f 91       	pop	r16
    3834:	ff 90       	pop	r15
    3836:	ef 90       	pop	r14
    3838:	08 95       	ret

0000383a <_ZN10asyncruino17timer_dim_counterIyfLi0EEC1ILi0EEEfNS_13time_prefix_tIXT_EEE>:
        timer_dim_counter(
    383a:	cf 93       	push	r28
    383c:	df 93       	push	r29
    383e:	00 d0       	rcall	.+0      	; 0x3840 <L0^A>

00003840 <L0^A>:
    3840:	00 d0       	rcall	.+0      	; 0x3842 <L0^A>

00003842 <L0^A>:
    3842:	00 d0       	rcall	.+0      	; 0x3844 <L0^A>

00003844 <L0^A>:
    3844:	0f 92       	push	r0
    3846:	cd b7       	in	r28, 0x3d	; 61
    3848:	de b7       	in	r29, 0x3e	; 62
    384a:	9a 83       	std	Y+2, r25	; 0x02
    384c:	89 83       	std	Y+1, r24	; 0x01
    384e:	4b 83       	std	Y+3, r20	; 0x03
    3850:	5c 83       	std	Y+4, r21	; 0x04
    3852:	6d 83       	std	Y+5, r22	; 0x05
    3854:	7e 83       	std	Y+6, r23	; 0x06
    3856:	2f 83       	std	Y+7, r18	; 0x07

00003858 <.Loc.989>:
            ):value(0){
    3858:	89 81       	ldd	r24, Y+1	; 0x01
    385a:	9a 81       	ldd	r25, Y+2	; 0x02
    385c:	fc 01       	movw	r30, r24
    385e:	10 82       	st	Z, r1
    3860:	fc 01       	movw	r30, r24
    3862:	11 82       	std	Z+1, r1	; 0x01
    3864:	fc 01       	movw	r30, r24
    3866:	12 82       	std	Z+2, r1	; 0x02
    3868:	fc 01       	movw	r30, r24
    386a:	13 82       	std	Z+3, r1	; 0x03
    386c:	fc 01       	movw	r30, r24
    386e:	14 82       	std	Z+4, r1	; 0x04
    3870:	fc 01       	movw	r30, r24
    3872:	15 82       	std	Z+5, r1	; 0x05
    3874:	fc 01       	movw	r30, r24
    3876:	16 82       	std	Z+6, r1	; 0x06
    3878:	fc 01       	movw	r30, r24
    387a:	17 82       	std	Z+7, r1	; 0x07

0000387c <.Loc.990>:
                set_speed(_prefix_sec_per_tick,m_prefix_t);
    387c:	8b 81       	ldd	r24, Y+3	; 0x03
    387e:	9c 81       	ldd	r25, Y+4	; 0x04
    3880:	ad 81       	ldd	r26, Y+5	; 0x05
    3882:	be 81       	ldd	r27, Y+6	; 0x06
    3884:	e9 81       	ldd	r30, Y+1	; 0x01
    3886:	fa 81       	ldd	r31, Y+2	; 0x02
    3888:	23 2f       	mov	r18, r19
    388a:	ac 01       	movw	r20, r24
    388c:	bd 01       	movw	r22, r26
    388e:	cf 01       	movw	r24, r30
    3890:	0e 94 54 1c 	call	0x38a8	; 0x38a8 <_ZN10asyncruino17timer_dim_counterIyfLi0EE9set_speedILi0EEEvfNS_13time_prefix_tIXT_EEE>

00003894 <.Loc.991>:
            }
    3894:	00 00       	nop
    3896:	27 96       	adiw	r28, 0x07	; 7
    3898:	0f b6       	in	r0, 0x3f	; 63
    389a:	f8 94       	cli
    389c:	de bf       	out	0x3e, r29	; 62
    389e:	0f be       	out	0x3f, r0	; 63
    38a0:	cd bf       	out	0x3d, r28	; 61
    38a2:	df 91       	pop	r29
    38a4:	cf 91       	pop	r28
    38a6:	08 95       	ret

000038a8 <_ZN10asyncruino17timer_dim_counterIyfLi0EE9set_speedILi0EEEvfNS_13time_prefix_tIXT_EEE>:
        inline void set_speed(dividor_t prefix_sec_per_tick,
    38a8:	cf 93       	push	r28
    38aa:	df 93       	push	r29
    38ac:	cd b7       	in	r28, 0x3d	; 61
    38ae:	de b7       	in	r29, 0x3e	; 62
    38b0:	60 97       	sbiw	r28, 0x10	; 16
    38b2:	0f b6       	in	r0, 0x3f	; 63
    38b4:	f8 94       	cli
    38b6:	de bf       	out	0x3e, r29	; 62
    38b8:	0f be       	out	0x3f, r0	; 63
    38ba:	cd bf       	out	0x3d, r28	; 61
    38bc:	9f 83       	std	Y+7, r25	; 0x07
    38be:	8e 83       	std	Y+6, r24	; 0x06
    38c0:	48 87       	std	Y+8, r20	; 0x08
    38c2:	59 87       	std	Y+9, r21	; 0x09
    38c4:	6a 87       	std	Y+10, r22	; 0x0a
    38c6:	7b 87       	std	Y+11, r23	; 0x0b
    38c8:	2c 87       	std	Y+12, r18	; 0x0c

000038ca <.Loc.993>:
            constexpr int8_t base_diff = (int8_t)_m_prefix - (int8_t)base;
    38ca:	19 82       	std	Y+1, r1	; 0x01

000038cc <.Loc.994>:
            constexpr dividor_t pow_10 = pow(10.0,base_diff);
    38cc:	80 e0       	ldi	r24, 0x00	; 0
    38ce:	90 e0       	ldi	r25, 0x00	; 0
    38d0:	a0 e8       	ldi	r26, 0x80	; 128
    38d2:	bf e3       	ldi	r27, 0x3F	; 63
    38d4:	8a 83       	std	Y+2, r24	; 0x02
    38d6:	9b 83       	std	Y+3, r25	; 0x03
    38d8:	ac 83       	std	Y+4, r26	; 0x04
    38da:	bd 83       	std	Y+5, r27	; 0x05

000038dc <.Loc.995>:
            tick_per_prefix_sec= 1/prefix_sec_per_tick;   
    38dc:	28 85       	ldd	r18, Y+8	; 0x08
    38de:	39 85       	ldd	r19, Y+9	; 0x09
    38e0:	4a 85       	ldd	r20, Y+10	; 0x0a
    38e2:	5b 85       	ldd	r21, Y+11	; 0x0b
    38e4:	60 e0       	ldi	r22, 0x00	; 0
    38e6:	70 e0       	ldi	r23, 0x00	; 0
    38e8:	80 e8       	ldi	r24, 0x80	; 128
    38ea:	9f e3       	ldi	r25, 0x3F	; 63
    38ec:	0e 94 06 20 	call	0x400c	; 0x400c <__divsf3>
    38f0:	6d 87       	std	Y+13, r22	; 0x0d
    38f2:	7e 87       	std	Y+14, r23	; 0x0e
    38f4:	8f 87       	std	Y+15, r24	; 0x0f
    38f6:	98 8b       	std	Y+16, r25	; 0x10
    38f8:	8d 85       	ldd	r24, Y+13	; 0x0d
    38fa:	9e 85       	ldd	r25, Y+14	; 0x0e
    38fc:	af 85       	ldd	r26, Y+15	; 0x0f
    38fe:	b8 89       	ldd	r27, Y+16	; 0x10

00003900 <.Loc.996>:
    3900:	2e 81       	ldd	r18, Y+6	; 0x06
    3902:	3f 81       	ldd	r19, Y+7	; 0x07
    3904:	f9 01       	movw	r30, r18
    3906:	84 87       	std	Z+12, r24	; 0x0c
    3908:	95 87       	std	Z+13, r25	; 0x0d
    390a:	a6 87       	std	Z+14, r26	; 0x0e
    390c:	b7 87       	std	Z+15, r27	; 0x0f

0000390e <.Loc.997>:
        }
    390e:	00 00       	nop
    3910:	60 96       	adiw	r28, 0x10	; 16
    3912:	0f b6       	in	r0, 0x3f	; 63
    3914:	f8 94       	cli
    3916:	de bf       	out	0x3e, r29	; 62
    3918:	0f be       	out	0x3f, r0	; 63
    391a:	cd bf       	out	0x3d, r28	; 61
    391c:	df 91       	pop	r29
    391e:	cf 91       	pop	r28
    3920:	08 95       	ret

00003922 <_ZN10asyncruino10timer_implINS_9schedulerENS_13default_guardEmhLh1EE9interruptEv>:
        inline void interrupt(){
    3922:	cf 93       	push	r28
    3924:	df 93       	push	r29
    3926:	00 d0       	rcall	.+0      	; 0x3928 <L0^A>

00003928 <L0^A>:
    3928:	0f 92       	push	r0
    392a:	cd b7       	in	r28, 0x3d	; 61
    392c:	de b7       	in	r29, 0x3e	; 62
    392e:	9b 83       	std	Y+3, r25	; 0x03
    3930:	8a 83       	std	Y+2, r24	; 0x02

00003932 <.LBB118>:
            for(size_type i=0;i<max_listeners;++i){
    3932:	19 82       	std	Y+1, r1	; 0x01

00003934 <.Loc.1000>:
    3934:	98 c0       	rjmp	.+304    	; 0x3a66 <.L375>

00003936 <.L380>:
                switch (m_list[i].sch)
    3936:	89 81       	ldd	r24, Y+1	; 0x01
    3938:	28 2f       	mov	r18, r24
    393a:	30 e0       	ldi	r19, 0x00	; 0

0000393c <.Loc.1002>:
    393c:	4a 81       	ldd	r20, Y+2	; 0x02
    393e:	5b 81       	ldd	r21, Y+3	; 0x03
    3940:	c9 01       	movw	r24, r18
    3942:	88 0f       	add	r24, r24
    3944:	99 1f       	adc	r25, r25
    3946:	82 0f       	add	r24, r18
    3948:	93 1f       	adc	r25, r19
    394a:	88 0f       	add	r24, r24
    394c:	99 1f       	adc	r25, r25
    394e:	84 0f       	add	r24, r20
    3950:	95 1f       	adc	r25, r21
    3952:	02 96       	adiw	r24, 0x02	; 2
    3954:	fc 01       	movw	r30, r24
    3956:	80 81       	ld	r24, Z
    3958:	91 81       	ldd	r25, Z+1	; 0x01
    395a:	a2 81       	ldd	r26, Z+2	; 0x02
    395c:	b3 81       	ldd	r27, Z+3	; 0x03

0000395e <.Loc.1003>:
    395e:	00 97       	sbiw	r24, 0x00	; 0
    3960:	a1 05       	cpc	r26, r1
    3962:	b1 05       	cpc	r27, r1
    3964:	09 f4       	brne	.+2      	; 0x3968 <L0^A+0x2>

00003966 <L0^A>:
    3966:	7b c0       	rjmp	.+246    	; 0x3a5e <.L382>
    3968:	81 30       	cpi	r24, 0x01	; 1
    396a:	91 05       	cpc	r25, r1
    396c:	a1 05       	cpc	r26, r1
    396e:	b1 05       	cpc	r27, r1
    3970:	09 f0       	breq	.+2      	; 0x3974 <.Loc.1004>

00003972 <L0^A>:
    3972:	48 c0       	rjmp	.+144    	; 0x3a04 <.L381>

00003974 <.Loc.1004>:
                    m_list[i].sch--;
    3974:	89 81       	ldd	r24, Y+1	; 0x01
    3976:	28 2f       	mov	r18, r24
    3978:	30 e0       	ldi	r19, 0x00	; 0

0000397a <.Loc.1005>:
    397a:	4a 81       	ldd	r20, Y+2	; 0x02
    397c:	5b 81       	ldd	r21, Y+3	; 0x03
    397e:	c9 01       	movw	r24, r18
    3980:	88 0f       	add	r24, r24
    3982:	99 1f       	adc	r25, r25
    3984:	82 0f       	add	r24, r18
    3986:	93 1f       	adc	r25, r19
    3988:	88 0f       	add	r24, r24
    398a:	99 1f       	adc	r25, r25
    398c:	84 0f       	add	r24, r20
    398e:	95 1f       	adc	r25, r21
    3990:	02 96       	adiw	r24, 0x02	; 2
    3992:	fc 01       	movw	r30, r24
    3994:	80 81       	ld	r24, Z
    3996:	91 81       	ldd	r25, Z+1	; 0x01
    3998:	a2 81       	ldd	r26, Z+2	; 0x02
    399a:	b3 81       	ldd	r27, Z+3	; 0x03

0000399c <.Loc.1006>:
    399c:	ac 01       	movw	r20, r24
    399e:	bd 01       	movw	r22, r26
    39a0:	41 50       	subi	r20, 0x01	; 1
    39a2:	51 09       	sbc	r21, r1
    39a4:	61 09       	sbc	r22, r1
    39a6:	71 09       	sbc	r23, r1
    39a8:	ea 81       	ldd	r30, Y+2	; 0x02
    39aa:	fb 81       	ldd	r31, Y+3	; 0x03
    39ac:	c9 01       	movw	r24, r18
    39ae:	88 0f       	add	r24, r24
    39b0:	99 1f       	adc	r25, r25
    39b2:	82 0f       	add	r24, r18
    39b4:	93 1f       	adc	r25, r19
    39b6:	88 0f       	add	r24, r24
    39b8:	99 1f       	adc	r25, r25
    39ba:	8e 0f       	add	r24, r30
    39bc:	9f 1f       	adc	r25, r31
    39be:	02 96       	adiw	r24, 0x02	; 2
    39c0:	dc 01       	movw	r26, r24
    39c2:	4d 93       	st	X+, r20
    39c4:	5d 93       	st	X+, r21
    39c6:	6d 93       	st	X+, r22
    39c8:	7c 93       	st	X, r23
    39ca:	13 97       	sbiw	r26, 0x03	; 3

000039cc <.Loc.1007>:
                    this->_get_sheduler().push_task(m_list[i].handle);
    39cc:	0e 94 93 1b 	call	0x3726	; 0x3726 <_ZN10asyncruino15sheduler_getterINS_9schedulerEE13_get_shedulerEv>

000039d0 <.Loc.1008>:
    39d0:	fc 01       	movw	r30, r24

000039d2 <.Loc.1009>:
    39d2:	89 81       	ldd	r24, Y+1	; 0x01
    39d4:	88 2f       	mov	r24, r24
    39d6:	90 e0       	ldi	r25, 0x00	; 0

000039d8 <.Loc.1010>:
    39d8:	4a 81       	ldd	r20, Y+2	; 0x02
    39da:	5b 81       	ldd	r21, Y+3	; 0x03
    39dc:	9c 01       	movw	r18, r24
    39de:	2f 5f       	subi	r18, 0xFF	; 255
    39e0:	3f 4f       	sbci	r19, 0xFF	; 255
    39e2:	c9 01       	movw	r24, r18
    39e4:	88 0f       	add	r24, r24
    39e6:	99 1f       	adc	r25, r25
    39e8:	82 0f       	add	r24, r18
    39ea:	93 1f       	adc	r25, r19
    39ec:	88 0f       	add	r24, r24
    39ee:	99 1f       	adc	r25, r25
    39f0:	84 0f       	add	r24, r20
    39f2:	95 1f       	adc	r25, r21
    39f4:	dc 01       	movw	r26, r24
    39f6:	8d 91       	ld	r24, X+
    39f8:	9c 91       	ld	r25, X
    39fa:	bc 01       	movw	r22, r24
    39fc:	cf 01       	movw	r24, r30
    39fe:	0e 94 9c 1b 	call	0x3738	; 0x3738 <_ZN10asyncruino14scheduler_implINS_13default_guardELj32EE9push_taskENSt7__n486116coroutine_handleIvEE>

00003a02 <.Loc.1011>:
                    break;
    3a02:	2e c0       	rjmp	.+92     	; 0x3a60 <.L379>

00003a04 <.L381>:
                    m_list[i].sch--;
    3a04:	89 81       	ldd	r24, Y+1	; 0x01
    3a06:	28 2f       	mov	r18, r24
    3a08:	30 e0       	ldi	r19, 0x00	; 0

00003a0a <.Loc.1013>:
    3a0a:	4a 81       	ldd	r20, Y+2	; 0x02
    3a0c:	5b 81       	ldd	r21, Y+3	; 0x03
    3a0e:	c9 01       	movw	r24, r18
    3a10:	88 0f       	add	r24, r24
    3a12:	99 1f       	adc	r25, r25
    3a14:	82 0f       	add	r24, r18
    3a16:	93 1f       	adc	r25, r19
    3a18:	88 0f       	add	r24, r24
    3a1a:	99 1f       	adc	r25, r25
    3a1c:	84 0f       	add	r24, r20
    3a1e:	95 1f       	adc	r25, r21
    3a20:	02 96       	adiw	r24, 0x02	; 2
    3a22:	fc 01       	movw	r30, r24
    3a24:	80 81       	ld	r24, Z
    3a26:	91 81       	ldd	r25, Z+1	; 0x01
    3a28:	a2 81       	ldd	r26, Z+2	; 0x02
    3a2a:	b3 81       	ldd	r27, Z+3	; 0x03

00003a2c <.Loc.1014>:
    3a2c:	ac 01       	movw	r20, r24
    3a2e:	bd 01       	movw	r22, r26
    3a30:	41 50       	subi	r20, 0x01	; 1
    3a32:	51 09       	sbc	r21, r1
    3a34:	61 09       	sbc	r22, r1
    3a36:	71 09       	sbc	r23, r1
    3a38:	ea 81       	ldd	r30, Y+2	; 0x02
    3a3a:	fb 81       	ldd	r31, Y+3	; 0x03
    3a3c:	c9 01       	movw	r24, r18
    3a3e:	88 0f       	add	r24, r24
    3a40:	99 1f       	adc	r25, r25
    3a42:	82 0f       	add	r24, r18
    3a44:	93 1f       	adc	r25, r19
    3a46:	88 0f       	add	r24, r24
    3a48:	99 1f       	adc	r25, r25
    3a4a:	8e 0f       	add	r24, r30
    3a4c:	9f 1f       	adc	r25, r31
    3a4e:	02 96       	adiw	r24, 0x02	; 2
    3a50:	dc 01       	movw	r26, r24
    3a52:	4d 93       	st	X+, r20
    3a54:	5d 93       	st	X+, r21
    3a56:	6d 93       	st	X+, r22
    3a58:	7c 93       	st	X, r23
    3a5a:	13 97       	sbiw	r26, 0x03	; 3

00003a5c <.Loc.1015>:
                    break;
    3a5c:	01 c0       	rjmp	.+2      	; 0x3a60 <.L379>

00003a5e <.L382>:
	...

00003a60 <.L379>:
            for(size_type i=0;i<max_listeners;++i){
    3a60:	89 81       	ldd	r24, Y+1	; 0x01
    3a62:	8f 5f       	subi	r24, 0xFF	; 255
    3a64:	89 83       	std	Y+1, r24	; 0x01

00003a66 <.L375>:
    3a66:	89 81       	ldd	r24, Y+1	; 0x01
    3a68:	88 23       	and	r24, r24
    3a6a:	09 f4       	brne	.+2      	; 0x3a6e <.LBE118>

00003a6c <L0^A>:
    3a6c:	64 cf       	rjmp	.-312    	; 0x3936 <.L380>

00003a6e <.LBE118>:
        }
    3a6e:	00 00       	nop
    3a70:	00 00       	nop
    3a72:	0f 90       	pop	r0
    3a74:	0f 90       	pop	r0
    3a76:	0f 90       	pop	r0
    3a78:	df 91       	pop	r29
    3a7a:	cf 91       	pop	r28
    3a7c:	08 95       	ret

00003a7e <_ZN10asyncruino8optionalINS_17async_output_implINS_9schedulerENS_18hardware_uart_implENS_13default_guardEhE9coro_dataEEaSERKS6_>:
        inline optional & operator = (T const& n_value){
    3a7e:	cf 93       	push	r28
    3a80:	df 93       	push	r29
    3a82:	00 d0       	rcall	.+0      	; 0x3a84 <L0^A>

00003a84 <L0^A>:
    3a84:	00 d0       	rcall	.+0      	; 0x3a86 <L0^A>

00003a86 <L0^A>:
    3a86:	cd b7       	in	r28, 0x3d	; 61
    3a88:	de b7       	in	r29, 0x3e	; 62
    3a8a:	9a 83       	std	Y+2, r25	; 0x02
    3a8c:	89 83       	std	Y+1, r24	; 0x01
    3a8e:	7c 83       	std	Y+4, r23	; 0x04
    3a90:	6b 83       	std	Y+3, r22	; 0x03

00003a92 <.Loc.1021>:
            value = n_value;
    3a92:	29 81       	ldd	r18, Y+1	; 0x01
    3a94:	3a 81       	ldd	r19, Y+2	; 0x02
    3a96:	8b 81       	ldd	r24, Y+3	; 0x03
    3a98:	9c 81       	ldd	r25, Y+4	; 0x04
    3a9a:	fc 01       	movw	r30, r24
    3a9c:	80 81       	ld	r24, Z
    3a9e:	91 81       	ldd	r25, Z+1	; 0x01
    3aa0:	a2 81       	ldd	r26, Z+2	; 0x02
    3aa2:	f9 01       	movw	r30, r18
    3aa4:	80 83       	st	Z, r24
    3aa6:	91 83       	std	Z+1, r25	; 0x01
    3aa8:	a2 83       	std	Z+2, r26	; 0x02

00003aaa <.Loc.1022>:
            valid = true;
    3aaa:	89 81       	ldd	r24, Y+1	; 0x01
    3aac:	9a 81       	ldd	r25, Y+2	; 0x02
    3aae:	21 e0       	ldi	r18, 0x01	; 1
    3ab0:	fc 01       	movw	r30, r24
    3ab2:	23 83       	std	Z+3, r18	; 0x03

00003ab4 <.Loc.1023>:
            return *this;
    3ab4:	89 81       	ldd	r24, Y+1	; 0x01
    3ab6:	9a 81       	ldd	r25, Y+2	; 0x02

00003ab8 <.Loc.1024>:
        }
    3ab8:	0f 90       	pop	r0
    3aba:	0f 90       	pop	r0
    3abc:	0f 90       	pop	r0
    3abe:	0f 90       	pop	r0
    3ac0:	df 91       	pop	r29
    3ac2:	cf 91       	pop	r28
    3ac4:	08 95       	ret

00003ac6 <_ZN10asyncruino8optionalINS_16async_input_implINS_9schedulerENS_13default_guardEhLh32EE9coro_dataEEaSERKS5_>:
        inline optional & operator = (T const& n_value){
    3ac6:	cf 93       	push	r28
    3ac8:	df 93       	push	r29
    3aca:	00 d0       	rcall	.+0      	; 0x3acc <L0^A>

00003acc <L0^A>:
    3acc:	00 d0       	rcall	.+0      	; 0x3ace <L0^A>

00003ace <L0^A>:
    3ace:	cd b7       	in	r28, 0x3d	; 61
    3ad0:	de b7       	in	r29, 0x3e	; 62
    3ad2:	9a 83       	std	Y+2, r25	; 0x02
    3ad4:	89 83       	std	Y+1, r24	; 0x01
    3ad6:	7c 83       	std	Y+4, r23	; 0x04
    3ad8:	6b 83       	std	Y+3, r22	; 0x03

00003ada <.Loc.1026>:
            value = n_value;
    3ada:	29 81       	ldd	r18, Y+1	; 0x01
    3adc:	3a 81       	ldd	r19, Y+2	; 0x02
    3ade:	8b 81       	ldd	r24, Y+3	; 0x03
    3ae0:	9c 81       	ldd	r25, Y+4	; 0x04
    3ae2:	fc 01       	movw	r30, r24
    3ae4:	80 81       	ld	r24, Z
    3ae6:	91 81       	ldd	r25, Z+1	; 0x01
    3ae8:	a2 81       	ldd	r26, Z+2	; 0x02
    3aea:	f9 01       	movw	r30, r18
    3aec:	80 83       	st	Z, r24
    3aee:	91 83       	std	Z+1, r25	; 0x01
    3af0:	a2 83       	std	Z+2, r26	; 0x02

00003af2 <.Loc.1027>:
            valid = true;
    3af2:	89 81       	ldd	r24, Y+1	; 0x01
    3af4:	9a 81       	ldd	r25, Y+2	; 0x02
    3af6:	21 e0       	ldi	r18, 0x01	; 1
    3af8:	fc 01       	movw	r30, r24
    3afa:	23 83       	std	Z+3, r18	; 0x03

00003afc <.Loc.1028>:
            return *this;
    3afc:	89 81       	ldd	r24, Y+1	; 0x01
    3afe:	9a 81       	ldd	r25, Y+2	; 0x02

00003b00 <.Loc.1029>:
        }
    3b00:	0f 90       	pop	r0
    3b02:	0f 90       	pop	r0
    3b04:	0f 90       	pop	r0
    3b06:	0f 90       	pop	r0
    3b08:	df 91       	pop	r29
    3b0a:	cf 91       	pop	r28
    3b0c:	08 95       	ret

00003b0e <_ZN10asyncruino4pipeIchLh32EE4readERc>:
	inline bool read(T & value){
    3b0e:	cf 93       	push	r28
    3b10:	df 93       	push	r29
    3b12:	00 d0       	rcall	.+0      	; 0x3b14 <L0^A>

00003b14 <L0^A>:
    3b14:	00 d0       	rcall	.+0      	; 0x3b16 <L0^A>

00003b16 <L0^A>:
    3b16:	cd b7       	in	r28, 0x3d	; 61
    3b18:	de b7       	in	r29, 0x3e	; 62
    3b1a:	9a 83       	std	Y+2, r25	; 0x02
    3b1c:	89 83       	std	Y+1, r24	; 0x01
    3b1e:	7c 83       	std	Y+4, r23	; 0x04
    3b20:	6b 83       	std	Y+3, r22	; 0x03

00003b22 <.Loc.1031>:
		if(_size){
    3b22:	89 81       	ldd	r24, Y+1	; 0x01
    3b24:	9a 81       	ldd	r25, Y+2	; 0x02
    3b26:	fc 01       	movw	r30, r24
    3b28:	81 a1       	ldd	r24, Z+33	; 0x21

00003b2a <.Loc.1032>:
    3b2a:	88 23       	and	r24, r24
    3b2c:	89 f1       	breq	.+98     	; 0x3b90 <.L388>

00003b2e <.Loc.1033>:
			value = _data[_start];
    3b2e:	89 81       	ldd	r24, Y+1	; 0x01
    3b30:	9a 81       	ldd	r25, Y+2	; 0x02
    3b32:	fc 01       	movw	r30, r24
    3b34:	80 a1       	ldd	r24, Z+32	; 0x20
    3b36:	88 2f       	mov	r24, r24
    3b38:	90 e0       	ldi	r25, 0x00	; 0

00003b3a <.Loc.1034>:
    3b3a:	29 81       	ldd	r18, Y+1	; 0x01
    3b3c:	3a 81       	ldd	r19, Y+2	; 0x02
    3b3e:	82 0f       	add	r24, r18
    3b40:	93 1f       	adc	r25, r19
    3b42:	fc 01       	movw	r30, r24
    3b44:	20 81       	ld	r18, Z

00003b46 <.Loc.1035>:
    3b46:	8b 81       	ldd	r24, Y+3	; 0x03
    3b48:	9c 81       	ldd	r25, Y+4	; 0x04
    3b4a:	fc 01       	movw	r30, r24
    3b4c:	20 83       	st	Z, r18

00003b4e <.Loc.1036>:
			_start++;
    3b4e:	89 81       	ldd	r24, Y+1	; 0x01
    3b50:	9a 81       	ldd	r25, Y+2	; 0x02
    3b52:	fc 01       	movw	r30, r24
    3b54:	80 a1       	ldd	r24, Z+32	; 0x20
    3b56:	21 e0       	ldi	r18, 0x01	; 1
    3b58:	28 0f       	add	r18, r24
    3b5a:	89 81       	ldd	r24, Y+1	; 0x01
    3b5c:	9a 81       	ldd	r25, Y+2	; 0x02
    3b5e:	fc 01       	movw	r30, r24
    3b60:	20 a3       	std	Z+32, r18	; 0x20

00003b62 <.Loc.1037>:
			if(_start >= reserved){
    3b62:	89 81       	ldd	r24, Y+1	; 0x01
    3b64:	9a 81       	ldd	r25, Y+2	; 0x02
    3b66:	fc 01       	movw	r30, r24
    3b68:	80 a1       	ldd	r24, Z+32	; 0x20

00003b6a <.Loc.1038>:
    3b6a:	8f 31       	cpi	r24, 0x1F	; 31
    3b6c:	29 f0       	breq	.+10     	; 0x3b78 <.L389>
    3b6e:	20 f0       	brcs	.+8      	; 0x3b78 <.L389>

00003b70 <.Loc.1039>:
				_start = 0;
    3b70:	89 81       	ldd	r24, Y+1	; 0x01
    3b72:	9a 81       	ldd	r25, Y+2	; 0x02
    3b74:	fc 01       	movw	r30, r24
    3b76:	10 a2       	std	Z+32, r1	; 0x20

00003b78 <.L389>:
			_size--;
    3b78:	89 81       	ldd	r24, Y+1	; 0x01
    3b7a:	9a 81       	ldd	r25, Y+2	; 0x02
    3b7c:	fc 01       	movw	r30, r24
    3b7e:	81 a1       	ldd	r24, Z+33	; 0x21
    3b80:	2f ef       	ldi	r18, 0xFF	; 255
    3b82:	28 0f       	add	r18, r24
    3b84:	89 81       	ldd	r24, Y+1	; 0x01
    3b86:	9a 81       	ldd	r25, Y+2	; 0x02
    3b88:	fc 01       	movw	r30, r24
    3b8a:	21 a3       	std	Z+33, r18	; 0x21

00003b8c <.Loc.1041>:
			return true;
    3b8c:	81 e0       	ldi	r24, 0x01	; 1
    3b8e:	01 c0       	rjmp	.+2      	; 0x3b92 <.L390>

00003b90 <.L388>:
		return false;
    3b90:	80 e0       	ldi	r24, 0x00	; 0

00003b92 <.L390>:
	}
    3b92:	0f 90       	pop	r0
    3b94:	0f 90       	pop	r0
    3b96:	0f 90       	pop	r0
    3b98:	0f 90       	pop	r0
    3b9a:	df 91       	pop	r29
    3b9c:	cf 91       	pop	r28
    3b9e:	08 95       	ret

00003ba0 <_ZNK10asyncruino17timer_dim_counterIyfLi0EE12to_counter_tILan3EjEEyT0_>:
        inline counter_t to_counter_t(T _value) const{
    3ba0:	8f 92       	push	r8
    3ba2:	9f 92       	push	r9
    3ba4:	af 92       	push	r10
    3ba6:	bf 92       	push	r11
    3ba8:	cf 92       	push	r12
    3baa:	df 92       	push	r13
    3bac:	ef 92       	push	r14
    3bae:	ff 92       	push	r15
    3bb0:	cf 93       	push	r28
    3bb2:	df 93       	push	r29
    3bb4:	cd b7       	in	r28, 0x3d	; 61
    3bb6:	de b7       	in	r29, 0x3e	; 62
    3bb8:	a9 97       	sbiw	r28, 0x29	; 41
    3bba:	0f b6       	in	r0, 0x3f	; 63
    3bbc:	f8 94       	cli
    3bbe:	de bf       	out	0x3e, r29	; 62
    3bc0:	0f be       	out	0x3f, r0	; 63
    3bc2:	cd bf       	out	0x3d, r28	; 61
    3bc4:	9f 83       	std	Y+7, r25	; 0x07
    3bc6:	8e 83       	std	Y+6, r24	; 0x06
    3bc8:	79 87       	std	Y+9, r23	; 0x09
    3bca:	68 87       	std	Y+8, r22	; 0x08

00003bcc <.Loc.1045>:
            constexpr int8_t base_diff = (int8_t)other_base - (int8_t)base;
    3bcc:	8d ef       	ldi	r24, 0xFD	; 253
    3bce:	89 83       	std	Y+1, r24	; 0x01

00003bd0 <.Loc.1046>:
            constexpr dividor_t pow_10 = pow(10.0,base_diff);
    3bd0:	8f e6       	ldi	r24, 0x6F	; 111
    3bd2:	92 e1       	ldi	r25, 0x12	; 18
    3bd4:	a3 e8       	ldi	r26, 0x83	; 131
    3bd6:	ba e3       	ldi	r27, 0x3A	; 58
    3bd8:	8a 83       	std	Y+2, r24	; 0x02
    3bda:	9b 83       	std	Y+3, r25	; 0x03
    3bdc:	ac 83       	std	Y+4, r26	; 0x04
    3bde:	bd 83       	std	Y+5, r27	; 0x05

00003be0 <.Loc.1047>:
            return _value*tick_per_prefix_sec*pow_10;
    3be0:	88 85       	ldd	r24, Y+8	; 0x08
    3be2:	99 85       	ldd	r25, Y+9	; 0x09
    3be4:	9c 01       	movw	r18, r24
    3be6:	40 e0       	ldi	r20, 0x00	; 0
    3be8:	50 e0       	ldi	r21, 0x00	; 0
    3bea:	2e 8f       	std	Y+30, r18	; 0x1e
    3bec:	3f 8f       	std	Y+31, r19	; 0x1f
    3bee:	48 a3       	std	Y+32, r20	; 0x20
    3bf0:	59 a3       	std	Y+33, r21	; 0x21
    3bf2:	6e 8d       	ldd	r22, Y+30	; 0x1e
    3bf4:	7f 8d       	ldd	r23, Y+31	; 0x1f
    3bf6:	88 a1       	ldd	r24, Y+32	; 0x20
    3bf8:	99 a1       	ldd	r25, Y+33	; 0x21
    3bfa:	0e 94 e3 20 	call	0x41c6	; 0x41c6 <__floatunsisf>
    3bfe:	6a 87       	std	Y+10, r22	; 0x0a
    3c00:	7b 87       	std	Y+11, r23	; 0x0b
    3c02:	8c 87       	std	Y+12, r24	; 0x0c
    3c04:	9d 87       	std	Y+13, r25	; 0x0d

00003c06 <.Loc.1048>:
    3c06:	8e 81       	ldd	r24, Y+6	; 0x06
    3c08:	9f 81       	ldd	r25, Y+7	; 0x07
    3c0a:	fc 01       	movw	r30, r24
    3c0c:	84 85       	ldd	r24, Z+12	; 0x0c
    3c0e:	95 85       	ldd	r25, Z+13	; 0x0d
    3c10:	a6 85       	ldd	r26, Z+14	; 0x0e
    3c12:	b7 85       	ldd	r27, Z+15	; 0x0f

00003c14 <.Loc.1049>:
    3c14:	9c 01       	movw	r18, r24
    3c16:	ad 01       	movw	r20, r26
    3c18:	6a 85       	ldd	r22, Y+10	; 0x0a
    3c1a:	7b 85       	ldd	r23, Y+11	; 0x0b
    3c1c:	8c 85       	ldd	r24, Y+12	; 0x0c
    3c1e:	9d 85       	ldd	r25, Y+13	; 0x0d
    3c20:	0e 94 aa 21 	call	0x4354	; 0x4354 <__mulsf3>
    3c24:	6a a3       	std	Y+34, r22	; 0x22
    3c26:	7b a3       	std	Y+35, r23	; 0x23
    3c28:	8c a3       	std	Y+36, r24	; 0x24
    3c2a:	9d a3       	std	Y+37, r25	; 0x25
    3c2c:	2a a1       	ldd	r18, Y+34	; 0x22
    3c2e:	3b a1       	ldd	r19, Y+35	; 0x23
    3c30:	4c a1       	ldd	r20, Y+36	; 0x24
    3c32:	5d a1       	ldd	r21, Y+37	; 0x25
    3c34:	2e 87       	std	Y+14, r18	; 0x0e
    3c36:	3f 87       	std	Y+15, r19	; 0x0f
    3c38:	48 8b       	std	Y+16, r20	; 0x10
    3c3a:	59 8b       	std	Y+17, r21	; 0x11

00003c3c <.Loc.1050>:
    3c3c:	2f e6       	ldi	r18, 0x6F	; 111
    3c3e:	32 e1       	ldi	r19, 0x12	; 18
    3c40:	43 e8       	ldi	r20, 0x83	; 131
    3c42:	5a e3       	ldi	r21, 0x3A	; 58
    3c44:	6e 85       	ldd	r22, Y+14	; 0x0e
    3c46:	7f 85       	ldd	r23, Y+15	; 0x0f
    3c48:	88 89       	ldd	r24, Y+16	; 0x10
    3c4a:	99 89       	ldd	r25, Y+17	; 0x11
    3c4c:	0e 94 aa 21 	call	0x4354	; 0x4354 <__mulsf3>
    3c50:	6e a3       	std	Y+38, r22	; 0x26
    3c52:	7f a3       	std	Y+39, r23	; 0x27
    3c54:	88 a7       	std	Y+40, r24	; 0x28
    3c56:	99 a7       	std	Y+41, r25	; 0x29
    3c58:	8e a1       	ldd	r24, Y+38	; 0x26
    3c5a:	9f a1       	ldd	r25, Y+39	; 0x27
    3c5c:	a8 a5       	ldd	r26, Y+40	; 0x28
    3c5e:	b9 a5       	ldd	r27, Y+41	; 0x29
    3c60:	8a 8b       	std	Y+18, r24	; 0x12
    3c62:	9b 8b       	std	Y+19, r25	; 0x13
    3c64:	ac 8b       	std	Y+20, r26	; 0x14
    3c66:	bd 8b       	std	Y+21, r27	; 0x15

00003c68 <.Loc.1051>:
    3c68:	6a 89       	ldd	r22, Y+18	; 0x12
    3c6a:	7b 89       	ldd	r23, Y+19	; 0x13
    3c6c:	8c 89       	ldd	r24, Y+20	; 0x14
    3c6e:	9d 89       	ldd	r25, Y+21	; 0x15
    3c70:	0e 94 7d 20 	call	0x40fa	; 0x40fa <__fixunssfdi>
    3c74:	2e 8b       	std	Y+22, r18	; 0x16
    3c76:	3f 8b       	std	Y+23, r19	; 0x17
    3c78:	48 8f       	std	Y+24, r20	; 0x18
    3c7a:	59 8f       	std	Y+25, r21	; 0x19
    3c7c:	6a 8f       	std	Y+26, r22	; 0x1a
    3c7e:	7b 8f       	std	Y+27, r23	; 0x1b
    3c80:	8c 8f       	std	Y+28, r24	; 0x1c
    3c82:	9d 8f       	std	Y+29, r25	; 0x1d
    3c84:	8e 88       	ldd	r8, Y+22	; 0x16
    3c86:	9f 88       	ldd	r9, Y+23	; 0x17
    3c88:	a8 8c       	ldd	r10, Y+24	; 0x18
    3c8a:	b9 8c       	ldd	r11, Y+25	; 0x19
    3c8c:	ca 8c       	ldd	r12, Y+26	; 0x1a
    3c8e:	db 8c       	ldd	r13, Y+27	; 0x1b
    3c90:	ec 8c       	ldd	r14, Y+28	; 0x1c
    3c92:	fd 8c       	ldd	r15, Y+29	; 0x1d

00003c94 <.Loc.1052>:
        }
    3c94:	28 2d       	mov	r18, r8
    3c96:	39 2d       	mov	r19, r9
    3c98:	4a 2d       	mov	r20, r10
    3c9a:	5b 2d       	mov	r21, r11
    3c9c:	6c 2d       	mov	r22, r12
    3c9e:	7d 2d       	mov	r23, r13
    3ca0:	8e 2d       	mov	r24, r14
    3ca2:	9f 2d       	mov	r25, r15
    3ca4:	a9 96       	adiw	r28, 0x29	; 41
    3ca6:	0f b6       	in	r0, 0x3f	; 63
    3ca8:	f8 94       	cli
    3caa:	de bf       	out	0x3e, r29	; 62
    3cac:	0f be       	out	0x3f, r0	; 63
    3cae:	cd bf       	out	0x3d, r28	; 61
    3cb0:	df 91       	pop	r29
    3cb2:	cf 91       	pop	r28
    3cb4:	ff 90       	pop	r15
    3cb6:	ef 90       	pop	r14
    3cb8:	df 90       	pop	r13
    3cba:	cf 90       	pop	r12
    3cbc:	bf 90       	pop	r11
    3cbe:	af 90       	pop	r10
    3cc0:	9f 90       	pop	r9
    3cc2:	8f 90       	pop	r8
    3cc4:	08 95       	ret

00003cc6 <_ZN10asyncruino10timer_implINS_9schedulerENS_13default_guardEmhLh1EE13Delay_awaitorC1EmRS3_>:
            inline Delay_awaitor(time_t wait_ticks,timer_impl & _timer):
    3cc6:	cf 93       	push	r28
    3cc8:	df 93       	push	r29
    3cca:	cd b7       	in	r28, 0x3d	; 61
    3ccc:	de b7       	in	r29, 0x3e	; 62
    3cce:	28 97       	sbiw	r28, 0x08	; 8
    3cd0:	0f b6       	in	r0, 0x3f	; 63
    3cd2:	f8 94       	cli
    3cd4:	de bf       	out	0x3e, r29	; 62
    3cd6:	0f be       	out	0x3f, r0	; 63
    3cd8:	cd bf       	out	0x3d, r28	; 61
    3cda:	9a 83       	std	Y+2, r25	; 0x02
    3cdc:	89 83       	std	Y+1, r24	; 0x01
    3cde:	4b 83       	std	Y+3, r20	; 0x03
    3ce0:	5c 83       	std	Y+4, r21	; 0x04
    3ce2:	6d 83       	std	Y+5, r22	; 0x05
    3ce4:	7e 83       	std	Y+6, r23	; 0x06
    3ce6:	38 87       	std	Y+8, r19	; 0x08
    3ce8:	2f 83       	std	Y+7, r18	; 0x07

00003cea <.Loc.1054>:
                wait_ticks(wait_ticks),m_timer(&_timer){}
    3cea:	29 81       	ldd	r18, Y+1	; 0x01
    3cec:	3a 81       	ldd	r19, Y+2	; 0x02
    3cee:	8b 81       	ldd	r24, Y+3	; 0x03
    3cf0:	9c 81       	ldd	r25, Y+4	; 0x04
    3cf2:	ad 81       	ldd	r26, Y+5	; 0x05
    3cf4:	be 81       	ldd	r27, Y+6	; 0x06
    3cf6:	f9 01       	movw	r30, r18
    3cf8:	80 83       	st	Z, r24
    3cfa:	91 83       	std	Z+1, r25	; 0x01
    3cfc:	a2 83       	std	Z+2, r26	; 0x02
    3cfe:	b3 83       	std	Z+3, r27	; 0x03

00003d00 <.Loc.1055>:
    3d00:	89 81       	ldd	r24, Y+1	; 0x01
    3d02:	9a 81       	ldd	r25, Y+2	; 0x02
    3d04:	2f 81       	ldd	r18, Y+7	; 0x07
    3d06:	38 85       	ldd	r19, Y+8	; 0x08
    3d08:	fc 01       	movw	r30, r24
    3d0a:	35 83       	std	Z+5, r19	; 0x05
    3d0c:	24 83       	std	Z+4, r18	; 0x04

00003d0e <.Loc.1056>:
    3d0e:	00 00       	nop
    3d10:	28 96       	adiw	r28, 0x08	; 8
    3d12:	0f b6       	in	r0, 0x3f	; 63
    3d14:	f8 94       	cli
    3d16:	de bf       	out	0x3e, r29	; 62
    3d18:	0f be       	out	0x3f, r0	; 63
    3d1a:	cd bf       	out	0x3d, r28	; 61
    3d1c:	df 91       	pop	r29
    3d1e:	cf 91       	pop	r28
    3d20:	08 95       	ret

00003d22 <_ZN10asyncruino10timer_implINS_9schedulerENS_13default_guardEmhLh1EE13push_listenerENSt7__n486116coroutine_handleIvEEm>:
        bool push_listener(std::coroutine_handle<> h,time_t m_delay){
    3d22:	cf 93       	push	r28
    3d24:	df 93       	push	r29
    3d26:	cd b7       	in	r28, 0x3d	; 61
    3d28:	de b7       	in	r29, 0x3e	; 62
    3d2a:	2f 97       	sbiw	r28, 0x0f	; 15
    3d2c:	0f b6       	in	r0, 0x3f	; 63
    3d2e:	f8 94       	cli
    3d30:	de bf       	out	0x3e, r29	; 62
    3d32:	0f be       	out	0x3f, r0	; 63
    3d34:	cd bf       	out	0x3d, r28	; 61
    3d36:	99 87       	std	Y+9, r25	; 0x09
    3d38:	88 87       	std	Y+8, r24	; 0x08
    3d3a:	7b 87       	std	Y+11, r23	; 0x0b
    3d3c:	6a 87       	std	Y+10, r22	; 0x0a
    3d3e:	2c 87       	std	Y+12, r18	; 0x0c
    3d40:	3d 87       	std	Y+13, r19	; 0x0d
    3d42:	4e 87       	std	Y+14, r20	; 0x0e
    3d44:	5f 87       	std	Y+15, r21	; 0x0f

00003d46 <.Loc.1058>:
            m_guard.lock();
    3d46:	88 85       	ldd	r24, Y+8	; 0x08
    3d48:	99 85       	ldd	r25, Y+9	; 0x09
    3d4a:	0e 94 1e 01 	call	0x23c	; 0x23c <_ZN10asyncruino13default_guard4lockEv>

00003d4e <.LBB120>:
            for(size_type i=0;i<max_listeners;++i){
    3d4e:	19 82       	std	Y+1, r1	; 0x01

00003d50 <.Loc.1060>:
    3d50:	45 c0       	rjmp	.+138    	; 0x3ddc <.L395>

00003d52 <.L398>:
                if(m_list[i].sch == 0){
    3d52:	89 81       	ldd	r24, Y+1	; 0x01
    3d54:	28 2f       	mov	r18, r24
    3d56:	30 e0       	ldi	r19, 0x00	; 0

00003d58 <.Loc.1062>:
    3d58:	48 85       	ldd	r20, Y+8	; 0x08
    3d5a:	59 85       	ldd	r21, Y+9	; 0x09
    3d5c:	c9 01       	movw	r24, r18
    3d5e:	88 0f       	add	r24, r24
    3d60:	99 1f       	adc	r25, r25
    3d62:	82 0f       	add	r24, r18
    3d64:	93 1f       	adc	r25, r19
    3d66:	88 0f       	add	r24, r24
    3d68:	99 1f       	adc	r25, r25
    3d6a:	84 0f       	add	r24, r20
    3d6c:	95 1f       	adc	r25, r21
    3d6e:	02 96       	adiw	r24, 0x02	; 2
    3d70:	fc 01       	movw	r30, r24
    3d72:	80 81       	ld	r24, Z
    3d74:	91 81       	ldd	r25, Z+1	; 0x01
    3d76:	a2 81       	ldd	r26, Z+2	; 0x02
    3d78:	b3 81       	ldd	r27, Z+3	; 0x03

00003d7a <.Loc.1063>:
    3d7a:	00 97       	sbiw	r24, 0x00	; 0
    3d7c:	a1 05       	cpc	r26, r1
    3d7e:	b1 05       	cpc	r27, r1
    3d80:	51 f5       	brne	.+84     	; 0x3dd6 <.L396>

00003d82 <.Loc.1064>:
                    m_list[i] = timer_info{m_delay,h};
    3d82:	8c 85       	ldd	r24, Y+12	; 0x0c
    3d84:	9d 85       	ldd	r25, Y+13	; 0x0d
    3d86:	ae 85       	ldd	r26, Y+14	; 0x0e
    3d88:	bf 85       	ldd	r27, Y+15	; 0x0f
    3d8a:	2a 85       	ldd	r18, Y+10	; 0x0a
    3d8c:	3b 85       	ldd	r19, Y+11	; 0x0b
    3d8e:	fe 01       	movw	r30, r28
    3d90:	32 96       	adiw	r30, 0x02	; 2
    3d92:	ac 01       	movw	r20, r24
    3d94:	bd 01       	movw	r22, r26
    3d96:	cf 01       	movw	r24, r30
    3d98:	0e 94 d3 1f 	call	0x3fa6	; 0x3fa6 <_ZN10asyncruino10timer_implINS_9schedulerENS_13default_guardEmhLh1EE10timer_infoC1EmNSt7__n486116coroutine_handleIvEE>

00003d9c <.Loc.1065>:
    3d9c:	89 81       	ldd	r24, Y+1	; 0x01
    3d9e:	28 2f       	mov	r18, r24
    3da0:	30 e0       	ldi	r19, 0x00	; 0

00003da2 <.Loc.1066>:
    3da2:	48 85       	ldd	r20, Y+8	; 0x08
    3da4:	59 85       	ldd	r21, Y+9	; 0x09
    3da6:	c9 01       	movw	r24, r18
    3da8:	88 0f       	add	r24, r24
    3daa:	99 1f       	adc	r25, r25
    3dac:	82 0f       	add	r24, r18
    3dae:	93 1f       	adc	r25, r19
    3db0:	88 0f       	add	r24, r24
    3db2:	99 1f       	adc	r25, r25
    3db4:	84 0f       	add	r24, r20
    3db6:	95 1f       	adc	r25, r21
    3db8:	02 96       	adiw	r24, 0x02	; 2
    3dba:	26 e0       	ldi	r18, 0x06	; 6
    3dbc:	fe 01       	movw	r30, r28
    3dbe:	32 96       	adiw	r30, 0x02	; 2
    3dc0:	dc 01       	movw	r26, r24

00003dc2 <.L^B6>:
    3dc2:	01 90       	ld	r0, Z+
    3dc4:	0d 92       	st	X+, r0
    3dc6:	2a 95       	dec	r18
    3dc8:	e1 f7       	brne	.-8      	; 0x3dc2 <.L^B6>

00003dca <.Loc.1067>:
                    m_guard.unlock();
    3dca:	88 85       	ldd	r24, Y+8	; 0x08
    3dcc:	99 85       	ldd	r25, Y+9	; 0x09
    3dce:	0e 94 45 01 	call	0x28a	; 0x28a <_ZN10asyncruino13default_guard6unlockEv>

00003dd2 <.Loc.1068>:
                    return true;
    3dd2:	81 e0       	ldi	r24, 0x01	; 1
    3dd4:	0c c0       	rjmp	.+24     	; 0x3dee <.L397>

00003dd6 <.L396>:
            for(size_type i=0;i<max_listeners;++i){
    3dd6:	89 81       	ldd	r24, Y+1	; 0x01
    3dd8:	8f 5f       	subi	r24, 0xFF	; 255
    3dda:	89 83       	std	Y+1, r24	; 0x01

00003ddc <.L395>:
    3ddc:	89 81       	ldd	r24, Y+1	; 0x01
    3dde:	88 23       	and	r24, r24
    3de0:	09 f4       	brne	.+2      	; 0x3de4 <.LBE120>

00003de2 <L0^A>:
    3de2:	b7 cf       	rjmp	.-146    	; 0x3d52 <.L398>

00003de4 <.LBE120>:
            m_guard.unlock();
    3de4:	88 85       	ldd	r24, Y+8	; 0x08
    3de6:	99 85       	ldd	r25, Y+9	; 0x09
    3de8:	0e 94 45 01 	call	0x28a	; 0x28a <_ZN10asyncruino13default_guard6unlockEv>

00003dec <.Loc.1072>:
            return false;
    3dec:	80 e0       	ldi	r24, 0x00	; 0

00003dee <.L397>:
        }
    3dee:	2f 96       	adiw	r28, 0x0f	; 15
    3df0:	0f b6       	in	r0, 0x3f	; 63
    3df2:	f8 94       	cli
    3df4:	de bf       	out	0x3e, r29	; 62
    3df6:	0f be       	out	0x3f, r0	; 63
    3df8:	cd bf       	out	0x3d, r28	; 61
    3dfa:	df 91       	pop	r29
    3dfc:	cf 91       	pop	r28
    3dfe:	08 95       	ret

00003e00 <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE18read_from_buf_byteERc>:
        inline bool read_from_buf_byte(char & out){
    3e00:	cf 93       	push	r28
    3e02:	df 93       	push	r29
    3e04:	00 d0       	rcall	.+0      	; 0x3e06 <L0^A>

00003e06 <L0^A>:
    3e06:	00 d0       	rcall	.+0      	; 0x3e08 <L0^A>

00003e08 <L0^A>:
    3e08:	cd b7       	in	r28, 0x3d	; 61
    3e0a:	de b7       	in	r29, 0x3e	; 62
    3e0c:	9a 83       	std	Y+2, r25	; 0x02
    3e0e:	89 83       	std	Y+1, r24	; 0x01
    3e10:	7c 83       	std	Y+4, r23	; 0x04
    3e12:	6b 83       	std	Y+3, r22	; 0x03

00003e14 <.Loc.1075>:
            return m_buf.read(out);
    3e14:	89 81       	ldd	r24, Y+1	; 0x01
    3e16:	9a 81       	ldd	r25, Y+2	; 0x02
    3e18:	2b 81       	ldd	r18, Y+3	; 0x03
    3e1a:	3c 81       	ldd	r19, Y+4	; 0x04
    3e1c:	b9 01       	movw	r22, r18
    3e1e:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <_ZN10asyncruino4pipeIchLh32EE4readERc>

00003e22 <.Loc.1076>:
        }
    3e22:	0f 90       	pop	r0
    3e24:	0f 90       	pop	r0
    3e26:	0f 90       	pop	r0
    3e28:	0f 90       	pop	r0
    3e2a:	df 91       	pop	r29
    3e2c:	cf 91       	pop	r28
    3e2e:	08 95       	ret

00003e30 <_ZN10asyncruino16async_input_implINS_9schedulerENS_13default_guardEhLh32EE27read_from_buf_until_1_bytesEPcch>:
        inline read_until_1_ret_t read_from_buf_until_1_bytes(char * out,char c0,size_type bytes){
    3e30:	0f 93       	push	r16
    3e32:	1f 93       	push	r17
    3e34:	cf 93       	push	r28
    3e36:	df 93       	push	r29
    3e38:	cd b7       	in	r28, 0x3d	; 61
    3e3a:	de b7       	in	r29, 0x3e	; 62
    3e3c:	28 97       	sbiw	r28, 0x08	; 8
    3e3e:	0f b6       	in	r0, 0x3f	; 63
    3e40:	f8 94       	cli
    3e42:	de bf       	out	0x3e, r29	; 62
    3e44:	0f be       	out	0x3f, r0	; 63
    3e46:	cd bf       	out	0x3d, r28	; 61
    3e48:	9c 83       	std	Y+4, r25	; 0x04
    3e4a:	8b 83       	std	Y+3, r24	; 0x03
    3e4c:	7e 83       	std	Y+6, r23	; 0x06
    3e4e:	6d 83       	std	Y+5, r22	; 0x05
    3e50:	4f 83       	std	Y+7, r20	; 0x07
    3e52:	28 87       	std	Y+8, r18	; 0x08

00003e54 <.LBB121>:
            for(size_type i=0;i<bytes;++i){
    3e54:	19 82       	std	Y+1, r1	; 0x01

00003e56 <.Loc.1079>:
    3e56:	26 c0       	rjmp	.+76     	; 0x3ea4 <.L402>

00003e58 <.L406>:
                if(!m_buf.read(c)){
    3e58:	8b 81       	ldd	r24, Y+3	; 0x03
    3e5a:	9c 81       	ldd	r25, Y+4	; 0x04
    3e5c:	9e 01       	movw	r18, r28
    3e5e:	2e 5f       	subi	r18, 0xFE	; 254
    3e60:	3f 4f       	sbci	r19, 0xFF	; 255
    3e62:	b9 01       	movw	r22, r18
    3e64:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <_ZN10asyncruino4pipeIchLh32EE4readERc>
    3e68:	98 2f       	mov	r25, r24
    3e6a:	81 e0       	ldi	r24, 0x01	; 1
    3e6c:	89 27       	eor	r24, r25

00003e6e <.Loc.1081>:
    3e6e:	88 23       	and	r24, r24
    3e70:	19 f0       	breq	.+6      	; 0x3e78 <.L403>

00003e72 <.Loc.1082>:
                    return {i,false};
    3e72:	09 81       	ldd	r16, Y+1	; 0x01
    3e74:	10 e0       	ldi	r17, 0x00	; 0
    3e76:	1c c0       	rjmp	.+56     	; 0x3eb0 <.L407>

00003e78 <.L403>:
                    *out = c;
    3e78:	2a 81       	ldd	r18, Y+2	; 0x02
    3e7a:	8d 81       	ldd	r24, Y+5	; 0x05
    3e7c:	9e 81       	ldd	r25, Y+6	; 0x06
    3e7e:	fc 01       	movw	r30, r24
    3e80:	20 83       	st	Z, r18

00003e82 <.Loc.1084>:
                    ++out;
    3e82:	8d 81       	ldd	r24, Y+5	; 0x05
    3e84:	9e 81       	ldd	r25, Y+6	; 0x06
    3e86:	01 96       	adiw	r24, 0x01	; 1
    3e88:	9e 83       	std	Y+6, r25	; 0x06
    3e8a:	8d 83       	std	Y+5, r24	; 0x05

00003e8c <.Loc.1085>:
                    if(c == c0){
    3e8c:	8a 81       	ldd	r24, Y+2	; 0x02

00003e8e <.Loc.1086>:
    3e8e:	9f 81       	ldd	r25, Y+7	; 0x07
    3e90:	98 17       	cp	r25, r24
    3e92:	29 f4       	brne	.+10     	; 0x3e9e <.L405>

00003e94 <.Loc.1087>:
                        return {i+static_cast<size_type>(1),true};
    3e94:	89 81       	ldd	r24, Y+1	; 0x01
    3e96:	8f 5f       	subi	r24, 0xFF	; 255

00003e98 <.Loc.1088>:
    3e98:	08 2f       	mov	r16, r24
    3e9a:	11 e0       	ldi	r17, 0x01	; 1
    3e9c:	09 c0       	rjmp	.+18     	; 0x3eb0 <.L407>

00003e9e <.L405>:
            for(size_type i=0;i<bytes;++i){
    3e9e:	89 81       	ldd	r24, Y+1	; 0x01
    3ea0:	8f 5f       	subi	r24, 0xFF	; 255
    3ea2:	89 83       	std	Y+1, r24	; 0x01

00003ea4 <.L402>:
    3ea4:	99 81       	ldd	r25, Y+1	; 0x01
    3ea6:	88 85       	ldd	r24, Y+8	; 0x08
    3ea8:	98 17       	cp	r25, r24
    3eaa:	b0 f2       	brcs	.-84     	; 0x3e58 <.L406>

00003eac <.LBE121>:
            return {bytes,true};
    3eac:	08 85       	ldd	r16, Y+8	; 0x08
    3eae:	11 e0       	ldi	r17, 0x01	; 1

00003eb0 <.L407>:
        }
    3eb0:	c8 01       	movw	r24, r16
    3eb2:	28 96       	adiw	r28, 0x08	; 8
    3eb4:	0f b6       	in	r0, 0x3f	; 63
    3eb6:	f8 94       	cli
    3eb8:	de bf       	out	0x3e, r29	; 62
    3eba:	0f be       	out	0x3f, r0	; 63
    3ebc:	cd bf       	out	0x3d, r28	; 61
    3ebe:	df 91       	pop	r29
    3ec0:	cf 91       	pop	r28
    3ec2:	1f 91       	pop	r17
    3ec4:	0f 91       	pop	r16
    3ec6:	08 95       	ret

00003ec8 <_ZN10asyncruino4pipeINSt7__n486116coroutine_handleIvEEjLj32EE5writeERKS3_>:
	inline bool write(const T & value){
    3ec8:	cf 93       	push	r28
    3eca:	df 93       	push	r29
    3ecc:	00 d0       	rcall	.+0      	; 0x3ece <L0^A>

00003ece <L0^A>:
    3ece:	00 d0       	rcall	.+0      	; 0x3ed0 <L0^A>

00003ed0 <L0^A>:
    3ed0:	00 d0       	rcall	.+0      	; 0x3ed2 <L0^A>

00003ed2 <L0^A>:
    3ed2:	cd b7       	in	r28, 0x3d	; 61
    3ed4:	de b7       	in	r29, 0x3e	; 62
    3ed6:	9c 83       	std	Y+4, r25	; 0x04
    3ed8:	8b 83       	std	Y+3, r24	; 0x03
    3eda:	7e 83       	std	Y+6, r23	; 0x06
    3edc:	6d 83       	std	Y+5, r22	; 0x05

00003ede <.Loc.1094>:
		if(_size == reserved){
    3ede:	8b 81       	ldd	r24, Y+3	; 0x03
    3ee0:	9c 81       	ldd	r25, Y+4	; 0x04
    3ee2:	8e 5b       	subi	r24, 0xBE	; 190
    3ee4:	9f 4f       	sbci	r25, 0xFF	; 255
    3ee6:	fc 01       	movw	r30, r24
    3ee8:	80 81       	ld	r24, Z
    3eea:	91 81       	ldd	r25, Z+1	; 0x01

00003eec <.Loc.1095>:
    3eec:	80 32       	cpi	r24, 0x20	; 32
    3eee:	91 05       	cpc	r25, r1
    3ef0:	11 f4       	brne	.+4      	; 0x3ef6 <.L409>

00003ef2 <.Loc.1096>:
			return false;
    3ef2:	80 e0       	ldi	r24, 0x00	; 0
    3ef4:	36 c0       	rjmp	.+108    	; 0x3f62 <.L410>

00003ef6 <.L409>:
		T * m_ptr = _data + (_start+_size)%reserved;
    3ef6:	2b 81       	ldd	r18, Y+3	; 0x03
    3ef8:	3c 81       	ldd	r19, Y+4	; 0x04

00003efa <.Loc.1098>:
    3efa:	8b 81       	ldd	r24, Y+3	; 0x03
    3efc:	9c 81       	ldd	r25, Y+4	; 0x04
    3efe:	80 5c       	subi	r24, 0xC0	; 192
    3f00:	9f 4f       	sbci	r25, 0xFF	; 255
    3f02:	fc 01       	movw	r30, r24
    3f04:	40 81       	ld	r20, Z
    3f06:	51 81       	ldd	r21, Z+1	; 0x01

00003f08 <.Loc.1099>:
    3f08:	8b 81       	ldd	r24, Y+3	; 0x03
    3f0a:	9c 81       	ldd	r25, Y+4	; 0x04
    3f0c:	8e 5b       	subi	r24, 0xBE	; 190
    3f0e:	9f 4f       	sbci	r25, 0xFF	; 255
    3f10:	fc 01       	movw	r30, r24
    3f12:	80 81       	ld	r24, Z
    3f14:	91 81       	ldd	r25, Z+1	; 0x01

00003f16 <.Loc.1100>:
    3f16:	84 0f       	add	r24, r20
    3f18:	95 1f       	adc	r25, r21

00003f1a <.Loc.1101>:
    3f1a:	8f 71       	andi	r24, 0x1F	; 31
    3f1c:	99 27       	eor	r25, r25

00003f1e <.Loc.1102>:
    3f1e:	88 0f       	add	r24, r24
    3f20:	99 1f       	adc	r25, r25

00003f22 <.Loc.1103>:
    3f22:	82 0f       	add	r24, r18
    3f24:	93 1f       	adc	r25, r19
    3f26:	9a 83       	std	Y+2, r25	; 0x02
    3f28:	89 83       	std	Y+1, r24	; 0x01

00003f2a <.Loc.1104>:
		*m_ptr = value;
    3f2a:	89 81       	ldd	r24, Y+1	; 0x01
    3f2c:	9a 81       	ldd	r25, Y+2	; 0x02
    3f2e:	2d 81       	ldd	r18, Y+5	; 0x05
    3f30:	3e 81       	ldd	r19, Y+6	; 0x06
    3f32:	f9 01       	movw	r30, r18
    3f34:	20 81       	ld	r18, Z
    3f36:	31 81       	ldd	r19, Z+1	; 0x01
    3f38:	fc 01       	movw	r30, r24
    3f3a:	31 83       	std	Z+1, r19	; 0x01
    3f3c:	20 83       	st	Z, r18

00003f3e <.Loc.1105>:
		_size++;
    3f3e:	8b 81       	ldd	r24, Y+3	; 0x03
    3f40:	9c 81       	ldd	r25, Y+4	; 0x04
    3f42:	8e 5b       	subi	r24, 0xBE	; 190
    3f44:	9f 4f       	sbci	r25, 0xFF	; 255
    3f46:	fc 01       	movw	r30, r24
    3f48:	80 81       	ld	r24, Z
    3f4a:	91 81       	ldd	r25, Z+1	; 0x01
    3f4c:	9c 01       	movw	r18, r24
    3f4e:	2f 5f       	subi	r18, 0xFF	; 255
    3f50:	3f 4f       	sbci	r19, 0xFF	; 255
    3f52:	8b 81       	ldd	r24, Y+3	; 0x03
    3f54:	9c 81       	ldd	r25, Y+4	; 0x04
    3f56:	8e 5b       	subi	r24, 0xBE	; 190
    3f58:	9f 4f       	sbci	r25, 0xFF	; 255
    3f5a:	fc 01       	movw	r30, r24
    3f5c:	31 83       	std	Z+1, r19	; 0x01
    3f5e:	20 83       	st	Z, r18

00003f60 <.Loc.1106>:
		return true;
    3f60:	81 e0       	ldi	r24, 0x01	; 1

00003f62 <.L410>:
	}
    3f62:	0f 90       	pop	r0
    3f64:	0f 90       	pop	r0
    3f66:	0f 90       	pop	r0
    3f68:	0f 90       	pop	r0
    3f6a:	0f 90       	pop	r0
    3f6c:	0f 90       	pop	r0
    3f6e:	df 91       	pop	r29
    3f70:	cf 91       	pop	r28
    3f72:	08 95       	ret

00003f74 <_ZN10asyncruino10timer_implINS_9schedulerENS_13default_guardEmhLh1EE10timer_infoC1Ev>:
            timer_info():sch(0){}
    3f74:	cf 93       	push	r28
    3f76:	df 93       	push	r29
    3f78:	00 d0       	rcall	.+0      	; 0x3f7a <L0^A>

00003f7a <L0^A>:
    3f7a:	cd b7       	in	r28, 0x3d	; 61
    3f7c:	de b7       	in	r29, 0x3e	; 62
    3f7e:	9a 83       	std	Y+2, r25	; 0x02
    3f80:	89 83       	std	Y+1, r24	; 0x01

00003f82 <.Loc.1109>:
    3f82:	89 81       	ldd	r24, Y+1	; 0x01
    3f84:	9a 81       	ldd	r25, Y+2	; 0x02
    3f86:	fc 01       	movw	r30, r24
    3f88:	10 82       	st	Z, r1
    3f8a:	11 82       	std	Z+1, r1	; 0x01
    3f8c:	12 82       	std	Z+2, r1	; 0x02
    3f8e:	13 82       	std	Z+3, r1	; 0x03

00003f90 <.Loc.1110>:
    3f90:	89 81       	ldd	r24, Y+1	; 0x01
    3f92:	9a 81       	ldd	r25, Y+2	; 0x02
    3f94:	04 96       	adiw	r24, 0x04	; 4
    3f96:	0e 94 7b 00 	call	0xf6	; 0xf6 <_ZNSt7__n486116coroutine_handleIvEC1Ev>

00003f9a <.Loc.1111>:
    3f9a:	00 00       	nop
    3f9c:	0f 90       	pop	r0
    3f9e:	0f 90       	pop	r0
    3fa0:	df 91       	pop	r29
    3fa2:	cf 91       	pop	r28
    3fa4:	08 95       	ret

00003fa6 <_ZN10asyncruino10timer_implINS_9schedulerENS_13default_guardEmhLh1EE10timer_infoC1EmNSt7__n486116coroutine_handleIvEE>:
			timer_info(time_t sch,std::coroutine_handle<> handle):
    3fa6:	cf 93       	push	r28
    3fa8:	df 93       	push	r29
    3faa:	cd b7       	in	r28, 0x3d	; 61
    3fac:	de b7       	in	r29, 0x3e	; 62
    3fae:	28 97       	sbiw	r28, 0x08	; 8
    3fb0:	0f b6       	in	r0, 0x3f	; 63
    3fb2:	f8 94       	cli
    3fb4:	de bf       	out	0x3e, r29	; 62
    3fb6:	0f be       	out	0x3f, r0	; 63
    3fb8:	cd bf       	out	0x3d, r28	; 61
    3fba:	9a 83       	std	Y+2, r25	; 0x02
    3fbc:	89 83       	std	Y+1, r24	; 0x01
    3fbe:	4b 83       	std	Y+3, r20	; 0x03
    3fc0:	5c 83       	std	Y+4, r21	; 0x04
    3fc2:	6d 83       	std	Y+5, r22	; 0x05
    3fc4:	7e 83       	std	Y+6, r23	; 0x06
    3fc6:	38 87       	std	Y+8, r19	; 0x08
    3fc8:	2f 83       	std	Y+7, r18	; 0x07

00003fca <.Loc.1113>:
				sch(sch),handle(handle){}
    3fca:	29 81       	ldd	r18, Y+1	; 0x01
    3fcc:	3a 81       	ldd	r19, Y+2	; 0x02
    3fce:	8b 81       	ldd	r24, Y+3	; 0x03
    3fd0:	9c 81       	ldd	r25, Y+4	; 0x04
    3fd2:	ad 81       	ldd	r26, Y+5	; 0x05
    3fd4:	be 81       	ldd	r27, Y+6	; 0x06
    3fd6:	f9 01       	movw	r30, r18
    3fd8:	80 83       	st	Z, r24
    3fda:	91 83       	std	Z+1, r25	; 0x01
    3fdc:	a2 83       	std	Z+2, r26	; 0x02
    3fde:	b3 83       	std	Z+3, r27	; 0x03

00003fe0 <.Loc.1114>:
    3fe0:	89 81       	ldd	r24, Y+1	; 0x01
    3fe2:	9a 81       	ldd	r25, Y+2	; 0x02
    3fe4:	2f 81       	ldd	r18, Y+7	; 0x07
    3fe6:	38 85       	ldd	r19, Y+8	; 0x08
    3fe8:	fc 01       	movw	r30, r24
    3fea:	35 83       	std	Z+5, r19	; 0x05
    3fec:	24 83       	std	Z+4, r18	; 0x04

00003fee <.Loc.1115>:
    3fee:	00 00       	nop
    3ff0:	28 96       	adiw	r28, 0x08	; 8
    3ff2:	0f b6       	in	r0, 0x3f	; 63
    3ff4:	f8 94       	cli
    3ff6:	de bf       	out	0x3e, r29	; 62
    3ff8:	0f be       	out	0x3f, r0	; 63
    3ffa:	cd bf       	out	0x3d, r28	; 61
    3ffc:	df 91       	pop	r29
    3ffe:	cf 91       	pop	r28
    4000:	08 95       	ret

00004002 <__cmpsf2>:
    4002:	0e 94 20 21 	call	0x4240	; 0x4240 <__fp_cmp>
    4006:	08 f4       	brcc	.+2      	; 0x400a <.L1^B1>
    4008:	81 e0       	ldi	r24, 0x01	; 1

0000400a <.L1^B1>:
    400a:	08 95       	ret

0000400c <__divsf3>:
    400c:	0e 94 1a 20 	call	0x4034	; 0x4034 <__divsf3x>
    4010:	0c 94 6b 21 	jmp	0x42d6	; 0x42d6 <__fp_round>

00004014 <.L^B1>:
    4014:	0e 94 64 21 	call	0x42c8	; 0x42c8 <__fp_pscB>
    4018:	58 f0       	brcs	.+22     	; 0x4030 <.L_nan>
    401a:	0e 94 5d 21 	call	0x42ba	; 0x42ba <__fp_pscA>
    401e:	40 f0       	brcs	.+16     	; 0x4030 <.L_nan>
    4020:	29 f4       	brne	.+10     	; 0x402c <.L_zr>
    4022:	5f 3f       	cpi	r21, 0xFF	; 255
    4024:	29 f0       	breq	.+10     	; 0x4030 <.L_nan>

00004026 <.L_inf>:
    4026:	0c 94 44 21 	jmp	0x4288	; 0x4288 <__fp_inf>

0000402a <.L1^B1>:
    402a:	51 11       	cpse	r21, r1

0000402c <.L_zr>:
    402c:	0c 94 9f 21 	jmp	0x433e	; 0x433e <__fp_szero>

00004030 <.L_nan>:
    4030:	0c 94 4a 21 	jmp	0x4294	; 0x4294 <__fp_nan>

00004034 <__divsf3x>:
    4034:	0e 94 7c 21 	call	0x42f8	; 0x42f8 <__fp_split3>
    4038:	68 f3       	brcs	.-38     	; 0x4014 <.L^B1>

0000403a <__divsf3_pse>:
    403a:	99 23       	and	r25, r25
    403c:	b1 f3       	breq	.-20     	; 0x402a <.L1^B1>
    403e:	55 23       	and	r21, r21
    4040:	91 f3       	breq	.-28     	; 0x4026 <.L_inf>
    4042:	95 1b       	sub	r25, r21
    4044:	55 0b       	sbc	r21, r21
    4046:	bb 27       	eor	r27, r27
    4048:	aa 27       	eor	r26, r26

0000404a <.L2^B1>:
    404a:	62 17       	cp	r22, r18
    404c:	73 07       	cpc	r23, r19
    404e:	84 07       	cpc	r24, r20
    4050:	38 f0       	brcs	.+14     	; 0x4060 <.L3^B1>
    4052:	9f 5f       	subi	r25, 0xFF	; 255
    4054:	5f 4f       	sbci	r21, 0xFF	; 255
    4056:	22 0f       	add	r18, r18
    4058:	33 1f       	adc	r19, r19
    405a:	44 1f       	adc	r20, r20
    405c:	aa 1f       	adc	r26, r26
    405e:	a9 f3       	breq	.-22     	; 0x404a <.L2^B1>

00004060 <.L3^B1>:
    4060:	35 d0       	rcall	.+106    	; 0x40cc <.L_div>
    4062:	0e 2e       	mov	r0, r30
    4064:	3a f0       	brmi	.+14     	; 0x4074 <.L5^B1>

00004066 <.L4^B1>:
    4066:	e0 e8       	ldi	r30, 0x80	; 128
    4068:	32 d0       	rcall	.+100    	; 0x40ce <.L_div1>
    406a:	91 50       	subi	r25, 0x01	; 1
    406c:	50 40       	sbci	r21, 0x00	; 0
    406e:	e6 95       	lsr	r30
    4070:	00 1c       	adc	r0, r0
    4072:	ca f7       	brpl	.-14     	; 0x4066 <.L4^B1>

00004074 <.L5^B1>:
    4074:	2b d0       	rcall	.+86     	; 0x40cc <.L_div>
    4076:	fe 2f       	mov	r31, r30
    4078:	29 d0       	rcall	.+82     	; 0x40cc <.L_div>
    407a:	66 0f       	add	r22, r22
    407c:	77 1f       	adc	r23, r23
    407e:	88 1f       	adc	r24, r24
    4080:	bb 1f       	adc	r27, r27
    4082:	26 17       	cp	r18, r22
    4084:	37 07       	cpc	r19, r23
    4086:	48 07       	cpc	r20, r24
    4088:	ab 07       	cpc	r26, r27
    408a:	b0 e8       	ldi	r27, 0x80	; 128
    408c:	09 f0       	breq	.+2      	; 0x4090 <.L4^B2>
    408e:	bb 0b       	sbc	r27, r27

00004090 <.L4^B2>:
    4090:	80 2d       	mov	r24, r0
    4092:	bf 01       	movw	r22, r30
    4094:	ff 27       	eor	r31, r31
    4096:	93 58       	subi	r25, 0x83	; 131
    4098:	5f 4f       	sbci	r21, 0xFF	; 255
    409a:	3a f0       	brmi	.+14     	; 0x40aa <.L13^B1>
    409c:	9e 3f       	cpi	r25, 0xFE	; 254
    409e:	51 05       	cpc	r21, r1
    40a0:	78 f0       	brcs	.+30     	; 0x40c0 <.L15^B1>
    40a2:	0c 94 44 21 	jmp	0x4288	; 0x4288 <__fp_inf>

000040a6 <.L12^B1>:
    40a6:	0c 94 9f 21 	jmp	0x433e	; 0x433e <__fp_szero>

000040aa <.L13^B1>:
    40aa:	5f 3f       	cpi	r21, 0xFF	; 255
    40ac:	e4 f3       	brlt	.-8      	; 0x40a6 <.L12^B1>
    40ae:	98 3e       	cpi	r25, 0xE8	; 232
    40b0:	d4 f3       	brlt	.-12     	; 0x40a6 <.L12^B1>

000040b2 <.L14^B1>:
    40b2:	86 95       	lsr	r24
    40b4:	77 95       	ror	r23
    40b6:	67 95       	ror	r22
    40b8:	b7 95       	ror	r27
    40ba:	f7 95       	ror	r31
    40bc:	9f 5f       	subi	r25, 0xFF	; 255
    40be:	c9 f7       	brne	.-14     	; 0x40b2 <.L14^B1>

000040c0 <.L15^B1>:
    40c0:	88 0f       	add	r24, r24
    40c2:	91 1d       	adc	r25, r1
    40c4:	96 95       	lsr	r25
    40c6:	87 95       	ror	r24
    40c8:	97 f9       	bld	r25, 7
    40ca:	08 95       	ret

000040cc <.L_div>:
    40cc:	e1 e0       	ldi	r30, 0x01	; 1

000040ce <.L_div1>:
    40ce:	66 0f       	add	r22, r22
    40d0:	77 1f       	adc	r23, r23
    40d2:	88 1f       	adc	r24, r24
    40d4:	bb 1f       	adc	r27, r27
    40d6:	62 17       	cp	r22, r18
    40d8:	73 07       	cpc	r23, r19
    40da:	84 07       	cpc	r24, r20
    40dc:	ba 07       	cpc	r27, r26
    40de:	20 f0       	brcs	.+8      	; 0x40e8 <.L2^B2>
    40e0:	62 1b       	sub	r22, r18
    40e2:	73 0b       	sbc	r23, r19
    40e4:	84 0b       	sbc	r24, r20
    40e6:	ba 0b       	sbc	r27, r26

000040e8 <.L2^B2>:
    40e8:	ee 1f       	adc	r30, r30
    40ea:	88 f7       	brcc	.-30     	; 0x40ce <.L_div1>
    40ec:	e0 95       	com	r30
    40ee:	08 95       	ret

000040f0 <__fixsfdi>:
    40f0:	be e3       	ldi	r27, 0x3E	; 62
    40f2:	04 d0       	rcall	.+8      	; 0x40fc <.L_sf2di>
    40f4:	08 f4       	brcc	.+2      	; 0x40f8 <.L1^B1>
    40f6:	90 e8       	ldi	r25, 0x80	; 128

000040f8 <.L1^B1>:
    40f8:	08 95       	ret

000040fa <__fixunssfdi>:
    40fa:	bf e3       	ldi	r27, 0x3F	; 63

000040fc <.L_sf2di>:
    40fc:	22 27       	eor	r18, r18
    40fe:	33 27       	eor	r19, r19
    4100:	a9 01       	movw	r20, r18
    4102:	0e 94 84 21 	call	0x4308	; 0x4308 <__fp_splitA>
    4106:	60 f1       	brcs	.+88     	; 0x4160 <.L_ovfl>
    4108:	9f 57       	subi	r25, 0x7F	; 127
    410a:	48 f1       	brcs	.+82     	; 0x415e <.L_zero>
    410c:	b9 17       	cp	r27, r25
    410e:	40 f1       	brcs	.+80     	; 0x4160 <.L_ovfl>
    4110:	bf e3       	ldi	r27, 0x3F	; 63
    4112:	b9 1b       	sub	r27, r25
    4114:	99 27       	eor	r25, r25
    4116:	b8 50       	subi	r27, 0x08	; 8
    4118:	3a f4       	brpl	.+14     	; 0x4128 <.L3^B1>

0000411a <.L2^B1>:
    411a:	66 0f       	add	r22, r22
    411c:	77 1f       	adc	r23, r23
    411e:	88 1f       	adc	r24, r24
    4120:	99 1f       	adc	r25, r25
    4122:	b3 95       	inc	r27
    4124:	d2 f3       	brmi	.-12     	; 0x411a <.L2^B1>
    4126:	16 c0       	rjmp	.+44     	; 0x4154 <.L_sign>

00004128 <.L3^B1>:
    4128:	b8 50       	subi	r27, 0x08	; 8
    412a:	4a f0       	brmi	.+18     	; 0x413e <.L5^B1>

0000412c <.L4^B1>:
    412c:	23 2f       	mov	r18, r19
    412e:	34 2f       	mov	r19, r20
    4130:	45 2f       	mov	r20, r21
    4132:	56 2f       	mov	r21, r22
    4134:	67 2f       	mov	r22, r23
    4136:	78 2f       	mov	r23, r24
    4138:	88 27       	eor	r24, r24
    413a:	b8 50       	subi	r27, 0x08	; 8
    413c:	ba f7       	brpl	.-18     	; 0x412c <.L4^B1>

0000413e <.L5^B1>:
    413e:	b8 5f       	subi	r27, 0xF8	; 248
    4140:	49 f0       	breq	.+18     	; 0x4154 <.L_sign>

00004142 <.L6^B1>:
    4142:	86 95       	lsr	r24
    4144:	77 95       	ror	r23
    4146:	67 95       	ror	r22
    4148:	57 95       	ror	r21
    414a:	47 95       	ror	r20
    414c:	37 95       	ror	r19
    414e:	27 95       	ror	r18
    4150:	ba 95       	dec	r27
    4152:	b9 f7       	brne	.-18     	; 0x4142 <.L6^B1>

00004154 <.L_sign>:
    4154:	16 f4       	brtc	.+4      	; 0x415a <.L7^B1>
    4156:	0e 94 4d 21 	call	0x429a	; 0x429a <__fp_negdi>

0000415a <.L7^B1>:
    415a:	88 94       	clc
    415c:	08 95       	ret

0000415e <.L_zero>:
    415e:	88 94       	clc

00004160 <.L_ovfl>:
    4160:	60 e0       	ldi	r22, 0x00	; 0
    4162:	70 e0       	ldi	r23, 0x00	; 0
    4164:	cb 01       	movw	r24, r22
    4166:	08 95       	ret

00004168 <__fixunssfsi>:
    4168:	0e 94 84 21 	call	0x4308	; 0x4308 <__fp_splitA>
    416c:	88 f0       	brcs	.+34     	; 0x4190 <.L_err>
    416e:	9f 57       	subi	r25, 0x7F	; 127
    4170:	98 f0       	brcs	.+38     	; 0x4198 <.L_zr>
    4172:	b9 2f       	mov	r27, r25
    4174:	99 27       	eor	r25, r25
    4176:	b7 51       	subi	r27, 0x17	; 23
    4178:	b0 f0       	brcs	.+44     	; 0x41a6 <.L4^B1>
    417a:	e1 f0       	breq	.+56     	; 0x41b4 <.L_sign>

0000417c <.L1^B1>:
    417c:	66 0f       	add	r22, r22
    417e:	77 1f       	adc	r23, r23
    4180:	88 1f       	adc	r24, r24
    4182:	99 1f       	adc	r25, r25
    4184:	1a f0       	brmi	.+6      	; 0x418c <.L2^B1>
    4186:	ba 95       	dec	r27
    4188:	c9 f7       	brne	.-14     	; 0x417c <.L1^B1>
    418a:	14 c0       	rjmp	.+40     	; 0x41b4 <.L_sign>

0000418c <.L2^B1>:
    418c:	b1 30       	cpi	r27, 0x01	; 1
    418e:	91 f0       	breq	.+36     	; 0x41b4 <.L_sign>

00004190 <.L_err>:
    4190:	0e 94 9e 21 	call	0x433c	; 0x433c <__fp_zero>
    4194:	b1 e0       	ldi	r27, 0x01	; 1
    4196:	08 95       	ret

00004198 <.L_zr>:
    4198:	0c 94 9e 21 	jmp	0x433c	; 0x433c <__fp_zero>

0000419c <.L3^B1>:
    419c:	67 2f       	mov	r22, r23
    419e:	78 2f       	mov	r23, r24
    41a0:	88 27       	eor	r24, r24
    41a2:	b8 5f       	subi	r27, 0xF8	; 248
    41a4:	39 f0       	breq	.+14     	; 0x41b4 <.L_sign>

000041a6 <.L4^B1>:
    41a6:	b9 3f       	cpi	r27, 0xF9	; 249
    41a8:	cc f3       	brlt	.-14     	; 0x419c <.L3^B1>

000041aa <.L5^B1>:
    41aa:	86 95       	lsr	r24
    41ac:	77 95       	ror	r23
    41ae:	67 95       	ror	r22
    41b0:	b3 95       	inc	r27
    41b2:	d9 f7       	brne	.-10     	; 0x41aa <.L5^B1>

000041b4 <.L_sign>:
    41b4:	3e f4       	brtc	.+14     	; 0x41c4 <.L6^B1>
    41b6:	90 95       	com	r25
    41b8:	80 95       	com	r24
    41ba:	70 95       	com	r23
    41bc:	61 95       	neg	r22
    41be:	7f 4f       	sbci	r23, 0xFF	; 255
    41c0:	8f 4f       	sbci	r24, 0xFF	; 255
    41c2:	9f 4f       	sbci	r25, 0xFF	; 255

000041c4 <.L6^B1>:
    41c4:	08 95       	ret

000041c6 <__floatunsisf>:
    41c6:	e8 94       	clt
    41c8:	09 c0       	rjmp	.+18     	; 0x41dc <.L1^B1>

000041ca <__floatsisf>:
    41ca:	97 fb       	bst	r25, 7
    41cc:	3e f4       	brtc	.+14     	; 0x41dc <.L1^B1>
    41ce:	90 95       	com	r25
    41d0:	80 95       	com	r24
    41d2:	70 95       	com	r23
    41d4:	61 95       	neg	r22
    41d6:	7f 4f       	sbci	r23, 0xFF	; 255
    41d8:	8f 4f       	sbci	r24, 0xFF	; 255
    41da:	9f 4f       	sbci	r25, 0xFF	; 255

000041dc <.L1^B1>:
    41dc:	99 23       	and	r25, r25
    41de:	a9 f0       	breq	.+42     	; 0x420a <.L4^B1>
    41e0:	f9 2f       	mov	r31, r25
    41e2:	96 e9       	ldi	r25, 0x96	; 150
    41e4:	bb 27       	eor	r27, r27

000041e6 <.L2^B1>:
    41e6:	93 95       	inc	r25
    41e8:	f6 95       	lsr	r31
    41ea:	87 95       	ror	r24
    41ec:	77 95       	ror	r23
    41ee:	67 95       	ror	r22
    41f0:	b7 95       	ror	r27
    41f2:	f1 11       	cpse	r31, r1
    41f4:	f8 cf       	rjmp	.-16     	; 0x41e6 <.L2^B1>
    41f6:	fa f4       	brpl	.+62     	; 0x4236 <.L_pack>
    41f8:	bb 0f       	add	r27, r27
    41fa:	11 f4       	brne	.+4      	; 0x4200 <.L3^B1>
    41fc:	60 ff       	sbrs	r22, 0
    41fe:	1b c0       	rjmp	.+54     	; 0x4236 <.L_pack>

00004200 <.L3^B1>:
    4200:	6f 5f       	subi	r22, 0xFF	; 255
    4202:	7f 4f       	sbci	r23, 0xFF	; 255
    4204:	8f 4f       	sbci	r24, 0xFF	; 255
    4206:	9f 4f       	sbci	r25, 0xFF	; 255
    4208:	16 c0       	rjmp	.+44     	; 0x4236 <.L_pack>

0000420a <.L4^B1>:
    420a:	88 23       	and	r24, r24
    420c:	11 f0       	breq	.+4      	; 0x4212 <.L5^B1>
    420e:	96 e9       	ldi	r25, 0x96	; 150
    4210:	11 c0       	rjmp	.+34     	; 0x4234 <.L8^B1>

00004212 <.L5^B1>:
    4212:	77 23       	and	r23, r23
    4214:	21 f0       	breq	.+8      	; 0x421e <.L6^B1>
    4216:	9e e8       	ldi	r25, 0x8E	; 142
    4218:	87 2f       	mov	r24, r23
    421a:	76 2f       	mov	r23, r22
    421c:	05 c0       	rjmp	.+10     	; 0x4228 <.L7^B1>

0000421e <.L6^B1>:
    421e:	66 23       	and	r22, r22
    4220:	71 f0       	breq	.+28     	; 0x423e <.L9^B1>
    4222:	96 e8       	ldi	r25, 0x86	; 134
    4224:	86 2f       	mov	r24, r22
    4226:	70 e0       	ldi	r23, 0x00	; 0

00004228 <.L7^B1>:
    4228:	60 e0       	ldi	r22, 0x00	; 0
    422a:	2a f0       	brmi	.+10     	; 0x4236 <.L_pack>

0000422c <.L10^B1>:
    422c:	9a 95       	dec	r25
    422e:	66 0f       	add	r22, r22
    4230:	77 1f       	adc	r23, r23
    4232:	88 1f       	adc	r24, r24

00004234 <.L8^B1>:
    4234:	da f7       	brpl	.-10     	; 0x422c <.L10^B1>

00004236 <.L_pack>:
    4236:	88 0f       	add	r24, r24
    4238:	96 95       	lsr	r25
    423a:	87 95       	ror	r24
    423c:	97 f9       	bld	r25, 7

0000423e <.L9^B1>:
    423e:	08 95       	ret

00004240 <__fp_cmp>:
    4240:	99 0f       	add	r25, r25
    4242:	00 08       	sbc	r0, r0
    4244:	55 0f       	add	r21, r21
    4246:	aa 0b       	sbc	r26, r26
    4248:	e0 e8       	ldi	r30, 0x80	; 128
    424a:	fe ef       	ldi	r31, 0xFE	; 254
    424c:	16 16       	cp	r1, r22
    424e:	17 06       	cpc	r1, r23
    4250:	e8 07       	cpc	r30, r24
    4252:	f9 07       	cpc	r31, r25
    4254:	c0 f0       	brcs	.+48     	; 0x4286 <.L9^B1>
    4256:	12 16       	cp	r1, r18
    4258:	13 06       	cpc	r1, r19
    425a:	e4 07       	cpc	r30, r20
    425c:	f5 07       	cpc	r31, r21
    425e:	98 f0       	brcs	.+38     	; 0x4286 <.L9^B1>
    4260:	62 1b       	sub	r22, r18
    4262:	73 0b       	sbc	r23, r19
    4264:	84 0b       	sbc	r24, r20
    4266:	95 0b       	sbc	r25, r21
    4268:	39 f4       	brne	.+14     	; 0x4278 <.L1^B1>
    426a:	0a 26       	eor	r0, r26
    426c:	61 f0       	breq	.+24     	; 0x4286 <.L9^B1>
    426e:	23 2b       	or	r18, r19
    4270:	24 2b       	or	r18, r20
    4272:	25 2b       	or	r18, r21
    4274:	21 f4       	brne	.+8      	; 0x427e <.L2^B1>
    4276:	08 95       	ret

00004278 <.L1^B1>:
    4278:	0a 26       	eor	r0, r26
    427a:	09 f4       	brne	.+2      	; 0x427e <.L2^B1>
    427c:	a1 40       	sbci	r26, 0x01	; 1

0000427e <.L2^B1>:
    427e:	a6 95       	lsr	r26
    4280:	8f ef       	ldi	r24, 0xFF	; 255
    4282:	81 1d       	adc	r24, r1
    4284:	81 1d       	adc	r24, r1

00004286 <.L9^B1>:
    4286:	08 95       	ret

00004288 <__fp_inf>:
    4288:	97 f9       	bld	r25, 7
    428a:	9f 67       	ori	r25, 0x7F	; 127
    428c:	80 e8       	ldi	r24, 0x80	; 128
    428e:	70 e0       	ldi	r23, 0x00	; 0
    4290:	60 e0       	ldi	r22, 0x00	; 0
    4292:	08 95       	ret

00004294 <__fp_nan>:
    4294:	9f ef       	ldi	r25, 0xFF	; 255
    4296:	80 ec       	ldi	r24, 0xC0	; 192
    4298:	08 95       	ret

0000429a <__fp_negdi>:
    429a:	90 95       	com	r25
    429c:	80 95       	com	r24
    429e:	70 95       	com	r23
    42a0:	60 95       	com	r22
    42a2:	50 95       	com	r21
    42a4:	40 95       	com	r20
    42a6:	30 95       	com	r19
    42a8:	21 95       	neg	r18
    42aa:	3f 4f       	sbci	r19, 0xFF	; 255
    42ac:	4f 4f       	sbci	r20, 0xFF	; 255
    42ae:	5f 4f       	sbci	r21, 0xFF	; 255
    42b0:	6f 4f       	sbci	r22, 0xFF	; 255
    42b2:	7f 4f       	sbci	r23, 0xFF	; 255
    42b4:	8f 4f       	sbci	r24, 0xFF	; 255
    42b6:	9f 4f       	sbci	r25, 0xFF	; 255
    42b8:	08 95       	ret

000042ba <__fp_pscA>:
    42ba:	00 24       	eor	r0, r0
    42bc:	0a 94       	dec	r0
    42be:	16 16       	cp	r1, r22
    42c0:	17 06       	cpc	r1, r23
    42c2:	18 06       	cpc	r1, r24
    42c4:	09 06       	cpc	r0, r25
    42c6:	08 95       	ret

000042c8 <__fp_pscB>:
    42c8:	00 24       	eor	r0, r0
    42ca:	0a 94       	dec	r0
    42cc:	12 16       	cp	r1, r18
    42ce:	13 06       	cpc	r1, r19
    42d0:	14 06       	cpc	r1, r20
    42d2:	05 06       	cpc	r0, r21
    42d4:	08 95       	ret

000042d6 <__fp_round>:
    42d6:	09 2e       	mov	r0, r25
    42d8:	03 94       	inc	r0
    42da:	00 0c       	add	r0, r0
    42dc:	11 f4       	brne	.+4      	; 0x42e2 <.L1^B1>
    42de:	88 23       	and	r24, r24
    42e0:	52 f0       	brmi	.+20     	; 0x42f6 <.L3^B1>

000042e2 <.L1^B1>:
    42e2:	bb 0f       	add	r27, r27
    42e4:	40 f4       	brcc	.+16     	; 0x42f6 <.L3^B1>
    42e6:	bf 2b       	or	r27, r31
    42e8:	11 f4       	brne	.+4      	; 0x42ee <.L2^B1>
    42ea:	60 ff       	sbrs	r22, 0
    42ec:	04 c0       	rjmp	.+8      	; 0x42f6 <.L3^B1>

000042ee <.L2^B1>:
    42ee:	6f 5f       	subi	r22, 0xFF	; 255
    42f0:	7f 4f       	sbci	r23, 0xFF	; 255
    42f2:	8f 4f       	sbci	r24, 0xFF	; 255
    42f4:	9f 4f       	sbci	r25, 0xFF	; 255

000042f6 <.L3^B1>:
    42f6:	08 95       	ret

000042f8 <__fp_split3>:
    42f8:	57 fd       	sbrc	r21, 7
    42fa:	90 58       	subi	r25, 0x80	; 128
    42fc:	44 0f       	add	r20, r20
    42fe:	55 1f       	adc	r21, r21
    4300:	59 f0       	breq	.+22     	; 0x4318 <.L4^B1>
    4302:	5f 3f       	cpi	r21, 0xFF	; 255
    4304:	71 f0       	breq	.+28     	; 0x4322 <.L5^B1>

00004306 <.L1^B1>:
    4306:	47 95       	ror	r20

00004308 <__fp_splitA>:
    4308:	88 0f       	add	r24, r24
    430a:	97 fb       	bst	r25, 7
    430c:	99 1f       	adc	r25, r25
    430e:	61 f0       	breq	.+24     	; 0x4328 <.L6^B1>
    4310:	9f 3f       	cpi	r25, 0xFF	; 255
    4312:	79 f0       	breq	.+30     	; 0x4332 <.L7^B1>

00004314 <.L3^B1>:
    4314:	87 95       	ror	r24
    4316:	08 95       	ret

00004318 <.L4^B1>:
    4318:	12 16       	cp	r1, r18
    431a:	13 06       	cpc	r1, r19
    431c:	14 06       	cpc	r1, r20
    431e:	55 1f       	adc	r21, r21
    4320:	f2 cf       	rjmp	.-28     	; 0x4306 <.L1^B1>

00004322 <.L5^B1>:
    4322:	46 95       	lsr	r20
    4324:	f1 df       	rcall	.-30     	; 0x4308 <__fp_splitA>
    4326:	08 c0       	rjmp	.+16     	; 0x4338 <.L8^B1>

00004328 <.L6^B1>:
    4328:	16 16       	cp	r1, r22
    432a:	17 06       	cpc	r1, r23
    432c:	18 06       	cpc	r1, r24
    432e:	99 1f       	adc	r25, r25
    4330:	f1 cf       	rjmp	.-30     	; 0x4314 <.L3^B1>

00004332 <.L7^B1>:
    4332:	86 95       	lsr	r24
    4334:	71 05       	cpc	r23, r1
    4336:	61 05       	cpc	r22, r1

00004338 <.L8^B1>:
    4338:	08 94       	sec
    433a:	08 95       	ret

0000433c <__fp_zero>:
    433c:	e8 94       	clt

0000433e <__fp_szero>:
    433e:	bb 27       	eor	r27, r27
    4340:	66 27       	eor	r22, r22
    4342:	77 27       	eor	r23, r23
    4344:	cb 01       	movw	r24, r22
    4346:	97 f9       	bld	r25, 7
    4348:	08 95       	ret

0000434a <__gesf2>:
    434a:	0e 94 20 21 	call	0x4240	; 0x4240 <__fp_cmp>
    434e:	08 f4       	brcc	.+2      	; 0x4352 <.L1^B1>
    4350:	8f ef       	ldi	r24, 0xFF	; 255

00004352 <.L1^B1>:
    4352:	08 95       	ret

00004354 <__mulsf3>:
    4354:	0e 94 bd 21 	call	0x437a	; 0x437a <__mulsf3x>
    4358:	0c 94 6b 21 	jmp	0x42d6	; 0x42d6 <__fp_round>

0000435c <.L^B1>:
    435c:	0e 94 5d 21 	call	0x42ba	; 0x42ba <__fp_pscA>
    4360:	38 f0       	brcs	.+14     	; 0x4370 <.L1^B1>
    4362:	0e 94 64 21 	call	0x42c8	; 0x42c8 <__fp_pscB>
    4366:	20 f0       	brcs	.+8      	; 0x4370 <.L1^B1>
    4368:	95 23       	and	r25, r21
    436a:	11 f0       	breq	.+4      	; 0x4370 <.L1^B1>
    436c:	0c 94 44 21 	jmp	0x4288	; 0x4288 <__fp_inf>

00004370 <.L1^B1>:
    4370:	0c 94 4a 21 	jmp	0x4294	; 0x4294 <__fp_nan>

00004374 <.L2^B1>:
    4374:	11 24       	eor	r1, r1
    4376:	0c 94 9f 21 	jmp	0x433e	; 0x433e <__fp_szero>

0000437a <__mulsf3x>:
    437a:	0e 94 7c 21 	call	0x42f8	; 0x42f8 <__fp_split3>
    437e:	70 f3       	brcs	.-36     	; 0x435c <.L^B1>

00004380 <__mulsf3_pse>:
    4380:	95 9f       	mul	r25, r21
    4382:	c1 f3       	breq	.-16     	; 0x4374 <.L2^B1>
    4384:	95 0f       	add	r25, r21
    4386:	50 e0       	ldi	r21, 0x00	; 0
    4388:	55 1f       	adc	r21, r21
    438a:	62 9f       	mul	r22, r18
    438c:	f0 01       	movw	r30, r0
    438e:	72 9f       	mul	r23, r18
    4390:	bb 27       	eor	r27, r27
    4392:	f0 0d       	add	r31, r0
    4394:	b1 1d       	adc	r27, r1
    4396:	63 9f       	mul	r22, r19
    4398:	aa 27       	eor	r26, r26
    439a:	f0 0d       	add	r31, r0
    439c:	b1 1d       	adc	r27, r1
    439e:	aa 1f       	adc	r26, r26
    43a0:	64 9f       	mul	r22, r20
    43a2:	66 27       	eor	r22, r22
    43a4:	b0 0d       	add	r27, r0
    43a6:	a1 1d       	adc	r26, r1
    43a8:	66 1f       	adc	r22, r22
    43aa:	82 9f       	mul	r24, r18
    43ac:	22 27       	eor	r18, r18
    43ae:	b0 0d       	add	r27, r0
    43b0:	a1 1d       	adc	r26, r1
    43b2:	62 1f       	adc	r22, r18
    43b4:	73 9f       	mul	r23, r19
    43b6:	b0 0d       	add	r27, r0
    43b8:	a1 1d       	adc	r26, r1
    43ba:	62 1f       	adc	r22, r18
    43bc:	83 9f       	mul	r24, r19
    43be:	a0 0d       	add	r26, r0
    43c0:	61 1d       	adc	r22, r1
    43c2:	22 1f       	adc	r18, r18
    43c4:	74 9f       	mul	r23, r20
    43c6:	33 27       	eor	r19, r19
    43c8:	a0 0d       	add	r26, r0
    43ca:	61 1d       	adc	r22, r1
    43cc:	23 1f       	adc	r18, r19
    43ce:	84 9f       	mul	r24, r20
    43d0:	60 0d       	add	r22, r0
    43d2:	21 1d       	adc	r18, r1
    43d4:	82 2f       	mov	r24, r18
    43d6:	76 2f       	mov	r23, r22
    43d8:	6a 2f       	mov	r22, r26
    43da:	11 24       	eor	r1, r1
    43dc:	9f 57       	subi	r25, 0x7F	; 127
    43de:	50 40       	sbci	r21, 0x00	; 0
    43e0:	9a f0       	brmi	.+38     	; 0x4408 <.L13^B1>
    43e2:	f1 f0       	breq	.+60     	; 0x4420 <.L15^B1>

000043e4 <.L10^B1>:
    43e4:	88 23       	and	r24, r24
    43e6:	4a f0       	brmi	.+18     	; 0x43fa <.L11^B1>
    43e8:	ee 0f       	add	r30, r30
    43ea:	ff 1f       	adc	r31, r31
    43ec:	bb 1f       	adc	r27, r27
    43ee:	66 1f       	adc	r22, r22
    43f0:	77 1f       	adc	r23, r23
    43f2:	88 1f       	adc	r24, r24
    43f4:	91 50       	subi	r25, 0x01	; 1
    43f6:	50 40       	sbci	r21, 0x00	; 0
    43f8:	a9 f7       	brne	.-22     	; 0x43e4 <.L10^B1>

000043fa <.L11^B1>:
    43fa:	9e 3f       	cpi	r25, 0xFE	; 254
    43fc:	51 05       	cpc	r21, r1
    43fe:	80 f0       	brcs	.+32     	; 0x4420 <.L15^B1>
    4400:	0c 94 44 21 	jmp	0x4288	; 0x4288 <__fp_inf>

00004404 <.L12^B1>:
    4404:	0c 94 9f 21 	jmp	0x433e	; 0x433e <__fp_szero>

00004408 <.L13^B1>:
    4408:	5f 3f       	cpi	r21, 0xFF	; 255
    440a:	e4 f3       	brlt	.-8      	; 0x4404 <.L12^B1>
    440c:	98 3e       	cpi	r25, 0xE8	; 232
    440e:	d4 f3       	brlt	.-12     	; 0x4404 <.L12^B1>

00004410 <.L14^B1>:
    4410:	86 95       	lsr	r24
    4412:	77 95       	ror	r23
    4414:	67 95       	ror	r22
    4416:	b7 95       	ror	r27
    4418:	f7 95       	ror	r31
    441a:	e7 95       	ror	r30
    441c:	9f 5f       	subi	r25, 0xFF	; 255
    441e:	c1 f7       	brne	.-16     	; 0x4410 <.L14^B1>

00004420 <.L15^B1>:
    4420:	fe 2b       	or	r31, r30
    4422:	88 0f       	add	r24, r24
    4424:	91 1d       	adc	r25, r1
    4426:	96 95       	lsr	r25
    4428:	87 95       	ror	r24
    442a:	97 f9       	bld	r25, 7
    442c:	08 95       	ret

0000442e <__udivmodsi4>:
    442e:	a1 e2       	ldi	r26, 0x21	; 33

00004430 <.Loc.1>:
    4430:	1a 2e       	mov	r1, r26

00004432 <.Loc.2>:
    4432:	aa 1b       	sub	r26, r26

00004434 <.Loc.3>:
    4434:	bb 1b       	sub	r27, r27

00004436 <.Loc.4>:
    4436:	fd 01       	movw	r30, r26

00004438 <.Loc.5>:
    4438:	0d c0       	rjmp	.+26     	; 0x4454 <__udivmodsi4_ep>

0000443a <__udivmodsi4_loop>:
    443a:	aa 1f       	adc	r26, r26

0000443c <.Loc.7>:
    443c:	bb 1f       	adc	r27, r27

0000443e <.Loc.8>:
    443e:	ee 1f       	adc	r30, r30

00004440 <.Loc.9>:
    4440:	ff 1f       	adc	r31, r31

00004442 <.Loc.10>:
    4442:	a2 17       	cp	r26, r18

00004444 <.Loc.11>:
    4444:	b3 07       	cpc	r27, r19

00004446 <.Loc.12>:
    4446:	e4 07       	cpc	r30, r20

00004448 <.Loc.13>:
    4448:	f5 07       	cpc	r31, r21

0000444a <.Loc.14>:
    444a:	20 f0       	brcs	.+8      	; 0x4454 <__udivmodsi4_ep>

0000444c <.Loc.15>:
    444c:	a2 1b       	sub	r26, r18

0000444e <.Loc.16>:
    444e:	b3 0b       	sbc	r27, r19

00004450 <.Loc.17>:
    4450:	e4 0b       	sbc	r30, r20

00004452 <.Loc.18>:
    4452:	f5 0b       	sbc	r31, r21

00004454 <__udivmodsi4_ep>:
    4454:	66 1f       	adc	r22, r22

00004456 <.Loc.20>:
    4456:	77 1f       	adc	r23, r23

00004458 <.Loc.21>:
    4458:	88 1f       	adc	r24, r24

0000445a <.Loc.22>:
    445a:	99 1f       	adc	r25, r25

0000445c <.Loc.23>:
    445c:	1a 94       	dec	r1

0000445e <.Loc.24>:
    445e:	69 f7       	brne	.-38     	; 0x443a <__udivmodsi4_loop>

00004460 <.Loc.25>:
    4460:	60 95       	com	r22

00004462 <.Loc.26>:
    4462:	70 95       	com	r23

00004464 <.Loc.27>:
    4464:	80 95       	com	r24

00004466 <.Loc.28>:
    4466:	90 95       	com	r25

00004468 <.Loc.29>:
    4468:	9b 01       	movw	r18, r22

0000446a <.Loc.30>:
    446a:	ac 01       	movw	r20, r24

0000446c <.Loc.31>:
    446c:	bd 01       	movw	r22, r26

0000446e <.Loc.32>:
    446e:	cf 01       	movw	r24, r30

00004470 <.Loc.33>:
    4470:	08 95       	ret

00004472 <__tablejump2__>:
    4472:	ee 0f       	add	r30, r30

00004474 <.Loc.1>:
    4474:	ff 1f       	adc	r31, r31

00004476 <.Loc.2>:
    4476:	05 90       	lpm	r0, Z+

00004478 <.Loc.3>:
    4478:	f4 91       	lpm	r31, Z

0000447a <.Loc.4>:
    447a:	e0 2d       	mov	r30, r0

0000447c <.Loc.5>:
    447c:	09 94       	ijmp

0000447e <__adddi3_s8>:
    447e:	00 24       	eor	r0, r0

00004480 <.Loc.1>:
    4480:	a7 fd       	sbrc	r26, 7

00004482 <.Loc.2>:
    4482:	00 94       	com	r0

00004484 <.Loc.3>:
    4484:	2a 0f       	add	r18, r26
    4486:	30 1d       	adc	r19, r0
    4488:	40 1d       	adc	r20, r0
    448a:	50 1d       	adc	r21, r0

0000448c <.Loc.4>:
    448c:	60 1d       	adc	r22, r0
    448e:	70 1d       	adc	r23, r0
    4490:	80 1d       	adc	r24, r0
    4492:	90 1d       	adc	r25, r0

00004494 <.Loc.5>:
    4494:	08 95       	ret

00004496 <malloc>:
    4496:	0f 93       	push	r16
    4498:	1f 93       	push	r17
    449a:	cf 93       	push	r28
    449c:	df 93       	push	r29
    449e:	9c 01       	movw	r18, r24
    44a0:	02 97       	sbiw	r24, 0x02	; 2
    44a2:	10 f4       	brcc	.+4      	; 0x44a8 <.L2>
    44a4:	22 e0       	ldi	r18, 0x02	; 2
    44a6:	30 e0       	ldi	r19, 0x00	; 0

000044a8 <.L2>:
    44a8:	e0 91 54 01 	lds	r30, 0x0154	; 0x800154 <__flp>
    44ac:	f0 91 55 01 	lds	r31, 0x0155	; 0x800155 <__flp+0x1>
    44b0:	80 e0       	ldi	r24, 0x00	; 0
    44b2:	90 e0       	ldi	r25, 0x00	; 0
    44b4:	a0 e0       	ldi	r26, 0x00	; 0
    44b6:	b0 e0       	ldi	r27, 0x00	; 0

000044b8 <.L3>:
    44b8:	30 97       	sbiw	r30, 0x00	; 0
    44ba:	91 f4       	brne	.+36     	; 0x44e0 <.L9>
    44bc:	00 97       	sbiw	r24, 0x00	; 0
    44be:	09 f4       	brne	.+2      	; 0x44c2 <L0^A+0x2>

000044c0 <L0^A>:
    44c0:	45 c0       	rjmp	.+138    	; 0x454c <.L10>
    44c2:	82 1b       	sub	r24, r18
    44c4:	93 0b       	sbc	r25, r19
    44c6:	84 30       	cpi	r24, 0x04	; 4
    44c8:	91 05       	cpc	r25, r1
    44ca:	b8 f5       	brcc	.+110    	; 0x453a <.L11>
    44cc:	8a 81       	ldd	r24, Y+2	; 0x02
    44ce:	9b 81       	ldd	r25, Y+3	; 0x03
    44d0:	61 15       	cp	r22, r1
    44d2:	71 05       	cpc	r23, r1
    44d4:	69 f1       	breq	.+90     	; 0x4530 <.L12>
    44d6:	fb 01       	movw	r30, r22
    44d8:	93 83       	std	Z+3, r25	; 0x03
    44da:	82 83       	std	Z+2, r24	; 0x02

000044dc <.L13>:
    44dc:	fe 01       	movw	r30, r28
    44de:	11 c0       	rjmp	.+34     	; 0x4502 <.L17>

000044e0 <.L9>:
    44e0:	40 81       	ld	r20, Z
    44e2:	51 81       	ldd	r21, Z+1	; 0x01
    44e4:	02 81       	ldd	r16, Z+2	; 0x02
    44e6:	13 81       	ldd	r17, Z+3	; 0x03
    44e8:	42 17       	cp	r20, r18
    44ea:	53 07       	cpc	r21, r19
    44ec:	f0 f0       	brcs	.+60     	; 0x452a <.L4>
    44ee:	42 17       	cp	r20, r18
    44f0:	53 07       	cpc	r21, r19
    44f2:	99 f4       	brne	.+38     	; 0x451a <.L5>
    44f4:	10 97       	sbiw	r26, 0x00	; 0
    44f6:	61 f0       	breq	.+24     	; 0x4510 <.L6>
    44f8:	12 96       	adiw	r26, 0x02	; 2
    44fa:	0c 93       	st	X, r16
    44fc:	12 97       	sbiw	r26, 0x02	; 2
    44fe:	13 96       	adiw	r26, 0x03	; 3
    4500:	1c 93       	st	X, r17

00004502 <.L17>:
    4502:	32 96       	adiw	r30, 0x02	; 2

00004504 <.L1>:
    4504:	cf 01       	movw	r24, r30
    4506:	df 91       	pop	r29
    4508:	cf 91       	pop	r28
    450a:	1f 91       	pop	r17
    450c:	0f 91       	pop	r16
    450e:	08 95       	ret

00004510 <.L6>:
    4510:	00 93 54 01 	sts	0x0154, r16	; 0x800154 <__flp>
    4514:	10 93 55 01 	sts	0x0155, r17	; 0x800155 <__flp+0x1>
    4518:	f4 cf       	rjmp	.-24     	; 0x4502 <.L17>

0000451a <.L5>:
    451a:	00 97       	sbiw	r24, 0x00	; 0
    451c:	19 f0       	breq	.+6      	; 0x4524 <.L16>
    451e:	48 17       	cp	r20, r24
    4520:	59 07       	cpc	r21, r25
    4522:	18 f4       	brcc	.+6      	; 0x452a <.L4>

00004524 <.L16>:
    4524:	ca 01       	movw	r24, r20
    4526:	bd 01       	movw	r22, r26
    4528:	ef 01       	movw	r28, r30

0000452a <.L4>:
    452a:	df 01       	movw	r26, r30
    452c:	f8 01       	movw	r30, r16
    452e:	c4 cf       	rjmp	.-120    	; 0x44b8 <.L3>

00004530 <.L12>:
    4530:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <__flp+0x1>
    4534:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <__flp>
    4538:	d1 cf       	rjmp	.-94     	; 0x44dc <.L13>

0000453a <.L11>:
    453a:	fe 01       	movw	r30, r28
    453c:	e8 0f       	add	r30, r24
    453e:	f9 1f       	adc	r31, r25
    4540:	21 93       	st	Z+, r18
    4542:	31 93       	st	Z+, r19
    4544:	02 97       	sbiw	r24, 0x02	; 2
    4546:	99 83       	std	Y+1, r25	; 0x01
    4548:	88 83       	st	Y, r24
    454a:	dc cf       	rjmp	.-72     	; 0x4504 <.L1>

0000454c <.L10>:
    454c:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <__brkval>
    4550:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <__brkval+0x1>
    4554:	89 2b       	or	r24, r25
    4556:	41 f4       	brne	.+16     	; 0x4568 <.L14>
    4558:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__malloc_heap_start>
    455c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    4560:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <__brkval+0x1>
    4564:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <__brkval>

00004568 <.L14>:
    4568:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__malloc_heap_end>
    456c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__malloc_heap_end+0x1>
    4570:	00 97       	sbiw	r24, 0x00	; 0
    4572:	41 f4       	brne	.+16     	; 0x4584 <.L15>
    4574:	8d b7       	in	r24, 0x3d	; 61
    4576:	9e b7       	in	r25, 0x3e	; 62
    4578:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    457c:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    4580:	84 1b       	sub	r24, r20
    4582:	95 0b       	sbc	r25, r21

00004584 <.L15>:
    4584:	40 91 56 01 	lds	r20, 0x0156	; 0x800156 <__brkval>
    4588:	50 91 57 01 	lds	r21, 0x0157	; 0x800157 <__brkval+0x1>
    458c:	48 17       	cp	r20, r24
    458e:	59 07       	cpc	r21, r25
    4590:	08 f0       	brcs	.+2      	; 0x4594 <L0^A+0x2>

00004592 <L0^A>:
    4592:	b8 cf       	rjmp	.-144    	; 0x4504 <.L1>
    4594:	84 1b       	sub	r24, r20
    4596:	95 0b       	sbc	r25, r21
    4598:	82 17       	cp	r24, r18
    459a:	93 07       	cpc	r25, r19
    459c:	08 f4       	brcc	.+2      	; 0x45a0 <L0^A+0x2>

0000459e <L0^A>:
    459e:	b2 cf       	rjmp	.-156    	; 0x4504 <.L1>
    45a0:	b9 01       	movw	r22, r18
    45a2:	6e 5f       	subi	r22, 0xFE	; 254
    45a4:	7f 4f       	sbci	r23, 0xFF	; 255
    45a6:	86 17       	cp	r24, r22
    45a8:	97 07       	cpc	r25, r23
    45aa:	08 f4       	brcc	.+2      	; 0x45ae <L0^A+0x2>

000045ac <L0^A>:
    45ac:	ab cf       	rjmp	.-170    	; 0x4504 <.L1>
    45ae:	64 0f       	add	r22, r20
    45b0:	75 1f       	adc	r23, r21
    45b2:	70 93 57 01 	sts	0x0157, r23	; 0x800157 <__brkval+0x1>
    45b6:	60 93 56 01 	sts	0x0156, r22	; 0x800156 <__brkval>
    45ba:	fa 01       	movw	r30, r20
    45bc:	21 93       	st	Z+, r18
    45be:	31 93       	st	Z+, r19
    45c0:	a1 cf       	rjmp	.-190    	; 0x4504 <.L1>

000045c2 <free>:
    45c2:	cf 93       	push	r28
    45c4:	df 93       	push	r29
    45c6:	9c 01       	movw	r18, r24
    45c8:	00 97       	sbiw	r24, 0x00	; 0
    45ca:	d9 f0       	breq	.+54     	; 0x4602 <.L18>
    45cc:	fc 01       	movw	r30, r24
    45ce:	32 97       	sbiw	r30, 0x02	; 2
    45d0:	13 82       	std	Z+3, r1	; 0x03
    45d2:	12 82       	std	Z+2, r1	; 0x02
    45d4:	a0 91 54 01 	lds	r26, 0x0154	; 0x800154 <__flp>
    45d8:	b0 91 55 01 	lds	r27, 0x0155	; 0x800155 <__flp+0x1>
    45dc:	10 97       	sbiw	r26, 0x00	; 0
    45de:	09 f0       	breq	.+2      	; 0x45e2 <L0^A+0x2>

000045e0 <L0^A>:
    45e0:	86 c0       	rjmp	.+268    	; 0x46ee <.L21>
    45e2:	80 81       	ld	r24, Z
    45e4:	91 81       	ldd	r25, Z+1	; 0x01
    45e6:	28 0f       	add	r18, r24
    45e8:	39 1f       	adc	r19, r25
    45ea:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <__brkval>
    45ee:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <__brkval+0x1>
    45f2:	82 17       	cp	r24, r18
    45f4:	93 07       	cpc	r25, r19
    45f6:	09 f0       	breq	.+2      	; 0x45fa <L0^A+0x2>

000045f8 <L0^A>:
    45f8:	5f c0       	rjmp	.+190    	; 0x46b8 <.L26>
    45fa:	f0 93 57 01 	sts	0x0157, r31	; 0x800157 <__brkval+0x1>
    45fe:	e0 93 56 01 	sts	0x0156, r30	; 0x800156 <__brkval>

00004602 <.L18>:
    4602:	df 91       	pop	r29
    4604:	cf 91       	pop	r28
    4606:	08 95       	ret

00004608 <.L24>:
    4608:	ce 17       	cp	r28, r30
    460a:	df 07       	cpc	r29, r31
    460c:	08 f0       	brcs	.+2      	; 0x4610 <.L28>

0000460e <L0^A>:
    460e:	59 c0       	rjmp	.+178    	; 0x46c2 <.L23>

00004610 <.L28>:
    4610:	ae 01       	movw	r20, r28
    4612:	0a 80       	ldd	r0, Y+2	; 0x02
    4614:	db 81       	ldd	r29, Y+3	; 0x03
    4616:	c0 2d       	mov	r28, r0
    4618:	20 97       	sbiw	r28, 0x00	; 0
    461a:	b1 f7       	brne	.-20     	; 0x4608 <.L24>

0000461c <.L25>:
    461c:	ea 01       	movw	r28, r20
    461e:	fb 83       	std	Y+3, r31	; 0x03
    4620:	ea 83       	std	Y+2, r30	; 0x02
    4622:	29 91       	ld	r18, Y+
    4624:	39 91       	ld	r19, Y+
    4626:	ce 01       	movw	r24, r28
    4628:	82 0f       	add	r24, r18
    462a:	93 1f       	adc	r25, r19
    462c:	e8 17       	cp	r30, r24
    462e:	f9 07       	cpc	r31, r25
    4630:	61 f4       	brne	.+24     	; 0x464a <.L30>
    4632:	80 81       	ld	r24, Z
    4634:	91 81       	ldd	r25, Z+1	; 0x01
    4636:	02 96       	adiw	r24, 0x02	; 2
    4638:	82 0f       	add	r24, r18
    463a:	93 1f       	adc	r25, r19
    463c:	ea 01       	movw	r28, r20
    463e:	99 83       	std	Y+1, r25	; 0x01
    4640:	88 83       	st	Y, r24
    4642:	82 81       	ldd	r24, Z+2	; 0x02
    4644:	93 81       	ldd	r25, Z+3	; 0x03
    4646:	9b 83       	std	Y+3, r25	; 0x03
    4648:	8a 83       	std	Y+2, r24	; 0x02

0000464a <.L30>:
    464a:	e0 e0       	ldi	r30, 0x00	; 0
    464c:	f0 e0       	ldi	r31, 0x00	; 0

0000464e <.L31>:
    464e:	12 96       	adiw	r26, 0x02	; 2
    4650:	8d 91       	ld	r24, X+
    4652:	9c 91       	ld	r25, X
    4654:	13 97       	sbiw	r26, 0x03	; 3
    4656:	00 97       	sbiw	r24, 0x00	; 0
    4658:	09 f0       	breq	.+2      	; 0x465c <L0^A+0x2>

0000465a <L0^A>:
    465a:	4e c0       	rjmp	.+156    	; 0x46f8 <.L36>
    465c:	ed 01       	movw	r28, r26
    465e:	89 91       	ld	r24, Y+
    4660:	99 91       	ld	r25, Y+
    4662:	8c 0f       	add	r24, r28
    4664:	9d 1f       	adc	r25, r29
    4666:	20 91 56 01 	lds	r18, 0x0156	; 0x800156 <__brkval>
    466a:	30 91 57 01 	lds	r19, 0x0157	; 0x800157 <__brkval+0x1>
    466e:	28 17       	cp	r18, r24
    4670:	39 07       	cpc	r19, r25
    4672:	39 f6       	brne	.-114    	; 0x4602 <.L18>
    4674:	30 97       	sbiw	r30, 0x00	; 0
    4676:	09 f0       	breq	.+2      	; 0x467a <L0^A+0x2>

00004678 <L0^A>:
    4678:	42 c0       	rjmp	.+132    	; 0x46fe <.L33>
    467a:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <__flp+0x1>
    467e:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <__flp>

00004682 <.L34>:
    4682:	b0 93 57 01 	sts	0x0157, r27	; 0x800157 <__brkval+0x1>
    4686:	a0 93 56 01 	sts	0x0156, r26	; 0x800156 <__brkval>
    468a:	bb cf       	rjmp	.-138    	; 0x4602 <.L18>

0000468c <.L37>:
    468c:	b3 83       	std	Z+3, r27	; 0x03
    468e:	a2 83       	std	Z+2, r26	; 0x02
    4690:	80 81       	ld	r24, Z
    4692:	91 81       	ldd	r25, Z+1	; 0x01
    4694:	28 0f       	add	r18, r24
    4696:	39 1f       	adc	r19, r25
    4698:	a2 17       	cp	r26, r18
    469a:	b3 07       	cpc	r27, r19
    469c:	69 f4       	brne	.+26     	; 0x46b8 <.L26>
    469e:	02 96       	adiw	r24, 0x02	; 2
    46a0:	2d 91       	ld	r18, X+
    46a2:	3c 91       	ld	r19, X
    46a4:	11 97       	sbiw	r26, 0x01	; 1
    46a6:	82 0f       	add	r24, r18
    46a8:	93 1f       	adc	r25, r19
    46aa:	91 83       	std	Z+1, r25	; 0x01
    46ac:	80 83       	st	Z, r24
    46ae:	12 96       	adiw	r26, 0x02	; 2
    46b0:	8d 91       	ld	r24, X+
    46b2:	9c 91       	ld	r25, X
    46b4:	93 83       	std	Z+3, r25	; 0x03
    46b6:	82 83       	std	Z+2, r24	; 0x02

000046b8 <.L26>:
    46b8:	f0 93 55 01 	sts	0x0155, r31	; 0x800155 <__flp+0x1>
    46bc:	e0 93 54 01 	sts	0x0154, r30	; 0x800154 <__flp>
    46c0:	a0 cf       	rjmp	.-192    	; 0x4602 <.L18>

000046c2 <.L23>:
    46c2:	d3 83       	std	Z+3, r29	; 0x03
    46c4:	c2 83       	std	Z+2, r28	; 0x02
    46c6:	80 81       	ld	r24, Z
    46c8:	91 81       	ldd	r25, Z+1	; 0x01
    46ca:	28 0f       	add	r18, r24
    46cc:	39 1f       	adc	r19, r25
    46ce:	c2 17       	cp	r28, r18
    46d0:	d3 07       	cpc	r29, r19
    46d2:	09 f0       	breq	.+2      	; 0x46d6 <L0^A+0x2>

000046d4 <L0^A>:
    46d4:	a3 cf       	rjmp	.-186    	; 0x461c <.L25>
    46d6:	02 96       	adiw	r24, 0x02	; 2
    46d8:	28 81       	ld	r18, Y
    46da:	39 81       	ldd	r19, Y+1	; 0x01
    46dc:	82 0f       	add	r24, r18
    46de:	93 1f       	adc	r25, r19
    46e0:	91 83       	std	Z+1, r25	; 0x01
    46e2:	80 83       	st	Z, r24
    46e4:	8a 81       	ldd	r24, Y+2	; 0x02
    46e6:	9b 81       	ldd	r25, Y+3	; 0x03
    46e8:	93 83       	std	Z+3, r25	; 0x03
    46ea:	82 83       	std	Z+2, r24	; 0x02
    46ec:	97 cf       	rjmp	.-210    	; 0x461c <.L25>

000046ee <.L21>:
    46ee:	ae 17       	cp	r26, r30
    46f0:	bf 07       	cpc	r27, r31
    46f2:	60 f6       	brcc	.-104    	; 0x468c <.L37>
    46f4:	ed 01       	movw	r28, r26
    46f6:	8c cf       	rjmp	.-232    	; 0x4610 <.L28>

000046f8 <.L36>:
    46f8:	fd 01       	movw	r30, r26
    46fa:	dc 01       	movw	r26, r24
    46fc:	a8 cf       	rjmp	.-176    	; 0x464e <.L31>

000046fe <.L33>:
    46fe:	13 82       	std	Z+3, r1	; 0x03
    4700:	12 82       	std	Z+2, r1	; 0x02
    4702:	bf cf       	rjmp	.-130    	; 0x4682 <.L34>

00004704 <abort>:
    4704:	81 e0       	ldi	r24, 0x01	; 1
    4706:	90 e0       	ldi	r25, 0x00	; 0
    4708:	f8 94       	cli
    470a:	0c 94 87 23 	jmp	0x470e	; 0x470e <_exit>

0000470e <_exit>:
    470e:	f8 94       	cli

00004710 <__stop_program>:
    4710:	ff cf       	rjmp	.-2      	; 0x4710 <__stop_program>

00004712 <L0^A>:
    4712:	26 0b       	sbc	r18, r22
    4714:	bb 06       	cpc	r11, r27
    4716:	05 07       	cpc	r16, r21
    4718:	bb 06       	cpc	r11, r27
    471a:	8c 07       	cpc	r24, r28
    471c:	bb 06       	cpc	r11, r27
    471e:	11 08       	sbc	r1, r1
    4720:	bb 06       	cpc	r11, r27
    4722:	4c 08       	sbc	r4, r12
    4724:	bb 06       	cpc	r11, r27
    4726:	e7 08       	sbc	r14, r7
    4728:	bb 06       	cpc	r11, r27
    472a:	22 09       	sbc	r18, r2
    472c:	bb 06       	cpc	r11, r27
    472e:	5e 09       	sbc	r21, r14
    4730:	bb 06       	cpc	r11, r27
    4732:	a0 09       	sbc	r26, r0
    4734:	bb 06       	cpc	r11, r27
    4736:	e9 09       	sbc	r30, r9
    4738:	bb 06       	cpc	r11, r27
    473a:	2c 0a       	sbc	r2, r28
    473c:	bb 06       	cpc	r11, r27
    473e:	62 0a       	sbc	r6, r18
    4740:	bb 06       	cpc	r11, r27
    4742:	c2 0a       	sbc	r12, r18
    4744:	bb 06       	cpc	r11, r27
    4746:	1e 0b       	sbc	r17, r30
    4748:	bb 06       	cpc	r11, r27
    474a:	bb 06       	cpc	r11, r27

0000474c <.L114>:
    474c:	d1 06       	cpc	r13, r17
    474e:	ec 06       	cpc	r14, r28
    4750:	06 07       	cpc	r16, r22
    4752:	ec 06       	cpc	r14, r28
    4754:	8d 07       	cpc	r24, r29
    4756:	ec 06       	cpc	r14, r28
    4758:	12 08       	sbc	r1, r2
    475a:	ec 06       	cpc	r14, r28
    475c:	4d 08       	sbc	r4, r13
    475e:	ec 06       	cpc	r14, r28
    4760:	e8 08       	sbc	r14, r8
    4762:	ec 06       	cpc	r14, r28
    4764:	23 09       	sbc	r18, r3
    4766:	ec 06       	cpc	r14, r28
    4768:	5f 09       	sbc	r21, r15
    476a:	ec 06       	cpc	r14, r28
    476c:	a1 09       	sbc	r26, r1
    476e:	ec 06       	cpc	r14, r28
    4770:	ea 09       	sbc	r30, r10
    4772:	ec 06       	cpc	r14, r28
    4774:	2d 0a       	sbc	r2, r29
    4776:	ec 06       	cpc	r14, r28
    4778:	63 0a       	sbc	r6, r19
    477a:	ec 06       	cpc	r14, r28
    477c:	c3 0a       	sbc	r12, r19
    477e:	ec 06       	cpc	r14, r28
    4780:	1f 0b       	sbc	r17, r31
    4782:	ec 06       	cpc	r14, r28
    4784:	ec 06       	cpc	r14, r28
