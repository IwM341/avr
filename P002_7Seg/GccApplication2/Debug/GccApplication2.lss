
GccApplication2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000017c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000128  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000017c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001ac  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  000001ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000893  00000000  00000000  00000214  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007b5  00000000  00000000  00000aa7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002d9  00000000  00000000  0000125c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00001538  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003eb  00000000  00000000  0000156c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000025a  00000000  00000000  00001957  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001bb1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   8:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  10:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  14:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  18:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  1c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  20:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  24:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  28:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  2c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  30:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  34:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  38:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  3c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  40:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  44:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  48:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  4c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  50:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  54:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  58:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  5c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  60:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  64:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  68:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  6c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  70:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  74:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  78:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	11 e0       	ldi	r17, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	e8 e2       	ldi	r30, 0x28	; 40
  90:	f1 e0       	ldi	r31, 0x01	; 1
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	a0 30       	cpi	r26, 0x00	; 0
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>
  9e:	0e 94 55 00 	call	0xaa	; 0xaa <main>
  a2:	0c 94 92 00 	jmp	0x124	; 0x124 <_exit>

000000a6 <__bad_interrupt>:
  a6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000aa <main>:
    }
}
*/
int main(void)
{
	DDRD = 0xFF;
  aa:	8f ef       	ldi	r24, 0xFF	; 255
  ac:	8a b9       	out	0x0a, r24	; 10
	DDRB = 0b00001111;
  ae:	8f e0       	ldi	r24, 0x0F	; 15
  b0:	84 b9       	out	0x04, r24	; 4
	
	unsigned char i = 0;
  b2:	40 e0       	ldi	r20, 0x00	; 0
	unsigned char dg0,dg1,dg2;
	unsigned char tmp;
	while (1)
	{
		tmp = i;
		dg0 = tmp%10;
  b4:	9d ec       	ldi	r25, 0xCD	; 205
  b6:	49 9f       	mul	r20, r25
  b8:	31 2d       	mov	r19, r1
  ba:	11 24       	eor	r1, r1
  bc:	23 2f       	mov	r18, r19
  be:	26 95       	lsr	r18
  c0:	26 95       	lsr	r18
  c2:	26 95       	lsr	r18
  c4:	82 2f       	mov	r24, r18
  c6:	88 0f       	add	r24, r24
  c8:	28 2f       	mov	r18, r24
  ca:	22 0f       	add	r18, r18
  cc:	22 0f       	add	r18, r18
  ce:	82 0f       	add	r24, r18
  d0:	24 2f       	mov	r18, r20
  d2:	28 1b       	sub	r18, r24
		tmp /= 10;
  d4:	36 95       	lsr	r19
  d6:	36 95       	lsr	r19
  d8:	36 95       	lsr	r19
		dg1 = tmp%10;
  da:	39 9f       	mul	r19, r25
  dc:	91 2d       	mov	r25, r1
  de:	11 24       	eor	r1, r1
  e0:	96 95       	lsr	r25
  e2:	96 95       	lsr	r25
  e4:	96 95       	lsr	r25
  e6:	99 0f       	add	r25, r25
  e8:	89 2f       	mov	r24, r25
  ea:	88 0f       	add	r24, r24
  ec:	88 0f       	add	r24, r24
  ee:	98 0f       	add	r25, r24
  f0:	39 1b       	sub	r19, r25
  f2:	93 2f       	mov	r25, r19
		tmp /= 10;
  f4:	39 e2       	ldi	r19, 0x29	; 41
  f6:	43 9f       	mul	r20, r19
  f8:	31 2d       	mov	r19, r1
  fa:	11 24       	eor	r1, r1
		dg2 = tmp%10;
  fc:	32 95       	swap	r19
  fe:	3f 70       	andi	r19, 0x0F	; 15
		
		PORTD = dg0 | dg1<<4;
 100:	50 e1       	ldi	r21, 0x10	; 16
 102:	95 9f       	mul	r25, r21
 104:	c0 01       	movw	r24, r0
 106:	11 24       	eor	r1, r1
 108:	82 2b       	or	r24, r18
 10a:	8b b9       	out	0x0b, r24	; 11
		PORTB =  dg2;
 10c:	35 b9       	out	0x05, r19	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 10e:	8f ef       	ldi	r24, 0xFF	; 255
 110:	94 e3       	ldi	r25, 0x34	; 52
 112:	2c e0       	ldi	r18, 0x0C	; 12
 114:	81 50       	subi	r24, 0x01	; 1
 116:	90 40       	sbci	r25, 0x00	; 0
 118:	20 40       	sbci	r18, 0x00	; 0
 11a:	e1 f7       	brne	.-8      	; 0x114 <main+0x6a>
 11c:	00 c0       	rjmp	.+0      	; 0x11e <main+0x74>
 11e:	00 00       	nop
		_delay_ms(500);
		i++;
 120:	4f 5f       	subi	r20, 0xFF	; 255
 122:	c8 cf       	rjmp	.-112    	; 0xb4 <main+0xa>

00000124 <_exit>:
 124:	f8 94       	cli

00000126 <__stop_program>:
 126:	ff cf       	rjmp	.-2      	; 0x126 <__stop_program>
