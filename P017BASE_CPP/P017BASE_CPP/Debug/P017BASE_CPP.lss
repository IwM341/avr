
P017BASE_CPP.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000132  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000de  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000132  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000164  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  000001a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000833  00000000  00000000  000001e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006fc  00000000  00000000  00000a17  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002d3  00000000  00000000  00001113  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000064  00000000  00000000  000013e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003f5  00000000  00000000  0000144c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000098  00000000  00000000  00001841  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  000018d9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a0 30       	cpi	r26, 0x00	; 0
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>

00000084 <__do_copy_data>:
  84:	11 e0       	ldi	r17, 0x01	; 1
  86:	a0 e0       	ldi	r26, 0x00	; 0
  88:	b1 e0       	ldi	r27, 0x01	; 1
  8a:	ee ed       	ldi	r30, 0xDE	; 222
  8c:	f0 e0       	ldi	r31, 0x00	; 0
  8e:	02 c0       	rjmp	.+4      	; 0x94 <__do_copy_data+0x10>
  90:	05 90       	lpm	r0, Z+
  92:	0d 92       	st	X+, r0
  94:	a0 30       	cpi	r26, 0x00	; 0
  96:	b1 07       	cpc	r27, r17
  98:	d9 f7       	brne	.-10     	; 0x90 <__do_copy_data+0xc>
  9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
  9e:	0c 94 6d 00 	jmp	0xda	; 0xda <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:
struct uint24_t{
	uint32_t val:24;	
};
int main(void)
{
    uint24_t x{PORTB+123};
  a6:	25 b1       	in	r18, 0x05	; 5
  a8:	30 e0       	ldi	r19, 0x00	; 0
  aa:	25 58       	subi	r18, 0x85	; 133
  ac:	3f 4f       	sbci	r19, 0xFF	; 255
	uint24_t y{PORTB+321};
  ae:	85 b1       	in	r24, 0x05	; 5
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	8f 5b       	subi	r24, 0xBF	; 191
  b4:	9e 4f       	sbci	r25, 0xFE	; 254
  b6:	09 2e       	mov	r0, r25
  b8:	00 0c       	add	r0, r0
  ba:	aa 0b       	sbc	r26, r26
	uint24_t res {x.val+y.val};
  bc:	82 0f       	add	r24, r18
  be:	93 1f       	adc	r25, r19
  c0:	a1 1d       	adc	r26, r1
  c2:	37 fd       	sbrc	r19, 7
  c4:	aa 95       	dec	r26
	PORTB = res.val;
  c6:	85 b9       	out	0x05, r24	; 5
	PORTB = res.val>>8; 
  c8:	b0 e0       	ldi	r27, 0x00	; 0
  ca:	89 2f       	mov	r24, r25
  cc:	9a 2f       	mov	r25, r26
  ce:	ab 2f       	mov	r26, r27
  d0:	bb 27       	eor	r27, r27
  d2:	85 b9       	out	0x05, r24	; 5
}
  d4:	80 e0       	ldi	r24, 0x00	; 0
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	08 95       	ret

000000da <_exit>:
  da:	f8 94       	cli

000000dc <__stop_program>:
  dc:	ff cf       	rjmp	.-2      	; 0xdc <__stop_program>
